{"version":3,"sources":["Applications/CocosCreator.app/Contents/Resources/app.asar/node_modules/browser-pack/_prelude.js","Script/Gamescript/EffectScript.js","project.js","Script/Gamescript/GameMap.js","Script/Gamescript/GamePlayScript.js","Script/Gamescript/HomeScript.js","Script/LIB/PadController.js","Script/Gamescript/PanelUserInfo.js","Script/TestScript/TestConnect.js","Script/TestScript/TestEffect.js","Script/TestScript/TestParticleSystemPos.js","Script/LIB/Utils.js","Script/Gamescript/bulletScript.js","Script/Gamescript/explosionScript.js","Script/Gamescript/itemScript.js","Script/Gamescript/obsScript.js","Script/LIB/socket.io.js","Script/Gamescript/tankScript.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","EffectScript","module","cc","_RFpush","Class","extends","Component","properties","onLoad","this","schudleFixPosition","setFixedPosition","rX","node","parent","x","rY","y","schedule","dt","_RFpop","GameMap","Utils","t_prefab","type","Prefab","default","obs_prefab","bullet_prefab","item_ammo_prefab","item_health_prefab","tankAtlas","SpriteAtlas","eff_hit_wall","eff_hit_tank","eff_gun_fire","eff_tank_explosion","dictObs","dictTanks","dictBullets","dictItems","MYPLAYER","t_add_tank","t_add_bullet","t_add_obs","t_add_items","t_add_explosion","isOver","estimateMoveTank","updateFrameStep","msgObj","beginUpdate","arr_tank","managerTank","finishUpdate","updateMapPosition","arr_obs","managerObs","arr_bullet","b","managerBullet","arr_items","managerItems","arr_ex","managerExplosion","loadMSGTest","dictUpdate","ikey","tmp_script","isActiveSC","arrDelete","isValid","push","deleteid","maxlengt","node_tmp","type_of_dict","obj_type","gid","script_bullet_delete","clearBulletEffect","script_item_delete","beginClean","removeFromParent","c_tank_script","Object","keys","c_obs_script","c_item_script","c_bullet_script","tong","c_all_node","children","msglog","arr_Ex","i_e","i_e_m","e_info","decodePackExplosion","status","stt","x_p","Number","y_p","tmpnode","instantiate","setPosition","p","setLocalZOrder","scriptEffect","getComponent","addChild","tmp_effect_gun","scale","scriptnode","tid","guntank","i_t","i_t_m","obj_info","decodePackTank","tank_script","id","tankNumberID","parseInt","tank_node","TANKID","colorID","Math","abs","level","levelGun","updateFrame","activeInfo","i_o","j_o_m","tmp_info","decodePackObs","obs_script","tmp_Obs","initDisplay","i_b","j_b_m","decodePackBullet","bullet_script","tmp_Bullet","i_i","j_i_m","decodePackItem","item_script","tmp_Item","otherMSG","x_pos","y_pos","self","countStep","TIME_FRAME_SERVER","checkCollision","keyobj","tankscript","maxMove","speedMove","nextFrameMove","dt_move","tmp_tank","dirMv","key_b","dtMv","convert_angle","angleMove","tmpPos","cos","sin","onDisable","unscheduleAllCallbacks","checkCollisionWithObstacble","obj_b","isC","obs_sc","min_x","max_x","max_y","min_y","checkCollisionWithTank","../LIB/Utils","GamePlayScript","hub_prefab","lbStatus","Label","nodecontro","Node","panelInfo","gameMap","tinyPlayer","lbscore","testnodxx","actionBackHome","socket","disconnect","director","loadScene","ListenNativeHidden","sys","isNative","lstnr","EventListenerCustom","create","eventManager","addListener","script_controller","mainscript","mapScript","panelInfoScript","actionListenKeyPress","addTouchListenEvent","timelog","actionLoadGameBegin","AdsManager","os","OS_IOS","jsb","reflection","callStaticMethod","OS_ANDROID","update","logscreen","string","log","removeListener","touchListen","keyEventListen","updateMoveController","dir_move","numberint","emit","event","EventListener","TOUCH_ONE_BY_ONE","swallowTouches","onTouchBegan","touch","pos","convertToNodeSpace","getLocation","winSize","width","height","vfire","pNormalize","v2","angle","pToAngle","bind","KEYBOARD","onKeyPressed","keyCode","movestt","KEY","d","w","last_movestt","hub","urlconnect","config","forceNew","reconnection","reconnectionDelay","reconnectionDelayMax","reconnectionAttempts","io","connect","console","on","destroy","str_info","loadUserInfo","message","msgReceive","JSON","parse","keydecode","deCode","key","actionRP","repeatForever","blink","stopAllActions","runAction","updateTinyMapGame","messageconnect","xpos","ypos","myLevel","myMaxAmmo","myMaxHealth","prAmmo","scaleX","ammo","prHP","hp","lbCountAmmo","lbCountHp","lbLevel","score","lbSpeed","sp","toFixed","socket.io","HomeScript","nodeWeb","nodeMobile","txtUserName","EditBox","active","strx","localStorage","getItem","msg","acRate","urlRateApp","openURL","acHighScore","ret","acSetting","acShare","actionWebLoadAppstore","actionWebLoadAppPlayStore","acFacebookPage","acTwitterPage","actionLoadGaamePlayer","playerName","trim","setItem","PadController","hubcontrol","isBrowser","size","getVisibleSize","yclose","y_explain","xclose","x_explain","closePos","ex_pos","PadDir","closeAllButton","changeframe","updatePadDir","bt0","allchild","ix","bt1","rotation","objectMovePos","obj_node","actionmv","moveTo","objectMoveCenter","explainAllButton","moveAndCloseAllButton","moveCenter","callFunc","moveToCenter","delaytime","delayTime","moveRootPos","moveToClosepos","actionsc","sequence","objsc","actionMoveUp","actionMoveLeft","actionMoveRight","actionMoveDown","actionEX","PanelUserInfo","TestConnect","label_status","actionConnect","msgSend","TestEffect","spBullet","msTexture","Texture2D","spX1","spX2","frameAlts","Color","sprite","spriteFrame","getSpriteFrame","testMovexx","actionCheckEffect","TestParticleSystemPos","logMyPosition","msgobject","strRT","replace","end","begin","newkey","substring","objectEndcode","psend","x_tmp","xp","y_tmp","yp","e_g_r_d","dir","tank_angle","gun_angle","e_x","level_score","level_s","score_s","t_ID","spped","m","tankName","nameserver","objectDecode","name","gR","numinfo","idObj","sodu","wd","hd","objDecode","h","number_info","bullet_angle","bullet_id","ag","numberinfo","iditem","typeitem","bulletScript","t_r","updateEffectPosition","explosionScript","itemScript","childx_effect","ac1","fadeTo","random0To1","ac2","repeat","obsScript","ww","hh","scaleY","Opos","global","define","amd","g","window",1,"_dereq_","./lib/",2,"parser","./socket","engine.io-parser",3,"Socket","uri","opts","parseuri","hostname","host","secure","protocol","port","query","location","agent","parseqs","decode","upgrade","path","forceJSONP","jsonp","forceBase64","enablesXDR","timestampParam","timestampRequests","transports","readyState","writeBuffer","policyPort","rememberUpgrade","binaryType","onlyBinaryUpgrades","perMessageDeflate","threshold","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","undefined","freeGlobal","extraHeaders","open","clone","obj","hasOwnProperty","Emitter","debug","index","parsejson","priorWebsocketSuccess","prototype","Transport","createTransport","EIO","transport","sid","indexOf","setTimeout","shift","setTransport","removeAllListeners","onDrain","packet","onPacket","onError","onClose","probe","onTransportOpen","upgradeLosesBinary","supportsBinary","failed","send","data","once","upgrading","pause","cleanup","flush","err","freezeTransport","close","onerror","error","onTransportClose","onclose","onupgrade","to","onOpen","upgrades","onHandshake","setPing","filterUpgrades","pingInterval","pingTimeout","onHeartbeat","timeout","clearTimeout","pingTimeoutTimer","pingIntervalTimer","ping","sendPacket","splice","prevBufferLen","writable","write","options","fn","compress","cleanupAndClose","waitForUpgrade","reason","desc","filteredUpgrades","j","./transport","./transports","component-emitter","indexof",4,"description","doOpen","doClose","packets","onData","decodePacket",5,"polling","xhr","xd","xs","isSSL","xdomain","xscheme","XMLHttpRequest","XHR","JSONP","websocket","./polling-jsonp","./polling-xhr","./websocket","xmlhttprequest-ssl",6,"empty","JSONPPolling","Polling","callbacks","___eio","document","addEventListener","script","inherit","rNewline","rEscapedNewline","parentNode","removeChild","form","iframe","doPoll","createElement","async","src","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","isUAgecko","navigator","test","userAgent","doWrite","complete","initIframe","html","iframeId","area","className","style","position","top","left","target","method","setAttribute","action","value","submit","attachEvent","onreadystatechange","onload","./polling","component-inherit",7,"Request","isBinary","unloadHandler","requests","abort","request","req","sendXhr","pollXhr","setDisableHeaderCheck","setRequestHeader","responseType","withCredentials","hasXDR","responseText","requestsCount","onSuccess","fromError","contentType","getResponseHeader","split","response","String","fromCharCode","apply","Uint8Array","ui8Arr","dataArray","idx","XDomainRequest",8,"hasXHR2","yeast","poll","onPause","total","callback","decodePayload","callbackfn","encodePayload","schema","b64","encode","ipv6","../transport",9,"WS","BrowserWebSocket","WebSocket","MozWebSocket","check","protocols","headers","ws","supports","binary","addEventListeners","onopen","onmessage","ev","done","encodePacket","len","Buffer","byteLength",10,"hasCORS","ActiveXObject","has-cors",11,"after","count","err_cb","proxy","result","bail","noop",12,"arraybuffer","start","bytes","slice","ArrayBuffer","abv","ii","buffer",13,"chars","base64","encoded1","encoded2","encoded3","encoded4","bufferLength",14,"mapArrayBufferViews","ary","chunk","buf","copy","set","byteOffset","BlobBuilderConstructor","bb","BlobBuilder","append","getBlob","BlobConstructor","Blob","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported",15,"mixin","_callbacks","off","arguments","removeEventListener","cb","args","listeners","hasListeners",16,"constructor",17,"useColors","documentElement","firebug","exception","table","toLowerCase","match","RegExp","$1","formatArgs","namespace","humanize","diff","c","color","concat","Array","lastC","Function","save","namespaces","storage","removeItem","load","localstorage","chrome","local","colors","formatters","v","stringify","enable","./debug",18,"selectColor","prevColor","disabled","enabled","curr","Date","ms","prevTime","prev","coerce","format","formatter","val","logFn","skips","substr","names","disable","stack",19,"encodeBase64Object","encodeArrayBuffer","encodeBase64Packet","contentArray","resultBuffer","encodeBlobAsArrayBuffer","fr","FileReader","readAsArrayBuffer","encodeBlob","dontSendBlobs","blob","map","each","next","eachWithIndex","el","hasBinary","sliceBuffer","base64encoder","utf8","isAndroid","isPhantomJS","pong","packetslist","utf8encode","encoded","readAsDataURL","b64data","typed","basic","btoa","utf8decode","charAt","decodeBase64Packet","asArray","rest","setLengthHeader","encodeOne","doneCallback","encodePayloadAsBlob","encodePayloadAsArrayBuffer","results","join","decodePayloadAsBinary","chr","encodedPackets","totalLength","reduce","acc","toString","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","binaryIdentifier","lengthAry","bufferTail","buffers","numberTooLong","tailArray","msgLength","./keys","arraybuffer.slice","base64-arraybuffer","has-binary",20,"arr","has",21,"_hasBinary","isBuffer","File","isArray","toJSON","isarray",22,23,24,25,"str","exec","parseFloat","short","round","long","plural","floor","ceil",26,"rvalidchars","rvalidescape","rvalidtokens","rvalidbraces","rtrimLeft","rtrimRight",27,"encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent",28,"re","parts","source","authority","ipv6uri",29,"root","ucs2decode","extra","output","counter","ucs2encode","array","stringFromCharCode","checkScalarValue","codePoint","toUpperCase","createByte","encodeCodePoint","symbol","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","tmp","freeExports","freeModule","version","nodeType","object",30,"num","alphabet","decoded","now","seed",31,"lookup","parsed","url","sameNamespace","cache","nsps","newConnection","multiplex","Manager","managers","./manager","./url","socket.io-parser",32,"subs","Infinity","randomizationFactor","backoff","Backoff","min","max","jitter","connecting","lastPing","encoding","packetBuffer","encoder","Encoder","decoder","Decoder","autoConnect","eio","emitAll","nsp","updateSocketIds","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","skipReconnect","openSub","errorSub","timer","onping","onpong","ondata","add","ondecoded","onConnecting","processPacketQueue","pack","sub","reset","delay","duration","onreconnect","attempt","./on","backo2","component-bind","engine.io-client",33,34,"json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","subEvents","unshift","parserType","EVENT","BINARY_EVENT","flags","pop","CONNECT","onpacket","onconnect","onevent","ACK","onack","BINARY_ACK","DISCONNECT","ondisconnect","ERROR","ack","sent","emitBuffered","to-array",35,"loc","href",36,"factor","pow","rand","random","deviation",37,38,39,"dup",40,41,42,43,44,45,46,"isBuf","deconstructPacket","_deconstructPacket","placeholder","_placeholder","newData","packetData","attachments","reconstructPacket","_reconstructPacket","removeBlobs","_removeBlobs","curKey","containingObject","pendingBlobs","fileReader","bloblessData","./is-buffer",47,"encodeAsString","encodeAsBinary","writeEncoding","deconstruction","reconstructor","decodeString","types","BinaryReconstructor","reconPack","takeBinaryData","finishedReconstruction","binData","./binary","json3",48,49,50,"runInContext","context","undef","isSupported","serialized","stringifySupported","isExtended","getClass","parseSupported","SyntaxError","TypeError","nativeJSON","isProperty","objectProto","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","functionClass","dateClass","numberClass","stringClass","arrayClass","booleanClass","charIndexBuggy","Months","getDay","year","month","property","members","__proto__","original","Properties","valueOf","isFunction","isConstructor","hasProperty","objectTypes","Escapes",92,"leadingZeroes","toPaddedString","unicodePrefix","quote","useCharIndex","symbols","charCode","serialize","whitespace","indentation","date","time","hours","minutes","seconds","milliseconds","element","prefix","filter","Index","Source","Unescapes",98,116,110,102,114,"lex","isSigned","get","hasMembers","walk","isLoader","function","previousJSON","isRestored","JSON3","noConflict",51,"list","tankScript","lbname","bodytank","count_updateRun","needUpdateName","gunR","tmpLevel","parrentNode","sp_body","sprite_body","tml_lv_gun","sp_gun","sprite_gun","tmp_hp","nodepr","nodeprsc","maxHP","Xsc","nodename","nodescore"],"mappings":"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","file":"project.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\ncc._RFpush(module, '09ed9DLIZ5IEYbO7o9HRA+I', 'EffectScript');\n// Script/Gamescript/EffectScript.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // COCOS-CREATOR LA ENGINE KHON NAN NHAT, EFFECT RENDER STATIC THEO SCREEN :| BO TAY\n\n    onLoad: function onLoad() {\n        this.schudleFixPosition();\n    },\n    setFixedPosition: function setFixedPosition() {\n        this.rX = this.node.parent.x;\n        this.rY = this.node.parent.y;\n    },\n    schudleFixPosition: function schudleFixPosition() {\n        this.schedule(function (dt) {\n            //var dtx=this.node.parent.x-this.rX;\n            //var dty=this.node.parent.y-this.rY;\n            //this.rX=this.node.parent.x;\n            //this.rY=this.node.parent.y;\n            //\n            //this.node.x=this.node.x+dtx/2;\n            //this.node.y=this.node.y+dty/2;\n        }, 0.002);\n    }\n});\n\ncc._RFpop();","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"EffectScript\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, '09ed9DLIZ5IEYbO7o9HRA+I', 'EffectScript');\n// Script/Gamescript/EffectScript.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // COCOS-CREATOR LA ENGINE KHON NAN NHAT, EFFECT RENDER STATIC THEO SCREEN :| BO TAY\n\n    onLoad: function onLoad() {\n        this.schudleFixPosition();\n    },\n    setFixedPosition: function setFixedPosition() {\n        this.rX = this.node.parent.x;\n        this.rY = this.node.parent.y;\n    },\n    schudleFixPosition: function schudleFixPosition() {\n        this.schedule(function (dt) {\n            //var dtx=this.node.parent.x-this.rX;\n            //var dty=this.node.parent.y-this.rY;\n            //this.rX=this.node.parent.x;\n            //this.rY=this.node.parent.y;\n            //\n            //this.node.x=this.node.x+dtx/2;\n            //this.node.y=this.node.y+dty/2;\n        }, 0.002);\n    }\n});\n\ncc._RFpop();\n},{}],\"GameMap\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, '5b781n3CftGaqia/EnKu/Bf', 'GameMap');\n// Script/Gamescript/GameMap.js\n\nvar Utils = require('../LIB/Utils');\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        t_prefab: {\n            type: cc.Prefab,\n            \"default\": null\n        },\n        obs_prefab: {\n            type: cc.Prefab,\n            \"default\": null\n        },\n        bullet_prefab: {\n            type: cc.Prefab,\n            \"default\": null\n        },\n        item_ammo_prefab: {\n            type: cc.Prefab,\n            \"default\": null\n        },\n        item_health_prefab: {\n            type: cc.Prefab,\n            \"default\": null\n        },\n\n        tankAtlas: cc.SpriteAtlas,\n\n        eff_hit_wall: cc.Prefab,\n        eff_hit_tank: cc.Prefab,\n        eff_gun_fire: cc.Prefab,\n        eff_tank_explosion: cc.Prefab\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        // khai bao dang dictionary key-value, mục đích là chỉ chứa các script điều khiển việc hiển thị các đối tượng trong node mapgame\n        this.dictObs = {}; // obj_type=1;\n        this.dictTanks = {}; // obj_type=2;\n        this.dictBullets = {}; // obj_type=3;\n        this.dictItems = {}; // obj_type=3;\n\n        this.MYPLAYER = null;\n        this.t_add_tank = 0;\n        this.t_add_bullet = 0;\n        this.t_add_obs = 0;\n        this.t_add_items = 0;\n        this.t_add_explosion = 0;\n\n        this.isOver = false;\n        this.estimateMoveTank();\n    },\n\n    /**\n     * trong hàm updateFrameStep thì đầu tiên gọi điến hàm beginUpdateFrame, kết thúc gọi đến hàm endUpdateFrame\n     * Mục đích là để kiểm tra những đối tượng nào mà trên server không còn trả về nữa thì destroy nó đi như là \n     *  (ra ngoài view màn hình(tank,items,obs), bị nổ(tank) ,hoặc hết time-life (items,bullet) )\n     * \n     * \n     * \n     * */\n\n    updateFrameStep: function updateFrameStep(msgObj) {\n        //----------TANK ----\n        this.beginUpdate(this.dictTanks);\n        var arr_tank = msgObj.t;\n        this.managerTank(arr_tank);\n        this.finishUpdate(this.dictTanks);\n\n        this.updateMapPosition();\n\n        //----------OBS ----\n\n        var arr_obs = msgObj.o;\n        if (!(typeof arr_obs === \"undefined\")) {\n            this.beginUpdate(this.dictObs);\n            this.managerObs(arr_obs);\n            this.finishUpdate(this.dictObs);\n        }\n\n        //----------BULLET ----\n        this.beginUpdate(this.dictBullets);\n        var arr_bullet = msgObj.b;\n        this.managerBullet(arr_bullet);\n        this.finishUpdate(this.dictBullets);\n\n        //----------ITEM ----\n\n        var arr_items = msgObj.i;\n        if (!(typeof arr_items === \"undefined\")) {\n            this.beginUpdate(this.dictItems);\n            this.managerItems(arr_items);\n            this.finishUpdate(this.dictItems);\n        }\n\n        //----------Explorsion ----\n        var arr_ex = msgObj.e;\n        this.managerExplosion(arr_ex);\n\n        this.loadMSGTest();\n    },\n\n    beginUpdate: function beginUpdate(dictUpdate) {\n        for (var ikey in dictUpdate) {\n            var tmp_script = dictUpdate[ikey];\n            tmp_script.node.isActiveSC = false;\n        }\n    },\n\n    finishUpdate: function finishUpdate(dictUpdate) {\n        var arrDelete = [];\n        for (var ikey in dictUpdate) {\n            var tmp_script = dictUpdate[ikey];\n            if (tmp_script.node.isActiveSC) {\n                continue;\n            }\n            if (cc.isValid(tmp_script.node)) {\n                arrDelete.push(tmp_script.node);\n            }\n        }\n\n        for (var deleteid = 0, maxlengt = arrDelete.length; deleteid < maxlengt; deleteid++) {\n            var node_tmp = arrDelete[deleteid];\n            var type_of_dict = node_tmp.obj_type;\n\n            if (type_of_dict == 1) {\n                delete this.dictObs[node_tmp.gid];\n            }\n            if (type_of_dict == 2) {\n                delete this.dictTanks[node_tmp.gid];\n            }\n            if (type_of_dict == 3) {\n                var script_bullet_delete = this.dictBullets[node_tmp.gid];\n                script_bullet_delete.clearBulletEffect();\n                delete this.dictBullets[node_tmp.gid];\n            }\n            if (type_of_dict == 4) {\n                var script_item_delete = this.dictItems[node_tmp.gid];\n                script_item_delete.beginClean();\n                delete this.dictItems[node_tmp.gid];\n            }\n            node_tmp.removeFromParent(true);\n            //node_tmp.destroy();\n        }\n    },\n\n    loadMSGTest: function loadMSGTest() {\n        // doan nay chi de test object meomory\n        this.c_tank_script = Object.keys(this.dictTanks).length;\n        this.c_obs_script = Object.keys(this.dictObs).length;\n        this.c_item_script = Object.keys(this.dictItems).length;\n        this.c_bullet_script = Object.keys(this.dictBullets).length;\n        var tong = this.c_tank_script + this.c_obs_script + this.c_item_script + this.c_bullet_script;\n        this.c_all_node = this.node.children.length - 1; // tru di 1 lan tiledMapBG\n        if (tong == this.c_all_node) {\n            this.msglog = \"count all object: \" + tong;\n        } else {\n            this.msglog = \"------>error: \" + tong + \"|\" + this.c_all_node + \"   info \" + \"t=\" + this.c_tank_script + \" obs=\" + this.c_obs_script + \" item=\" + this.c_item_script + \" bullet=\" + this.c_bullet_script;\n        }\n    },\n\n    managerExplosion: function managerExplosion(arr_Ex) {\n        for (var i_e = 0, i_e_m = arr_Ex.length; i_e < i_e_m; i_e++) {\n            var e_info = Utils.decodePackExplosion(arr_Ex[i_e]);\n            var status = e_info.stt;\n            status = status - 0;\n\n            var x_p = Number(e_info.x);\n            var y_p = Number(e_info.y);\n\n            this.t_add_explosion++;\n            if (status == 1) {\n                //dan ban trung tuong\n                var tmpnode = cc.instantiate(this.eff_hit_wall);\n\n                tmpnode.setPosition(cc.p(x_p, y_p));\n                tmpnode.setLocalZOrder(8);\n                var scriptEffect = tmpnode.getComponent(\"EffectScript\");\n\n                this.node.addChild(tmpnode);\n                scriptEffect.setFixedPosition();\n            }\n            if (status == 2) {//dan va cham xe tank\n\n            }\n            if (status >= 3 && status <= 6) {\n                //dan ban ra tu nong sung\n                var tmp_effect_gun = cc.instantiate(this.eff_gun_fire);\n                tmp_effect_gun.setPosition(cc.p(78, 2));\n                tmp_effect_gun.scale = 2;\n                tmp_effect_gun.setLocalZOrder(-3); // khong hieu sao -1,-2 lai khong duoc , bo tay\n                var scriptnode = this.dictTanks[e_info.tid];\n                if (typeof scriptnode === \"undefined\") {\n                    continue;\n                }\n                if (typeof scriptnode.node === \"undefined\") {\n                    continue;\n                }\n                var guntank = scriptnode.guntank;\n                scriptnode.guntank.addChild(tmp_effect_gun);\n            }\n            if (status === 0) {//xe tank no\n\n            }\n        }\n    },\n\n    managerTank: function managerTank(arr_tank) {\n        for (var i_t = 0, i_t_m = arr_tank.length; i_t < i_t_m; i_t++) {\n            var obj_info = Utils.decodePackTank(arr_tank[i_t]);\n            var tank_script = this.dictTanks[obj_info.id];\n            var tankNumberID = parseInt(obj_info.id);\n            //Utils.log(\"--->tank_tmp:\"+tank_tmp);\n            if (typeof tank_script === \"undefined\") {\n                // check bang null khong co tac dung :(\n                //Utils.log(\"add new tank game\");\n                var tank_node = cc.instantiate(this.t_prefab);\n                if (this.TANKID === tankNumberID) {\n                    this.MYPLAYER = tank_node;\n                }\n                var colorID = Math.abs(tankNumberID % 10);\n                if (colorID < 0) {\n                    colorID = 6;\n                } else if (colorID > 9) {\n                    colorID = 7;\n                }\n\n                tank_node.obj_type = 2;\n                tank_node.gid = obj_info.id;\n                tank_node.scale = 0.25;\n                tank_node.setLocalZOrder(5);\n\n                tank_script = tank_node.getComponent(\"tankScript\");\n                tank_script.gid = obj_info.id;\n                tank_script.colorID = colorID;\n                tank_script.level = 0;\n                tank_script.levelGun = 0;\n\n                this.node.addChild(tank_node);\n                this.dictTanks[tank_script.gid] = tank_script;\n\n                this.t_add_tank++;\n            }\n            tank_script.updateFrame(obj_info);\n            if (this.TANKID === tankNumberID) {\n                this.MYPLAYER.activeInfo = obj_info;\n            }\n        }\n        if (!this.MYPLAYER.isActiveSC) {\n            this.isOver = true;\n        }\n    },\n\n    managerObs: function managerObs(arr_obs) {\n        for (var i_o = 0, j_o_m = arr_obs.length; i_o < j_o_m; i_o++) {\n            var tmp_info = Utils.decodePackObs(arr_obs[i_o]);\n\n            var obs_script = this.dictObs[tmp_info.id];\n            if (typeof obs_script === \"undefined\") {\n                // Utils.log(\"Add new Obstacles\");\n                var tmp_Obs = cc.instantiate(this.obs_prefab);\n                tmp_Obs.obj_type = 1;\n                tmp_Obs.gid = tmp_info.id;\n                tmp_Obs.setLocalZOrder(2);\n\n                obs_script = tmp_Obs.getComponent(\"obsScript\");\n                obs_script.gid = tmp_info.id;\n                obs_script.initDisplay(tmp_info);\n                this.node.addChild(tmp_Obs);\n\n                this.dictObs[obs_script.gid] = obs_script;\n\n                this.t_add_obs++;\n            }\n            obs_script.node.isActiveSC = true;\n        }\n    },\n\n    managerBullet: function managerBullet(arr_bullet) {\n        for (var i_b = 0, j_b_m = arr_bullet.length; i_b < j_b_m; i_b++) {\n            var tmp_info = Utils.decodePackBullet(arr_bullet[i_b]);\n            var bullet_script = this.dictBullets[tmp_info.id];\n            if (typeof bullet_script === \"undefined\") {\n                // Utils.log(\"Add new Bullet\");\n                this.t_add_bullet++;\n                var tmp_Bullet = cc.instantiate(this.bullet_prefab);\n                tmp_Bullet.obj_type = 3;\n                tmp_Bullet.gid = tmp_info.id;\n                tmp_Bullet.setLocalZOrder(1);\n\n                bullet_script = tmp_Bullet.getComponent(\"bulletScript\");\n                bullet_script.gid = tmp_info.id;\n\n                this.node.addChild(tmp_Bullet);\n\n                this.dictBullets[bullet_script.gid] = bullet_script;\n            }\n            bullet_script.updateFrame(tmp_info);\n        }\n    },\n\n    managerItems: function managerItems(arr_items) {\n        for (var i_i = 0, j_i_m = arr_items.length; i_i < j_i_m; i_i++) {\n            var tmp_info = Utils.decodePackItem(arr_items[i_i]);\n            var item_script = this.dictItems[tmp_info.id];\n            if (typeof item_script === \"undefined\") {\n                //Utils.log(\"Add new item\");\n                var tmp_Item;\n                if (tmp_info.type == 1) {\n                    tmp_Item = cc.instantiate(this.item_ammo_prefab);\n                } else {\n                    tmp_Item = cc.instantiate(this.item_health_prefab);\n                }\n                tmp_Item.obj_type = 4;\n                tmp_Item.gid = tmp_info.id;\n                tmp_Item.setLocalZOrder(1);\n\n                item_script = tmp_Item.getComponent(\"itemScript\");\n                item_script.gid = tmp_info.id;\n                item_script.initDisplay(tmp_info);\n                this.node.addChild(tmp_Item);\n\n                this.dictItems[item_script.gid] = item_script;\n\n                this.t_add_items++;\n            }\n            item_script.node.isActiveSC = true;\n        }\n    },\n\n    updateMapPosition: function updateMapPosition() {\n        if (this.isOver) {\n            this.otherMSG = \"this.isOver\";\n            return;\n        }\n        if (this.MYPLAYER === null) {\n            this.otherMSG = \"MYPLAYER===null\";\n            return;\n        }\n        if (this.TANKID == this.MYPLAYER.gid) {\n            var x_pos = -this.MYPLAYER.x;\n            var y_pos = -this.MYPLAYER.y;\n            //this.node.setPosition(cc.p(x_pos,y_pos));\n            this.node.x = x_pos * 2; // nhan 2 boi vi map game scale =2\n            this.node.y = y_pos * 2;\n            this.otherMSG = \"\";\n        } else {\n            this.otherMSG = \"this.TANKID=\" + this.TANKID + \" | MYPLAYER.gid: \" + MYPLAYER.gid;\n        }\n    },\n\n    estimateMoveTank: function estimateMoveTank() {\n        /**\n        *server mac dinh luon push ve la 80/1000 \n        * dt_move=speed*0.08\n        * \n        */\n        /**\n         * GIẢI THÍCH :\n         * Hàm này chỉ là làm mượt chuyển động của xe tank và giảm bớt việc ở backend cứ 40/1000s là 25 lần 1s thì giờ\n         * chỉ cần là 1s push về 12 lần thôi , nếu comment lại hàm này và không chạy  cũng không sao như trông nó rất giật game\n         *\n         * 1.Cách cũ là livestream vị trí của các Object trong game\n         *      Tức là ví dụ ở frame1 xe tank ở vị trí 1, sau đó ở frame2 lại set vị trí cho xe tank ở vị trí P2..\n         *      Cách này realtime và luôn nhưng nhược điểm là cần từ backend push data về liên tục\n         * 2.Cách mới là tính toán đường đi tương đối của xe tank và cứ 0.08s lại đồng bộ với server 1 lần\n         *      Ví dụ ở frame1 xe tank đang ở vị trí là A1 và hướng đi của tank là đến vị trí A2 ở frame sau vậy mình tạo\n         *      ra 1 chuyển động cứ 0.001s lại cho xe tank nhích 1 đoạn tới vị trí của A2( vận tốc đã biết rồi) , và đên\n         *      frame2 bất kể xe tank đã nhích đến hay đi quá vị trí so với frame2 trả về thì cũng set position cho tank\n         *      ở vị trí frame2 trả về anh xem ở hàm managerTank\n         *\n         *\n         *      -Cách làm tương tự như vậy đối với viên đạn ,tuy nhiên với viên đạn sẽ có chút lỗi xảy ra là giữa đường\n         *      viên đạn va vào chướng ngại vật hoặc va vào xe tank mà client vẫn chưa được cập nhật speed đạn là 400\n         *      và time là 0.08 vậy sẽ có trường hợp đạn ở client vẫn cứ đi thẳng sai số với server là 400*0.08=32 px\n         *      cái này client thấy rất rõ ràng\n         *\n         *      -Một lỗi nữa là trên trình duyệt web không hiểu sao lại lag , nếu không được thì backend chắc phải if ,else code\n         *      để web vẫn push về là 0.04s 1 lần còn mobile là 0.08 và mobile sẽ giảm tải được dữ liệu đi về chỉ có 1kb/s\n         *\n               -còn một vấn đề ở backend là vì mỗi frame là mình check vị trí của viên đạn so với chướng ngại vật là theo\n         *      mỗi frame , trước ít ảy ra sai số vì mỗi frame cách nhau 0.04s và đạn đi có 16px x, giờ time mỗi frame cách\n         *      nhau lên đến 0.08 thì sai số tăng lên theo , nhưng cái này mình sửa được ở server và làm sau\n         *\n         *\n         *\n         */\n        //      chú ý là nếu timeout quá lớn thì return ngay hoặc di chuyển quá vị trí tính toán thì stop lại\n        //      1 : là vẫn nên làm chức năng tính toán va chạm ở client đối với đạn và tank\n        var self = this;\n        this.countStep = 0;\n        var TIME_FRAME_SERVER = 0.08;\n        this.schedule(function (dt) {\n            var checkCollision = false;\n            if (self.countStep == 0) {\n                checkCollision = true;\n            }\n            //console.log(\"CCCCCC----------------------AAAA--------------------AAA\");\n            for (var keyobj in self.dictTanks) {\n                var tankscript = self.dictTanks[keyobj];\n                //console.log(\"tankscript.dirMv: \"+tankscript.dirMv);\n                var maxMove = tankscript.speedMove * TIME_FRAME_SERVER;\n                if (tankscript.nextFrameMove >= maxMove) {\n                    continue;\n                }\n\n                var dt_move = tankscript.speedMove * dt;\n                tankscript.nextFrameMove = tankscript.nextFrameMove + dt_move;\n                var tmp_tank = tankscript.node;\n                if (tankscript.dirMv > 0 && tankscript.dirMv < 5) {\n                    if (tankscript.dirMv == 1) {\n                        tmp_tank.x = tmp_tank.x + dt_move;\n                    } else if (tankscript.dirMv == 2) {\n                        tmp_tank.y = tmp_tank.y + dt_move;\n                    } else if (tankscript.dirMv == 3) {\n                        tmp_tank.x = tmp_tank.x - dt_move;\n                    } else if (tankscript.dirMv == 4) {\n                        tmp_tank.y = tmp_tank.y - dt_move;\n                    } else {\n                        //console.log(\"AAAAAAA----------------------AAAA--------------------AAA\");\n                    }\n                }\n            }\n\n            self.updateMapPosition();\n\n            for (var key_b in self.dictBullets) {\n                var bullet_script = self.dictBullets[key_b];\n                var dtMv = 400 * dt;\n                var maxMove = 400 * TIME_FRAME_SERVER;\n                if (bullet_script.nextFrameMove >= maxMove) {\n                    return;\n                }\n\n                bullet_script.nextFrameMove = bullet_script.nextFrameMove + dtMv;\n                var convert_angle = bullet_script.angleMove * 3.14592 / 180;\n                var tmpPos = cc.p(bullet_script.node.x + dtMv * Math.cos(convert_angle), bullet_script.node.y + dtMv * Math.sin(convert_angle));\n\n                if (false) {\n                    // neu co va cham xay ra thi , bullet co opacity=0 va limit position\n                    if (this.checkCollisionWithObstacble(tmpPos)) {\n                        bullet_script.node.opacity = 0;\n                    }\n                    if (this.checkCollisionWithTank(tmpPos)) {\n                        bullet_script.node.opacity = 0;\n                    }\n                }\n\n                bullet_script.node.x = tmpPos.x;\n                bullet_script.node.y = tmpPos.y;\n                //bullet_script.updateEffectPosition();\n            }\n\n            self.countStep = self.countStep + 1;\n            if (self.countStep >= 4) {\n                self.countStep = 0;\n            }\n        }, 0.001);\n    },\n    onDisable: function onDisable() {\n        this.unscheduleAllCallbacks();\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n\n    checkCollisionWithObstacble: function checkCollisionWithObstacble(obj_b) {\n        var isC = false;\n        for (var keyobj in this.dictObs) {\n            var obs_sc = this.dictObs[keyobj];\n            if (obj_b.x > obs_sc.min_x && obj_b.x < obs_sc.max_x && obj_b.y < obs_sc.max_y && obj_b.y > obs_sc.min_y) {\n                isC = true;\n                break;\n            }\n        }\n        if (obj_b.x > 1475 || obj_b.x < -1475 || obj_b.y > 975 || obj_b.y < -975) {\n            isC = true;\n        }\n\n        return isC;\n    },\n    checkCollisionWithTank: function checkCollisionWithTank(obj_b) {\n        var isC = false;\n        for (var keyobj in this.dictTanks) {\n            var obs_sc = this.dictTanks[keyobj];\n            if (obj_b.x > obs_sc.min_x && obj_b.x < obs_sc.max_x && obj_b.y < obs_sc.max_y && obj_b.y > obs_sc.min_y) {\n                isC = true;\n                break;\n            }\n        }\n        return isC;\n    }\n});\n\ncc._RFpop();\n},{\"../LIB/Utils\":\"Utils\"}],\"GamePlayScript\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, 'de6b5n59epGzaVpgGIRcJVi', 'GamePlayScript');\n// Script/Gamescript/GamePlayScript.js\n\n\nvar Utils = require('../LIB/Utils');\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        hub_prefab: {\n            type: cc.Prefab,\n            \"default\": null\n        },\n        lbStatus: {\n            type: cc.Label,\n            \"default\": null\n        },\n        nodecontro: cc.Node,\n        panelInfo: cc.Node,\n        gameMap: {\n            type: cc.Node,\n            \"default\": null\n        },\n        tinyPlayer: cc.Node,\n        lbscore: cc.Label,\n        testnodxx: {\n            type: cc.Prefab,\n            \"default\": null\n        }\n    },\n    actionBackHome: function actionBackHome() {\n        this.socket.disconnect();\n        cc.director.loadScene(\"HomeScene\");\n    },\n\n    ListenNativeHidden: function ListenNativeHidden() {\n        //game_on_hide\n        if (cc.sys.isNative) {\n            var self = this;\n            this.lstnr = cc.EventListenerCustom.create(\"game_on_hide\", function () {\n                self.socket.disconnect();\n                cc.director.loadScene(\"HomeScene\");\n            });\n            cc.eventManager.addListener(this.lstnr, this);\n        }\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        /** \n         * Cơ bản trong Engine cocos: cấp cao nhất và chứa tất cả các đối tượng trong game là scene, trong scene chứa các child như là Canvas, Node, Sprite ,Label,button.... etc \n         * các child này sẽ có các thuộc tính cơ bản từ Node như position,scale,rotation,Anchor point ...\n         * Lớp Node là lớp base chứa các đối tượng ,Sprite,Label,Button... đều là kế thừa từ Node và có các thuộc tính của node, ngoài ra với mỗi đối tượng có thêm thuộc tính riêng của mình\n         *  -Sprite là đối tượng được dùng để thiển thị 1 bức ảnh cơ chế để load 1 bức ảnh image_file->texture->spriteframe----->Sprite \n         *          trong đó Sprite chỉ hiển thị spriteFrame, ví dụ mình có thể tạo 1 Sprite hiển thị trên màn hình là 1 ảnh hình tròn màu đỏ, khi touch vào thì load 1 spriteFrame màu xanh \n         *          ,release thì load lại spriteFrame màu đỏ \n         * \n         * Bất cứ đối tượng UI nào trong game đều có thể tạo 1 script đề điều khiển đối tượng đó, ví dụ có 1 đối tượng là xe tank thì trong xe tank có thể tạo 1 hoặc nhiều script để điều khiển \n         * xe tank, tuy nhiên tạo nhiều script sẽ dễ dẫn đến xung đột khó bắt lỗi \n         *     từ đối tượng UI muốn gọi ra script của xe tank thì gọi bằng cách \n         *          var scriptObj=UI_Object.getComponent(\"ScriptName\");--> bở vì 1 node có thể chứa nhiều script nên phải gọi thế này\n         *     ngược lại từ 1 script muốn gọi lại đối tượng UI_Object thì chỉ cần gọi \n         *          var ui_obj=script_obj.node;---> một đối tượng script chỉ có thể điều khiển duy nhất 1 node \n         *     ở dòng code trên ui_obj có thể là Label, Button, Sprite... tuy nhiên thì class Node là cha và đại diện chung cho tất cả các đối tượng trên \n         * */\n\n        /**\n         *  Hàm Onload được gọi đầu tiên trong game xem thêm ở url :http://cocos2d-x.org/docs/api-ref/creator/v1.1.2/classes/TiledLayer.html#method_onLoad\n         * \n         * \n         * */\n        if (cc.sys.isNative) {\n            this.ListenNativeHidden();\n        }\n\n        var script_controller = this.nodecontro.getComponent(\"PadController\");\n        script_controller.mainscript = this;\n\n        this.mapScript = this.gameMap.getComponent(\"GameMap\"); // lấy ra script của đối tượng gamemap\n\n        this.panelInfoScript = this.panelInfo.getComponent(\"PanelUserInfo\");\n\n        this.actionListenKeyPress(); //sử dụng cho việc nhấn phím để di chuyển xe tank web version\n        this.addTouchListenEvent(); // sử dụng cho việc touch mobile version\n\n        this.timelog = 0;\n        this.actionLoadGameBegin(); // connect đến server\n\n        //Utils.lastscore=103;\n        this.AdsManager();\n    },\n    AdsManager: function AdsManager() {\n        if (cc.sys.os == cc.sys.OS_IOS) {\n            jsb.reflection.callStaticMethod(\"BridgeIOS\", \"HiddenAdsBanerWithAnimation\");\n        } else if (cc.sys.os == cc.sys.OS_ANDROID) {} else {// phien ban web\n\n        }\n    },\n\n    //called every frame, uncomment this function to activate update callback\n    update: function update(dt) {\n        this.timelog = this.timelog + dt;\n        if (this.timelog > 0.3) {\n            this.timelog = 0;\n            var logscreen = \"ID:\" + this.mapScript.TANKID + \" Tank:\" + this.mapScript.t_add_tank + \"  Obs:\" + this.mapScript.t_add_obs + \"  Bullet:\" + this.mapScript.t_add_bullet + \"  item:\" + this.mapScript.t_add_items;\n            logscreen = logscreen + \" exp:\" + this.mapScript.t_add_explosion;\n            logscreen = logscreen + \"\\n\" + this.mapScript.msglog + \"\\n\" + this.mapScript.otherMSG;\n            this.lbStatus.string = logscreen;\n        }\n    },\n\n    onDisable: function onDisable() {\n        var script_controller = this.nodecontro.getComponent(\"PadController\");\n        script_controller.mainscript = null;\n        this.panelInfoScript = null;\n        Utils.log(\"Game player is Unload\");\n        cc.eventManager.removeListener(this.touchListen);\n        cc.eventManager.removeListener(this.keyEventListen);\n        if (cc.sys.isNative) {\n            cc.eventManager.removeListener(this.lstnr);\n        }\n\n        // cc.eventManager.removeAllListeners();\n    },\n\n    updateMoveController: function updateMoveController(dir_move) {\n        cc.log(\"dir_move:%s\", dir_move);\n        var numberint = parseInt(dir_move);\n        if (numberint >= 1 && numberint <= 4) {\n            this.socket.emit(\"changeDir\", numberint);\n        }\n    },\n\n    addTouchListenEvent: function addTouchListenEvent() {\n\n        this.touchListen = cc.eventManager.addListener({ event: cc.EventListener.TOUCH_ONE_BY_ONE, swallowTouches: true,\n            onTouchBegan: (function (touch, event) {\n                //cc.log(\"-----------asdasdasdasdkhkasjdbkajsdsakjdhaskdhaskjdhakjsdhask------------\");\n\n                //this.isFire=true;\n                //this.beginPos = this.node.convertToNodeSpace(touch.getLocation());\n\n                var pos = this.node.convertToNodeSpace(touch.getLocation());\n                pos.x = pos.x - cc.winSize.width / 2;\n                pos.y = pos.y - cc.winSize.height / 2;\n                var vfire = cc.pNormalize(cc.v2(pos.x, pos.y));\n                var angle = cc.pToAngle(vfire);\n                angle = angle * 180 / 3.14;\n                if (angle < 0) {\n                    angle = 360 + angle;\n                }\n                if (angle > 360) {\n                    // se khong bao gio xay ra truong hop nay vi cocos2d-js luon tra ve 1 goc tu -180,180\n                    angle = angle - 360;\n                }\n                //this.lbStatus.string=\"GOC false AAA=\"+angle;\n                this.socket.emit(\"fireTarget\", angle);\n\n                return true;\n            }).bind(this)\n\n        }, this.node);\n    },\n\n    actionListenKeyPress: function actionListenKeyPress() {\n        var self = this;\n        //add keyboard input listener to jump, turnLeft and turnRight\n        this.keyEventListen = cc.eventManager.addListener({\n            event: cc.EventListener.KEYBOARD,\n            // set a flag when key pressed\n            onKeyPressed: function onKeyPressed(keyCode, event) {\n                var movestt = 0;\n                switch (keyCode) {\n                    case cc.KEY.d:\n                        movestt = 1;\n                        break;\n                    case cc.KEY.w:\n                        movestt = 2;\n                        break;\n                    case cc.KEY.a:\n                        movestt = 3;\n                        break;\n                    case cc.KEY.s:\n                        movestt = 4;\n                        break;\n                }\n                // if(this.last_movestt==movestt){\n                //     return;\n                // }\n                this.last_movestt = movestt;\n                if (movestt > 0 && movestt < 5) {\n                    self.socket.emit(\"changeDir\", movestt);\n                }\n            }\n        }, self.node);\n    },\n\n    actionLoadGameBegin: function actionLoadGameBegin() {\n\n        this.hub = cc.instantiate(this.hub_prefab);\n        this.node.addChild(this.hub);\n\n        var self = this;\n        require('socket.io');\n        var urlconnect = \"192.168.1.41:2020\";\n        var config = {\n            'forceNew': true,\n            'reconnection': false,\n            'reconnectionDelay': 200,\n            'reconnectionDelayMax': 1000,\n            'reconnectionAttempts': 1\n        };\n        this.socket = io.connect(urlconnect, config); // phiên bản js này hỗ trợ trực tiếp ipv6, ipv4\n        console.log(\"url connect: %s\", urlconnect);\n        this.socket.on('connect', function () {\n            Utils.log(\"ket noi thanh cong\");\n            self.hub.destroy();\n            self.hub = null;\n            var str_info = Utils.loadUserInfo();\n            self.socket.emit(\"MyInfo\", str_info);\n        });\n\n        this.socket.on('RequestValidate', function (message) {\n            var msgReceive = message;\n            if (typeof message == \"string\") {\n                msgReceive = JSON.parse(message);\n            }\n            self.mapScript.TANKID = parseInt(msgReceive.id);\n            var keydecode = Utils.deCode(msgReceive.key);\n            self.socket.emit(\"MyValidate\", keydecode);\n            ///cham mau trang nhap nhay lien tuc\n            var actionRP = cc.repeatForever(cc.blink(2, 3));\n            self.tinyPlayer.stopAllActions();\n            self.tinyPlayer.runAction(actionRP);\n        });\n        this.socket.on('UpdatePosition', function (message) {\n            var msgReceive = message;\n            if (typeof message == \"string\") {\n                msgReceive = JSON.parse(message);\n            }\n            self.mapScript.updateFrameStep(msgReceive);\n            self.updateTinyMapGame();\n        });\n\n        this.socket.on('error', function (message) {\n            //cc.log(\"dddddddd----------eror:%s\",message);\n            Utils.messageconnect = message;\n            cc.director.loadScene(\"HomeScene\");\n        });\n        this.socket.on('disconnect', function (message) {\n            cc.director.loadScene(\"HomeScene\");\n        });\n    },\n\n    updateTinyMapGame: function updateTinyMapGame() {\n        if (this.mapScript.MYPLAYER.isActiveSC) {\n\n            var xpos = this.mapScript.MYPLAYER.x / 1500;\n            var ypos = this.mapScript.MYPLAYER.y / 1000;\n            this.tinyPlayer.x = xpos * 70;\n            this.tinyPlayer.y = ypos * 50;\n\n            var obj_info = this.mapScript.MYPLAYER.activeInfo;\n\n            var myLevel = obj_info.level;\n\n            var myMaxAmmo = parseInt(140 + (myLevel - 1) * 20);\n            var myMaxHealth = parseInt(80 + (myLevel - 1) * 15);\n\n            this.panelInfoScript.prAmmo.scaleX = parseInt(obj_info.ammo) / myMaxAmmo;\n            this.panelInfoScript.prHP.scaleX = parseInt(obj_info.hp) / myMaxHealth;\n\n            this.panelInfoScript.lbCountAmmo.string = parseInt(obj_info.ammo) + \"/\" + myMaxAmmo;\n            this.panelInfoScript.lbCountHp.string = parseInt(obj_info.hp) + \"/\" + myMaxHealth;\n            this.panelInfoScript.lbLevel.string = \"LEVEL:\" + parseInt(myLevel);\n            this.lbscore.string = obj_info.score;\n\n            this.panelInfoScript.lbSpeed.string = \"Speed:\" + Number(obj_info.sp).toFixed(1);\n        }\n    }\n\n});\n\ncc._RFpop();\n},{\"../LIB/Utils\":\"Utils\",\"socket.io\":\"socket.io\"}],\"HomeScript\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, 'f1a18l9eclHML7T7jQnaiOz', 'HomeScript');\n// Script/Gamescript/HomeScript.js\n\nvar Utils = require('../LIB/Utils');\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        nodeWeb: cc.Node,\n        nodeMobile: cc.Node,\n        txtUserName: cc.EditBox\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        if (cc.sys.isNative) {\n            // this.lbOS.string=\"isNative-iOS+Android:\"+cc.sys.os;\n            this.nodeWeb.active = false;\n            this.nodeMobile.active = true;\n        } else {\n            //this.lbOS.string=\"isBrowser:\"+cc.sys.os;\n            this.nodeWeb.active = true;\n            this.nodeMobile.active = false;\n        }\n        var strx = cc.sys.localStorage.getItem(\"usr\");\n        if (strx != null) {\n            if (typeof strx === \"undefined\") {\n                this.txtUserName.string = \"\";\n            } else {\n                this.txtUserName.string = strx;\n            }\n        }\n        this.AdsManager();\n    },\n\n    AdsManager: function AdsManager() {\n        if (cc.sys.os == cc.sys.OS_IOS) {\n            // hien thi quang cao\n            jsb.reflection.callStaticMethod(\"BridgeIOS\", \"ShowAdsBanerWithAdnimation\");\n\n            jsb.reflection.callStaticMethod(\"BridgeIOS\", \"ShowFullScreen\");\n\n            // hien thi loi thong bao khi khong ket not duoc mang\n            if (typeof Utils.messageconnect != \"undefined\") {\n                var msg = Utils.messageconnect + \"\";\n                if (msg.length > 4) {\n                    jsb.reflection.callStaticMethod(\"BridgeIOS\", \"callNativeUIWithTitle:andContent:\", \"Message\", msg);\n                    Utils.messageconnect = \"\";\n                }\n            }\n        } else if (cc.sys.os == cc.sys.OS_ANDROID) {} else {// phien ban web\n\n        }\n    },\n\n    acRate: function acRate() {\n        /**\n         *  NHỮNG API NÀY ĐƯỢC GỌI ĐI GỌI LẠI VÀ NÓ LÀ CƠ BẢN TẤT CẢ CÁC GAME ĐỀU CẦN CÓ NHƯ LÀ INAPP-PURCHASE,ADS,GAMECENTER,SHARE..., \n         *  NÊN SAU GAME NÀY MÌNH VIẾT NÓ THÀNH 1 CLASS RIÊNG ĐỂ DỄ TÁI SỬ DỤNG VÀ DỄ QUẢN LÝ, CÒN GIỜ CỨ VIẾT TẠM HẾT TRONG ĐÂY \n         * */\n        var urlRateApp = \"\";\n        if (cc.sys.os == cc.sys.OS_IOS) {\n            urlRateApp = \"itms-apps://itunes.apple.com/WebObjects/MZStore.woa/wa/viewContentsUserReviews?id=1132819298&onlyLatestVersion=true&pageNumber=0&sortOrdering=1&type=Purple+Software\";\n        } else {\n            // la android\n            urlRateApp = \"https://play.google.com/store/apps/details?id=pack_name\";\n        }\n        cc.sys.openURL(urlRateApp);\n    },\n    acHighScore: function acHighScore() {\n        // action highscore goi den native iOS, android de hien thi leaderboard\n        var ret = jsb.reflection.callStaticMethod(\"BridgeIOS\", \"callNativeUIWithTitle:andContent:\", \"cocos2d-js gui du lieu \", \"Yes! you call a Native UI from Reflection\");\n        console.log(\"return value form Object: %s\", ret);\n    },\n    acSetting: function acSetting() {},\n    acShare: function acShare() {},\n\n    actionWebLoadAppstore: function actionWebLoadAppstore() {\n        cc.sys.openURL(\"https://itunes.apple.com/app/id1132819298\");\n    },\n    actionWebLoadAppPlayStore: function actionWebLoadAppPlayStore() {\n        cc.sys.openURL(\"https://itunes.apple.com/app/id1132819298\");\n    },\n\n    acFacebookPage: function acFacebookPage() {\n        cc.sys.openURL(\"https://www.facebook.com/gameio.live\");\n    },\n    acTwitterPage: function acTwitterPage() {\n        cc.sys.openURL(\"https://twitter.com/GameioL\");\n    },\n    actionLoadGaamePlayer: function actionLoadGaamePlayer() {\n        Utils.playerName = this.txtUserName.string.trim();\n        cc.sys.localStorage.setItem(\"usr\", Utils.playerName);\n        cc.director.loadScene(\"GamePlay\");\n    }\n});\n\ncc._RFpop();\n},{\"../LIB/Utils\":\"Utils\"}],\"PadController\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, 'b7a59GsOBlEEID+Kx7MZBIu', 'PadController');\n// Script/LIB/PadController.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        hubcontrol: cc.Node\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        //this.addTouchListenEvent();\n\n        if (cc.sys.isBrowser) {\n            this.node.active = false;\n        } else {\n            var size = cc.director.getVisibleSize();\n\n            var yclose = -225;\n            var y_explain = -145;\n\n            var xclose = -size.width / 2 + 113;\n            var x_explain = -size.width / 2 + 200;\n\n            this.closePos = cc.p(xclose, yclose);\n            this.ex_pos = cc.p(x_explain, y_explain);\n\n            this.PadDir = 1;\n\n            this.closeAllButton();\n            this.changeframe = true;\n        }\n    },\n    onDisable: function onDisable() {\n        this.mainscript = null;\n    },\n    updatePadDir: function updatePadDir() {\n        var bt0 = this.node.children[0];\n\n        var allchild = this.node.children;\n        for (var ix = 0; ix < allchild.length; ix++) {\n            var bt1 = allchild[ix];\n            bt1.setLocalZOrder(1);\n        }\n        if (this.PadDir == 1) {\n            bt0.rotation = 180;\n            bt0 = this.node.children[2];\n            bt0.setLocalZOrder(3);\n        }\n        if (this.PadDir == 3) {\n            bt0.rotation = 0;\n            bt0 = this.node.children[3];\n            bt0.setLocalZOrder(3);\n        }\n        if (this.PadDir == 4) {\n            bt0.rotation = -90;\n            bt0 = this.node.children[1];\n            bt0.setLocalZOrder(3);\n        }\n        if (this.PadDir == 2) {\n            bt0.rotation = 90;\n            bt0 = this.node.children[4];\n            bt0.setLocalZOrder(3);\n        }\n    },\n    closeAllButton: function closeAllButton() {\n        var allchild = this.node.children;\n        for (var ix = 0; ix < allchild.length; ix++) {\n            var bt1 = allchild[ix];\n            bt1.x = 0;\n            bt1.y = 0;\n            if (ix == 0) {\n                bt1.active = true;\n            } else {\n                bt1.active = false;\n            }\n        }\n\n        this.node.setPosition(this.closePos);\n        this.hubcontrol.active = true;\n    },\n    objectMovePos: function objectMovePos(obj_node, pos) {\n        obj_node.stopAllActions();\n        var actionmv = cc.moveTo(0.2, pos);\n        obj_node.runAction(actionmv);\n    },\n    objectMoveCenter: function objectMoveCenter(obj_node, pos) {\n        obj_node.stopAllActions();\n        var actionmv = cc.moveTo(0.2, pos);\n        obj_node.runAction(actionmv);\n    },\n    explainAllButton: function explainAllButton() {\n        var allchild = this.node.children;\n\n        var bt1 = allchild[0];\n        bt1.x = 0;\n        bt1.y = 0;\n        bt1.active = false;\n\n        bt1 = allchild[1];\n        bt1.active = true;\n        this.objectMovePos(bt1, cc.p(0, -90));\n\n        bt1 = allchild[2];\n        bt1.active = true;\n        this.objectMovePos(bt1, cc.p(90, 0));\n\n        bt1 = allchild[3];\n        bt1.active = true;\n        this.objectMovePos(bt1, cc.p(-90, 0));\n\n        bt1 = allchild[4];\n        bt1.active = true;\n        this.objectMovePos(bt1, cc.p(0, 90));\n\n        this.node.stopAllActions();\n        var actionmv = cc.moveTo(0.2, this.ex_pos);\n        this.node.runAction(actionmv);\n        //this.node.setPosition(this.ex_pos);\n    },\n\n    moveAndCloseAllButton: function moveAndCloseAllButton() {\n        cc.log(\"asdas askkkkkkkkkkkdk\");\n\n        this.mainscript.updateMoveController(this.PadDir);\n        var moveCenter = cc.callFunc(this.moveToCenter, this);\n        var delaytime = cc.delayTime(0.15);\n        var moveRootPos = cc.callFunc(this.moveToClosepos, this);\n        var actionsc = cc.sequence(moveCenter, delaytime, moveRootPos);\n        this.node.stopAllActions();\n        this.node.runAction(actionsc);\n    },\n    moveToClosepos: function moveToClosepos(objsc) {\n        var allchild = this.node.children;\n        for (var ix = 0; ix < allchild.length; ix++) {\n            var bt1 = allchild[ix];\n            bt1.x = 0;\n            bt1.y = 0;\n            if (ix == 0) {\n                bt1.active = true;\n            } else {\n                bt1.active = false;\n            }\n        }\n        // this.node.stopAllActions();\n        var actionmv = cc.moveTo(0.18, this.closePos);\n        this.node.runAction(actionmv);\n    },\n    moveToCenter: function moveToCenter(objsc) {\n        cc.log(\"----------kkkkkk \");\n        var allchild = this.node.children;\n\n        // var bt1=allchild[0];\n        // bt1.active = true;\n        // bt1.opacity=0;\n        this.updatePadDir();\n\n        var bt1 = allchild[1];\n        bt1.active = true;\n        this.objectMoveCenter(bt1, cc.p(0, 0));\n\n        bt1 = allchild[2];\n        bt1.active = true;\n        this.objectMoveCenter(bt1, cc.p(0, 0));\n\n        bt1 = allchild[3];\n        bt1.active = true;\n        this.objectMoveCenter(bt1, cc.p(0, 0));\n\n        bt1 = allchild[4];\n        bt1.active = true;\n        this.objectMoveCenter(bt1, cc.p(0, 0));\n    },\n\n    actionMoveUp: function actionMoveUp() {\n        this.PadDir = 2;\n        this.moveAndCloseAllButton();\n        //this.closeAllButton();\n    },\n    actionMoveLeft: function actionMoveLeft() {\n        this.PadDir = 3;\n        this.moveAndCloseAllButton();\n    },\n    actionMoveRight: function actionMoveRight() {\n        cc.log(\"move actionMoveRight\");\n        this.PadDir = 1;\n        this.moveAndCloseAllButton();\n    },\n    actionMoveDown: function actionMoveDown() {\n        cc.log(\"move actionMoveDown\");\n        this.PadDir = 4;\n        this.moveAndCloseAllButton();\n    },\n    actionEX: function actionEX() {\n        cc.log(\"move actionEX\");\n        var bt0 = this.node.children[0];\n        if (this.changeframe) {\n            this.changeframe = false;\n            this.hubcontrol.removeFromParent(true);\n            this.hubcontrol = null;\n        }\n\n        this.explainAllButton();\n        //this.node.setPosition(this.ex_pos);\n    }\n\n});\n\ncc._RFpop();\n},{}],\"PanelUserInfo\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, '270b1oXWlhLDLgiBzvW9bIb', 'PanelUserInfo');\n// Script/Gamescript/PanelUserInfo.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        lbCountAmmo: cc.Label,\n        lbCountHp: cc.Label,\n        lbLevel: cc.Label,\n        lbSpeed: cc.Label,\n        prAmmo: cc.Node,\n        prHP: cc.Node\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {}\n\n});\n\ncc._RFpop();\n},{}],\"TestConnect\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, '46277qbPR1ACI2Z3o4oUHBd', 'TestConnect');\n// Script/TestScript/TestConnect.js\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        label_status: {\n            type: cc.Label,\n            'default': null\n        }\n\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {},\n\n    actionConnect: function actionConnect() {\n        var self = this;\n        require('socket.io');\n        this.socket = io.connect('localhost:2020');\n        this.socket.on('connect', function (msgSend) {\n            cc.log(\"connection------>\");\n            self.label_status.string = \"ALKHKJHKD\";\n        });\n    }\n\n});\n// called every frame, uncomment this function to activate update callback\n// update: function (dt) {\n\n// },\n\ncc._RFpop();\n},{\"socket.io\":\"socket.io\"}],\"TestEffect\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, 'ad9c3pgcn9OQrzRetEocmJc', 'TestEffect');\n// Script/TestScript/TestEffect.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        spBullet: cc.Node,\n        msTexture: cc.Texture2D,\n        spX1: cc.Node,\n        spX2: cc.Node,\n        frameAlts: cc.SpriteAtlas\n\n    },\n\n    //sp_particle:cc.Node\n    // use this for initialization\n    onLoad: function onLoad() {\n        var xcolcolor = new cc.Color(255, 255, 0);\n\n        //this.spX1.setLocalZOrder(3);\n        // this.spX2.setGlobalZOrder(2);\n\n        // this.spX2.globalZOrder=-1;\n        // this.spX2.color=new cc.Color(255,255,0);\n\n        this.spX2.setLocalZOrder(-4);\n        var sprite = this.spX2.getComponent(\"cc.Sprite\");\n        sprite.spriteFrame = this.frameAlts.getSpriteFrame(\"tankCharacters-t0-b\");\n\n        // cc.log(\"node_add:name= %s\",node_add.name);\n\n        // this.node_fire=new cc.Node(\"nodeParticleSystem\");\n        // this.ms=this.node_fire.addComponent(cc.ParticleSystem);\n        // this.ms.file=\"\";\n\n        // this.node.addChild(this.node_fire);\n\n        //cc.log(\"this.sp_particle.name: %s count allchild:\",this.sp_particle.name,this.node.children.length);\n        //cc.director.getScheduler().schedule(function() { this.testMovexx(); }, this, 0.1, !this._isRunning);\n        // this.testMovexx();\n    },\n\n    testMovexx: function testMovexx(dt) {\n        var self = this;\n        this.schedule(function (dt) {\n            self.spBullet.x = self.spBullet.x + dt * 100;\n        }, 0.001);\n    },\n\n    actionCheckEffect: function actionCheckEffect() {\n        this.unscheduleAllCallbacks();\n        // cc.log(\"this.node.children.length: %s\",this.node.children.length);\n        // cc.log(\"this.sp_particle.name: %s\",this.sp_particle.name);\n        // if (cc.isValid(sp_particle)) {\n        //     cc.log(\"is activate\");\n        // }else{\n        //     cc.log(\"is Remove \");\n        // }\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function update(dt) {}\n});\n\ncc._RFpop();\n},{}],\"TestParticleSystemPos\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, 'cf27a34VC5DU6079AfbfS0X', 'TestParticleSystemPos');\n// Script/TestScript/TestParticleSystemPos.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.logMyPosition();\n    },\n\n    logMyPosition: function logMyPosition() {\n        var self = this;\n        this.countStep = 0;\n        var TIME_FRAME_SERVER = 0.08;\n        this.schedule(function (dt) {\n\n            cc.log(\"-----------%s-----------Pos: %s %s\", this.node.children.length, this.node.x, this.node.y);\n        }, 0.001);\n    }\n});\n\ncc._RFpop();\n},{}],\"Utils\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, 'ea1a5zc1kBBsJphlGGHjojW', 'Utils');\n// Script/LIB/Utils.js\n\n\n\nvar Utils = {\n    log: function log(msgobject) {\n        console.log(\"-GAMEIOLIVE-:%s\", msgobject);\n    },\n\n    loadUserInfo: function loadUserInfo() {\n        var strRT = '{\"platform\":10,\"version\":1.1,\"usr\":\"UserName\"}'; // theo quy ước thì 9 là iOS,10 là web mobile, 11 là android\n        strRT = strRT.replace(\"UserName\", Utils.playerName);\n        cc.log(\"strRT: %s\", strRT);\n        return strRT;\n    },\n    deCode: function deCode(keyCode) {\n        var end = keyCode.length * 0.6;\n        var begin = keyCode.length * 0.1;\n        var newkey = keyCode.substring(begin, end);\n        return newkey;\n    },\n\n    decodePackTank: function decodePackTank(objectEndcode) {\n        var psend = objectEndcode.p;\n        var x_tmp = psend / 100000.0;\n        var xp = x_tmp / 10.0;\n        xp = xp - 2000;\n        var y_tmp = psend % 100000;\n        var yp = y_tmp / 10.0;\n        yp = yp - 2000;\n\n        var e_g_r_d = objectEndcode.r;\n        var dir = 0;\n        if (e_g_r_d >= 1000000) {\n            dir = parseInt(e_g_r_d / 1000000);\n            e_g_r_d = e_g_r_d - dir * 1000000;\n        }\n        var tank_angle = e_g_r_d / 1000;\n        var gun_angle = e_g_r_d % 1000;\n\n        var e_x = objectEndcode.e;\n        var hp = parseInt(e_x / 10000.0);\n        var ammo = e_x % 10000;\n\n        var level_score = objectEndcode.s;\n        var level_s = level_score / 1000000.0;\n        var score_s = level_score % 1000000;\n\n        var t_ID = objectEndcode.i;\n        var spped = objectEndcode.m;\n\n        var tankName = \"\";\n        var nameserver = objectEndcode.n;\n        if (typeof nameserver === \"undefined\") {\n            tankName = \"\";\n        } else {\n            tankName = objectEndcode.n;\n        }\n\n        var objectDecode = {\n            x: xp,\n            y: yp,\n            id: t_ID,\n            r: tank_angle,\n            level: level_s,\n            score: score_s,\n            hp: hp,\n            dir: dir,\n            ammo: ammo,\n            sp: spped,\n            name: tankName,\n            gR: gun_angle\n        };\n        return objectDecode;\n    },\n\n    decodePackObs: function decodePackObs(objectEndcode) {\n        var psend = objectEndcode.p;\n        var x_tmp = psend / 100000.0;\n        var xp = x_tmp / 10.0;\n        xp = xp - 2000;\n        var y_tmp = psend % 100000;\n        var yp = y_tmp / 10.0;\n        yp = yp - 2000;\n\n        var numinfo = objectEndcode.o;\n        var idObj = parseInt(numinfo / 1000000.0);\n\n        var sodu = numinfo % 1000000;\n        var wd = sodu / 1000;\n        var hd = sodu % 1000;\n\n        var objDecode = {\n            x: xp,\n            y: yp,\n            w: wd,\n            h: hd,\n            id: idObj\n        };\n        return objDecode;\n    },\n\n    decodePackBullet: function decodePackBullet(objectEndcode) {\n        var psend = objectEndcode.p;\n        var x_tmp = psend / 100000.0;\n        var xp = x_tmp / 10.0;\n        xp = xp - 2000;\n        var y_tmp = psend % 100000;\n        var yp = y_tmp / 10.0;\n        yp = yp - 2000;\n\n        var number_info = objectEndcode.i;\n        var bullet_angle = parseInt(number_info / 100000);\n        var bullet_id = number_info % 100000;\n\n        var objDecode = {\n            x: xp,\n            y: yp,\n            ag: bullet_angle,\n            id: bullet_id\n        };\n        return objDecode;\n    },\n\n    decodePackExplosion: function decodePackExplosion(objectEndcode) {\n        var psend = objectEndcode.p;\n        var x_tmp = psend / 100000.0;\n        var xp = x_tmp / 10.0;\n        xp = xp - 2000;\n        var y_tmp = psend % 100000;\n        var yp = y_tmp / 10.0;\n        yp = yp - 2000;\n\n        var tid = objectEndcode.t;\n\n        var objDecode = {\n            x: xp,\n            y: yp,\n            tid: tid,\n            stt: objectEndcode.e,\n            tank_angle: 0,\n            gun_angle: 0\n        };\n        return objDecode;\n    },\n\n    decodePackItem: function decodePackItem(objectEndcode) {\n        var psend = objectEndcode.p;\n        var x_tmp = psend / 100000.0;\n        var xp = x_tmp / 10.0;\n        xp = xp - 2000;\n        var y_tmp = psend % 100000;\n        var yp = y_tmp / 10.0;\n        yp = yp - 2000;\n\n        var numberinfo = objectEndcode.i;\n        var iditem = numberinfo % 100000;\n        var typeitem = parseInt(numberinfo / 100000);\n        var objDecode = {\n            id: iditem,\n            x: xp,\n            y: yp,\n            type: typeitem\n        };\n        return objDecode;\n    }\n\n};\nmodule.exports = Utils;\n\ncc._RFpop();\n},{}],\"bulletScript\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, 'c71e1vAlDFHkrt/N/U8jdgs', 'bulletScript');\n// Script/Gamescript/bulletScript.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        msTexture: cc.Texture2D\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        // this.node_add_efect=new cc.Node(\"effect\");\n        // var ms=this.node_add_efect.addComponent(cc.MotionStreak);\n        // ms.fadeTime=0.08;\n        // ms.minSeg=0.2;\n        // ms.stroke=5;\n        // ms.texture=this.msTexture;\n        // this.node.parent.addChild(this.node_add_efect);\n        // this.angleMove=0;\n\n        this.nextFrameMove = 0;\n    },\n    clearBulletEffect: function clearBulletEffect() {\n        // this.node_add_efect.removeFromParent(true);\n        // this.node_add_efect=null;\n    },\n    updateFrame: function updateFrame(tmp_info) {\n        var x_p = Number(tmp_info.x);\n        var y_p = Number(tmp_info.y);\n        this.node.setPosition(cc.p(x_p, y_p));\n        this.node.isActiveSC = true;\n\n        this.angleMove = parseInt(tmp_info.ag);\n        var tail_effect = this.node.children[0];\n        var t_r = this.angleMove;\n        if (t_r > 180) {\n            t_r = t_r - 360;\n        }\n        t_r = -t_r;\n        this.nextFrameMove = 0;\n        this.node.rotation = t_r;\n\n        //this.updateEffectPosition();\n    },\n    updateEffectPosition: function updateEffectPosition() {\n        //this.node_add_efect.setPosition(cc.p(this.node.x,this.node.y));\n    }\n\n});\n\ncc._RFpop();\n},{}],\"explosionScript\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, 'e5139Jon21IKYOc4KRV7pV7', 'explosionScript');\n// Script/Gamescript/explosionScript.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {},\n\n    onLoad: function onLoad() {}\n\n});\n\ncc._RFpop();\n},{}],\"itemScript\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, 'a3930v3Gm1Du6LBz+Yn/6me', 'itemScript');\n// Script/Gamescript/itemScript.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {},\n\n    onLoad: function onLoad() {\n        var childx_effect = this.node.children[0];\n        var ac1 = cc.fadeTo(cc.random0To1() * 3 + 0.5, 0); // tham so dau tien la duration , time so thu 2 la opacity\n        var ac2 = cc.fadeTo(cc.random0To1() * 2 + 0.5, 255); // tham so dau tien la duration , time so thu 2 la opacity\n\n        this.repeat = cc.repeatForever(cc.sequence(ac1, ac2));\n\n        childx_effect.runAction(this.repeat);\n    },\n    beginClean: function beginClean() {\n        var childx_effect = this.node.children[0];\n        childx_effect.stopAllActions();\n    },\n    initDisplay: function initDisplay(tmp_info) {\n        var x_p = Number(tmp_info.x);\n        var y_p = Number(tmp_info.y);\n        this.node.setPosition(cc.p(x_p, y_p));\n    }\n\n});\n\ncc._RFpop();\n},{}],\"obsScript\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, 'c3b1dKAqAdFBp0ilxwWwXxX', 'obsScript');\n// Script/Gamescript/obsScript.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    initDisplay: function initDisplay(tmp_info) {\n        var x_p = Number(tmp_info.x);\n        var y_p = Number(tmp_info.y);\n        this.node.setPosition(cc.p(x_p, y_p));\n        var ww = Number(tmp_info.w);\n        var hh = Number(tmp_info.h);\n        this.node.scaleX = ww / 100;\n        this.node.scaleY = hh / 100;\n\n        this.Opos = cc.p(x_p, y_p);\n        this.min_x = x_p - ww / 2;\n        this.max_x = x_p + ww / 2;\n\n        this.min_y = y_p - hh / 2;\n        this.max_y = y_p + hh / 2;\n    }\n\n});\n\ncc._RFpop();\n},{}],\"socket.io\":[function(require,module,exports){\n(function (global){\n\"use strict\";\ncc._RFpush(module, '553f6EpdwZG5LbBbiTVZDSa', 'socket.io');\n// Script/LIB/socket.io.js\n\nif (!cc.sys.isNative) {\n\n  (function (f) {\n    if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n      module.exports = f();\n    } else if (typeof define === \"function\" && define.amd) {\n      define([], f);\n    } else {\n      var g;if (typeof window !== \"undefined\") {\n        g = window;\n      } else if (typeof global !== \"undefined\") {\n        g = global;\n      } else if (typeof self !== \"undefined\") {\n        g = self;\n      } else {\n        g = this;\n      }g.io = f();\n    }\n  })(function () {\n    var define, module, exports;return (function e(t, n, r) {\n      function s(o, u) {\n        if (!n[o]) {\n          if (!t[o]) {\n            var a = typeof require == \"function\" && require;if (!u && a) return a(o, !0);if (i) return i(o, !0);var f = new Error(\"Cannot find module '\" + o + \"'\");throw (f.code = \"MODULE_NOT_FOUND\", f);\n          }var l = n[o] = { exports: {} };t[o][0].call(l.exports, function (e) {\n            var n = t[o][1][e];return s(n ? n : e);\n          }, l, l.exports, e, t, n, r);\n        }return n[o].exports;\n      }var i = typeof require == \"function\" && require;for (var o = 0; o < r.length; o++) s(r[o]);return s;\n    })({ 1: [function (_dereq_, module, exports) {\n\n        module.exports = _dereq_('./lib/');\n      }, { \"./lib/\": 2 }], 2: [function (_dereq_, module, exports) {\n\n        module.exports = _dereq_('./socket');\n\n        /**\n         * Exports parser\n         *\n         * @api public\n         *\n         */\n        module.exports.parser = _dereq_('engine.io-parser');\n      }, { \"./socket\": 3, \"engine.io-parser\": 19 }], 3: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module dependencies.\n           */\n\n          var transports = _dereq_('./transports');\n          var Emitter = _dereq_('component-emitter');\n          var debug = _dereq_('debug')('engine.io-client:socket');\n          var index = _dereq_('indexof');\n          var parser = _dereq_('engine.io-parser');\n          var parseuri = _dereq_('parseuri');\n          var parsejson = _dereq_('parsejson');\n          var parseqs = _dereq_('parseqs');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = Socket;\n\n          /**\n           * Noop function.\n           *\n           * @api private\n           */\n\n          function noop() {}\n\n          /**\n           * Socket constructor.\n           *\n           * @param {String|Object} uri or options\n           * @param {Object} options\n           * @api public\n           */\n\n          function Socket(uri, opts) {\n            if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n            opts = opts || {};\n\n            if (uri && 'object' == typeof uri) {\n              opts = uri;\n              uri = null;\n            }\n\n            if (uri) {\n              uri = parseuri(uri);\n              opts.hostname = uri.host;\n              opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';\n              opts.port = uri.port;\n              if (uri.query) opts.query = uri.query;\n            } else if (opts.host) {\n              opts.hostname = parseuri(opts.host).host;\n            }\n\n            this.secure = null != opts.secure ? opts.secure : global.location && 'https:' == location.protocol;\n\n            if (opts.hostname && !opts.port) {\n              // if no port is specified manually, use the protocol default\n              opts.port = this.secure ? '443' : '80';\n            }\n\n            this.agent = opts.agent || false;\n            this.hostname = opts.hostname || (global.location ? location.hostname : 'localhost');\n            this.port = opts.port || (global.location && location.port ? location.port : this.secure ? 443 : 80);\n            this.query = opts.query || {};\n            if ('string' == typeof this.query) this.query = parseqs.decode(this.query);\n            this.upgrade = false !== opts.upgrade;\n            this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n            this.forceJSONP = !!opts.forceJSONP;\n            this.jsonp = false !== opts.jsonp;\n            this.forceBase64 = !!opts.forceBase64;\n            this.enablesXDR = !!opts.enablesXDR;\n            this.timestampParam = opts.timestampParam || 't';\n            this.timestampRequests = opts.timestampRequests;\n            this.transports = opts.transports || ['polling', 'websocket'];\n            this.readyState = '';\n            this.writeBuffer = [];\n            this.policyPort = opts.policyPort || 843;\n            this.rememberUpgrade = opts.rememberUpgrade || false;\n            this.binaryType = null;\n            this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n            this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;\n\n            if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n            if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n              this.perMessageDeflate.threshold = 1024;\n            }\n\n            // SSL options for Node.js client\n            this.pfx = opts.pfx || null;\n            this.key = opts.key || null;\n            this.passphrase = opts.passphrase || null;\n            this.cert = opts.cert || null;\n            this.ca = opts.ca || null;\n            this.ciphers = opts.ciphers || null;\n            this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? null : opts.rejectUnauthorized;\n\n            // other options for Node.js client\n            var freeGlobal = typeof global == 'object' && global;\n            if (freeGlobal.global === freeGlobal) {\n              if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n                this.extraHeaders = opts.extraHeaders;\n              }\n            }\n\n            this.open();\n          }\n\n          Socket.priorWebsocketSuccess = false;\n\n          /**\n           * Mix in `Emitter`.\n           */\n\n          Emitter(Socket.prototype);\n\n          /**\n           * Protocol version.\n           *\n           * @api public\n           */\n\n          Socket.protocol = parser.protocol; // this is an int\n\n          /**\n           * Expose deps for legacy compatibility\n           * and standalone browser access.\n           */\n\n          Socket.Socket = Socket;\n          Socket.Transport = _dereq_('./transport');\n          Socket.transports = _dereq_('./transports');\n          Socket.parser = _dereq_('engine.io-parser');\n\n          /**\n           * Creates transport of the given type.\n           *\n           * @param {String} transport name\n           * @return {Transport}\n           * @api private\n           */\n\n          Socket.prototype.createTransport = function (name) {\n            debug('creating transport \"%s\"', name);\n            var query = clone(this.query);\n\n            // append engine.io protocol identifier\n            query.EIO = parser.protocol;\n\n            // transport name\n            query.transport = name;\n\n            // session id if we already have one\n            if (this.id) query.sid = this.id;\n\n            var transport = new transports[name]({\n              agent: this.agent,\n              hostname: this.hostname,\n              port: this.port,\n              secure: this.secure,\n              path: this.path,\n              query: query,\n              forceJSONP: this.forceJSONP,\n              jsonp: this.jsonp,\n              forceBase64: this.forceBase64,\n              enablesXDR: this.enablesXDR,\n              timestampRequests: this.timestampRequests,\n              timestampParam: this.timestampParam,\n              policyPort: this.policyPort,\n              socket: this,\n              pfx: this.pfx,\n              key: this.key,\n              passphrase: this.passphrase,\n              cert: this.cert,\n              ca: this.ca,\n              ciphers: this.ciphers,\n              rejectUnauthorized: this.rejectUnauthorized,\n              perMessageDeflate: this.perMessageDeflate,\n              extraHeaders: this.extraHeaders\n            });\n\n            return transport;\n          };\n\n          function clone(obj) {\n            var o = {};\n            for (var i in obj) {\n              if (obj.hasOwnProperty(i)) {\n                o[i] = obj[i];\n              }\n            }\n            return o;\n          }\n\n          /**\n           * Initializes transport to use and starts probe.\n           *\n           * @api private\n           */\n          Socket.prototype.open = function () {\n            var transport;\n            if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {\n              transport = 'websocket';\n            } else if (0 === this.transports.length) {\n              // Emit error on next tick so it can be listened to\n              var self = this;\n              setTimeout(function () {\n                self.emit('error', 'No transports available');\n              }, 0);\n              return;\n            } else {\n              transport = this.transports[0];\n            }\n            this.readyState = 'opening';\n\n            // Retry with the next transport if the transport is disabled (jsonp: false)\n            try {\n              transport = this.createTransport(transport);\n            } catch (e) {\n              this.transports.shift();\n              this.open();\n              return;\n            }\n\n            transport.open();\n            this.setTransport(transport);\n          };\n\n          /**\n           * Sets the current transport. Disables the existing one (if any).\n           *\n           * @api private\n           */\n\n          Socket.prototype.setTransport = function (transport) {\n            debug('setting transport %s', transport.name);\n            var self = this;\n\n            if (this.transport) {\n              debug('clearing existing transport %s', this.transport.name);\n              this.transport.removeAllListeners();\n            }\n\n            // set up transport\n            this.transport = transport;\n\n            // set up transport listeners\n            transport.on('drain', function () {\n              self.onDrain();\n            }).on('packet', function (packet) {\n              self.onPacket(packet);\n            }).on('error', function (e) {\n              self.onError(e);\n            }).on('close', function () {\n              self.onClose('transport close');\n            });\n          };\n\n          /**\n           * Probes a transport.\n           *\n           * @param {String} transport name\n           * @api private\n           */\n\n          Socket.prototype.probe = function (name) {\n            debug('probing transport \"%s\"', name);\n            var transport = this.createTransport(name, { probe: 1 }),\n                failed = false,\n                self = this;\n\n            Socket.priorWebsocketSuccess = false;\n\n            function onTransportOpen() {\n              if (self.onlyBinaryUpgrades) {\n                var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n                failed = failed || upgradeLosesBinary;\n              }\n              if (failed) return;\n\n              debug('probe transport \"%s\" opened', name);\n              transport.send([{ type: 'ping', data: 'probe' }]);\n              transport.once('packet', function (msg) {\n                if (failed) return;\n                if ('pong' == msg.type && 'probe' == msg.data) {\n                  debug('probe transport \"%s\" pong', name);\n                  self.upgrading = true;\n                  self.emit('upgrading', transport);\n                  if (!transport) return;\n                  Socket.priorWebsocketSuccess = 'websocket' == transport.name;\n\n                  debug('pausing current transport \"%s\"', self.transport.name);\n                  self.transport.pause(function () {\n                    if (failed) return;\n                    if ('closed' == self.readyState) return;\n                    debug('changing transport and sending upgrade packet');\n\n                    cleanup();\n\n                    self.setTransport(transport);\n                    transport.send([{ type: 'upgrade' }]);\n                    self.emit('upgrade', transport);\n                    transport = null;\n                    self.upgrading = false;\n                    self.flush();\n                  });\n                } else {\n                  debug('probe transport \"%s\" failed', name);\n                  var err = new Error('probe error');\n                  err.transport = transport.name;\n                  self.emit('upgradeError', err);\n                }\n              });\n            }\n\n            function freezeTransport() {\n              if (failed) return;\n\n              // Any callback called by transport should be ignored since now\n              failed = true;\n\n              cleanup();\n\n              transport.close();\n              transport = null;\n            }\n\n            //Handle any error that happens while probing\n            function onerror(err) {\n              var error = new Error('probe error: ' + err);\n              error.transport = transport.name;\n\n              freezeTransport();\n\n              debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n              self.emit('upgradeError', error);\n            }\n\n            function onTransportClose() {\n              onerror(\"transport closed\");\n            }\n\n            //When the socket is closed while we're probing\n            function onclose() {\n              onerror(\"socket closed\");\n            }\n\n            //When the socket is upgraded while we're probing\n            function onupgrade(to) {\n              if (transport && to.name != transport.name) {\n                debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n                freezeTransport();\n              }\n            }\n\n            //Remove all listeners on the transport and on self\n            function cleanup() {\n              transport.removeListener('open', onTransportOpen);\n              transport.removeListener('error', onerror);\n              transport.removeListener('close', onTransportClose);\n              self.removeListener('close', onclose);\n              self.removeListener('upgrading', onupgrade);\n            }\n\n            transport.once('open', onTransportOpen);\n            transport.once('error', onerror);\n            transport.once('close', onTransportClose);\n\n            this.once('close', onclose);\n            this.once('upgrading', onupgrade);\n\n            transport.open();\n          };\n\n          /**\n           * Called when connection is deemed open.\n           *\n           * @api public\n           */\n\n          Socket.prototype.onOpen = function () {\n            debug('socket open');\n            this.readyState = 'open';\n            Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;\n            this.emit('open');\n            this.flush();\n\n            // we check for `readyState` in case an `open`\n            // listener already closed the socket\n            if ('open' == this.readyState && this.upgrade && this.transport.pause) {\n              debug('starting upgrade probes');\n              for (var i = 0, l = this.upgrades.length; i < l; i++) {\n                this.probe(this.upgrades[i]);\n              }\n            }\n          };\n\n          /**\n           * Handles a packet.\n           *\n           * @api private\n           */\n\n          Socket.prototype.onPacket = function (packet) {\n            if ('opening' == this.readyState || 'open' == this.readyState) {\n              debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n              this.emit('packet', packet);\n\n              // Socket is live - any packet counts\n              this.emit('heartbeat');\n\n              switch (packet.type) {\n                case 'open':\n                  this.onHandshake(parsejson(packet.data));\n                  break;\n\n                case 'pong':\n                  this.setPing();\n                  this.emit('pong');\n                  break;\n\n                case 'error':\n                  var err = new Error('server error');\n                  err.code = packet.data;\n                  this.onError(err);\n                  break;\n\n                case 'message':\n                  this.emit('data', packet.data);\n                  this.emit('message', packet.data);\n                  break;\n              }\n            } else {\n              debug('packet received with socket readyState \"%s\"', this.readyState);\n            }\n          };\n\n          /**\n           * Called upon handshake completion.\n           *\n           * @param {Object} handshake obj\n           * @api private\n           */\n\n          Socket.prototype.onHandshake = function (data) {\n            this.emit('handshake', data);\n            this.id = data.sid;\n            this.transport.query.sid = data.sid;\n            this.upgrades = this.filterUpgrades(data.upgrades);\n            this.pingInterval = data.pingInterval;\n            this.pingTimeout = data.pingTimeout;\n            this.onOpen();\n            // In case open handler closes socket\n            if ('closed' == this.readyState) return;\n            this.setPing();\n\n            // Prolong liveness of socket on heartbeat\n            this.removeListener('heartbeat', this.onHeartbeat);\n            this.on('heartbeat', this.onHeartbeat);\n          };\n\n          /**\n           * Resets ping timeout.\n           *\n           * @api private\n           */\n\n          Socket.prototype.onHeartbeat = function (timeout) {\n            clearTimeout(this.pingTimeoutTimer);\n            var self = this;\n            self.pingTimeoutTimer = setTimeout(function () {\n              if ('closed' == self.readyState) return;\n              self.onClose('ping timeout');\n            }, timeout || self.pingInterval + self.pingTimeout);\n          };\n\n          /**\n           * Pings server every `this.pingInterval` and expects response\n           * within `this.pingTimeout` or closes connection.\n           *\n           * @api private\n           */\n\n          Socket.prototype.setPing = function () {\n            var self = this;\n            clearTimeout(self.pingIntervalTimer);\n            self.pingIntervalTimer = setTimeout(function () {\n              debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n              self.ping();\n              self.onHeartbeat(self.pingTimeout);\n            }, self.pingInterval);\n          };\n\n          /**\n          * Sends a ping packet.\n          *\n          * @api private\n          */\n\n          Socket.prototype.ping = function () {\n            var self = this;\n            this.sendPacket('ping', function () {\n              self.emit('ping');\n            });\n          };\n\n          /**\n           * Called on `drain` event\n           *\n           * @api private\n           */\n\n          Socket.prototype.onDrain = function () {\n            this.writeBuffer.splice(0, this.prevBufferLen);\n\n            // setting prevBufferLen = 0 is very important\n            // for example, when upgrading, upgrade packet is sent over,\n            // and a nonzero prevBufferLen could cause problems on `drain`\n            this.prevBufferLen = 0;\n\n            if (0 === this.writeBuffer.length) {\n              this.emit('drain');\n            } else {\n              this.flush();\n            }\n          };\n\n          /**\n           * Flush write buffers.\n           *\n           * @api private\n           */\n\n          Socket.prototype.flush = function () {\n            if ('closed' != this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n              debug('flushing %d packets in socket', this.writeBuffer.length);\n              this.transport.send(this.writeBuffer);\n              // keep track of current length of writeBuffer\n              // splice writeBuffer and callbackBuffer on `drain`\n              this.prevBufferLen = this.writeBuffer.length;\n              this.emit('flush');\n            }\n          };\n\n          /**\n           * Sends a message.\n           *\n           * @param {String} message.\n           * @param {Function} callback function.\n           * @param {Object} options.\n           * @return {Socket} for chaining.\n           * @api public\n           */\n\n          Socket.prototype.write = Socket.prototype.send = function (msg, options, fn) {\n            this.sendPacket('message', msg, options, fn);\n            return this;\n          };\n\n          /**\n           * Sends a packet.\n           *\n           * @param {String} packet type.\n           * @param {String} data.\n           * @param {Object} options.\n           * @param {Function} callback function.\n           * @api private\n           */\n\n          Socket.prototype.sendPacket = function (type, data, options, fn) {\n            if ('function' == typeof data) {\n              fn = data;\n              data = undefined;\n            }\n\n            if ('function' == typeof options) {\n              fn = options;\n              options = null;\n            }\n\n            if ('closing' == this.readyState || 'closed' == this.readyState) {\n              return;\n            }\n\n            options = options || {};\n            options.compress = false !== options.compress;\n\n            var packet = {\n              type: type,\n              data: data,\n              options: options\n            };\n            this.emit('packetCreate', packet);\n            this.writeBuffer.push(packet);\n            if (fn) this.once('flush', fn);\n            this.flush();\n          };\n\n          /**\n           * Closes the connection.\n           *\n           * @api private\n           */\n\n          Socket.prototype.close = function () {\n            if ('opening' == this.readyState || 'open' == this.readyState) {\n              this.readyState = 'closing';\n\n              var self = this;\n\n              if (this.writeBuffer.length) {\n                this.once('drain', function () {\n                  if (this.upgrading) {\n                    waitForUpgrade();\n                  } else {\n                    close();\n                  }\n                });\n              } else if (this.upgrading) {\n                waitForUpgrade();\n              } else {\n                close();\n              }\n            }\n\n            function close() {\n              self.onClose('forced close');\n              debug('socket closing - telling transport to close');\n              self.transport.close();\n            }\n\n            function cleanupAndClose() {\n              self.removeListener('upgrade', cleanupAndClose);\n              self.removeListener('upgradeError', cleanupAndClose);\n              close();\n            }\n\n            function waitForUpgrade() {\n              // wait for upgrade to finish since we can't send packets while pausing a transport\n              self.once('upgrade', cleanupAndClose);\n              self.once('upgradeError', cleanupAndClose);\n            }\n\n            return this;\n          };\n\n          /**\n           * Called upon transport error\n           *\n           * @api private\n           */\n\n          Socket.prototype.onError = function (err) {\n            debug('socket error %j', err);\n            Socket.priorWebsocketSuccess = false;\n            this.emit('error', err);\n            this.onClose('transport error', err);\n          };\n\n          /**\n           * Called upon transport close.\n           *\n           * @api private\n           */\n\n          Socket.prototype.onClose = function (reason, desc) {\n            if ('opening' == this.readyState || 'open' == this.readyState || 'closing' == this.readyState) {\n              debug('socket close with reason: \"%s\"', reason);\n              var self = this;\n\n              // clear timers\n              clearTimeout(this.pingIntervalTimer);\n              clearTimeout(this.pingTimeoutTimer);\n\n              // stop event from firing again for transport\n              this.transport.removeAllListeners('close');\n\n              // ensure transport won't stay open\n              this.transport.close();\n\n              // ignore further transport communication\n              this.transport.removeAllListeners();\n\n              // set ready state\n              this.readyState = 'closed';\n\n              // clear session id\n              this.id = null;\n\n              // emit close event\n              this.emit('close', reason, desc);\n\n              // clean buffers after, so users can still\n              // grab the buffers on `close` event\n              self.writeBuffer = [];\n              self.prevBufferLen = 0;\n            }\n          };\n\n          /**\n           * Filters upgrades, returning only those matching client transports.\n           *\n           * @param {Array} server upgrades\n           * @api private\n           *\n           */\n\n          Socket.prototype.filterUpgrades = function (upgrades) {\n            var filteredUpgrades = [];\n            for (var i = 0, j = upgrades.length; i < j; i++) {\n              if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n            }\n            return filteredUpgrades;\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./transport\": 4, \"./transports\": 5, \"component-emitter\": 15, \"debug\": 17, \"engine.io-parser\": 19, \"indexof\": 23, \"parsejson\": 26, \"parseqs\": 27, \"parseuri\": 28 }], 4: [function (_dereq_, module, exports) {\n        /**\n         * Module dependencies.\n         */\n\n        var parser = _dereq_('engine.io-parser');\n        var Emitter = _dereq_('component-emitter');\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = Transport;\n\n        /**\n         * Transport abstract constructor.\n         *\n         * @param {Object} options.\n         * @api private\n         */\n\n        function Transport(opts) {\n          this.path = opts.path;\n          this.hostname = opts.hostname;\n          this.port = opts.port;\n          this.secure = opts.secure;\n          this.query = opts.query;\n          this.timestampParam = opts.timestampParam;\n          this.timestampRequests = opts.timestampRequests;\n          this.readyState = '';\n          this.agent = opts.agent || false;\n          this.socket = opts.socket;\n          this.enablesXDR = opts.enablesXDR;\n\n          // SSL options for Node.js client\n          this.pfx = opts.pfx;\n          this.key = opts.key;\n          this.passphrase = opts.passphrase;\n          this.cert = opts.cert;\n          this.ca = opts.ca;\n          this.ciphers = opts.ciphers;\n          this.rejectUnauthorized = opts.rejectUnauthorized;\n\n          // other options for Node.js client\n          this.extraHeaders = opts.extraHeaders;\n        }\n\n        /**\n         * Mix in `Emitter`.\n         */\n\n        Emitter(Transport.prototype);\n\n        /**\n         * Emits an error.\n         *\n         * @param {String} str\n         * @return {Transport} for chaining\n         * @api public\n         */\n\n        Transport.prototype.onError = function (msg, desc) {\n          var err = new Error(msg);\n          err.type = 'TransportError';\n          err.description = desc;\n          this.emit('error', err);\n          return this;\n        };\n\n        /**\n         * Opens the transport.\n         *\n         * @api public\n         */\n\n        Transport.prototype.open = function () {\n          if ('closed' == this.readyState || '' == this.readyState) {\n            this.readyState = 'opening';\n            this.doOpen();\n          }\n\n          return this;\n        };\n\n        /**\n         * Closes the transport.\n         *\n         * @api private\n         */\n\n        Transport.prototype.close = function () {\n          if ('opening' == this.readyState || 'open' == this.readyState) {\n            this.doClose();\n            this.onClose();\n          }\n\n          return this;\n        };\n\n        /**\n         * Sends multiple packets.\n         *\n         * @param {Array} packets\n         * @api private\n         */\n\n        Transport.prototype.send = function (packets) {\n          if ('open' == this.readyState) {\n            this.write(packets);\n          } else {\n            throw new Error('Transport not open');\n          }\n        };\n\n        /**\n         * Called upon open\n         *\n         * @api private\n         */\n\n        Transport.prototype.onOpen = function () {\n          this.readyState = 'open';\n          this.writable = true;\n          this.emit('open');\n        };\n\n        /**\n         * Called with data.\n         *\n         * @param {String} data\n         * @api private\n         */\n\n        Transport.prototype.onData = function (data) {\n          var packet = parser.decodePacket(data, this.socket.binaryType);\n          this.onPacket(packet);\n        };\n\n        /**\n         * Called with a decoded packet.\n         */\n\n        Transport.prototype.onPacket = function (packet) {\n          this.emit('packet', packet);\n        };\n\n        /**\n         * Called upon close.\n         *\n         * @api private\n         */\n\n        Transport.prototype.onClose = function () {\n          this.readyState = 'closed';\n          this.emit('close');\n        };\n      }, { \"component-emitter\": 15, \"engine.io-parser\": 19 }], 5: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module dependencies\n           */\n\n          var XMLHttpRequest = _dereq_('xmlhttprequest-ssl');\n          var XHR = _dereq_('./polling-xhr');\n          var JSONP = _dereq_('./polling-jsonp');\n          var websocket = _dereq_('./websocket');\n\n          /**\n           * Export transports.\n           */\n\n          exports.polling = polling;\n          exports.websocket = websocket;\n\n          /**\n           * Polling transport polymorphic constructor.\n           * Decides on xhr vs jsonp based on feature detection.\n           *\n           * @api private\n           */\n\n          function polling(opts) {\n            var xhr;\n            var xd = false;\n            var xs = false;\n            var jsonp = false !== opts.jsonp;\n\n            if (global.location) {\n              var isSSL = 'https:' == location.protocol;\n              var port = location.port;\n\n              // some user agents have empty `location.port`\n              if (!port) {\n                port = isSSL ? 443 : 80;\n              }\n\n              xd = opts.hostname != location.hostname || port != opts.port;\n              xs = opts.secure != isSSL;\n            }\n\n            opts.xdomain = xd;\n            opts.xscheme = xs;\n            xhr = new XMLHttpRequest(opts);\n\n            if ('open' in xhr && !opts.forceJSONP) {\n              return new XHR(opts);\n            } else {\n              if (!jsonp) throw new Error('JSONP disabled');\n              return new JSONP(opts);\n            }\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./polling-jsonp\": 6, \"./polling-xhr\": 7, \"./websocket\": 9, \"xmlhttprequest-ssl\": 10 }], 6: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          /**\n           * Module requirements.\n           */\n\n          var Polling = _dereq_('./polling');\n          var inherit = _dereq_('component-inherit');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = JSONPPolling;\n\n          /**\n           * Cached regular expressions.\n           */\n\n          var rNewline = /\\n/g;\n          var rEscapedNewline = /\\\\n/g;\n\n          /**\n           * Global JSONP callbacks.\n           */\n\n          var callbacks;\n\n          /**\n           * Callbacks count.\n           */\n\n          var index = 0;\n\n          /**\n           * Noop.\n           */\n\n          function empty() {}\n\n          /**\n           * JSONP Polling constructor.\n           *\n           * @param {Object} opts.\n           * @api public\n           */\n\n          function JSONPPolling(opts) {\n            Polling.call(this, opts);\n\n            this.query = this.query || {};\n\n            // define global callbacks array if not present\n            // we do this here (lazily) to avoid unneeded global pollution\n            if (!callbacks) {\n              // we need to consider multiple engines in the same page\n              if (!global.___eio) global.___eio = [];\n              callbacks = global.___eio;\n            }\n\n            // callback identifier\n            this.index = callbacks.length;\n\n            // add callback to jsonp global\n            var self = this;\n            callbacks.push(function (msg) {\n              self.onData(msg);\n            });\n\n            // append to query string\n            this.query.j = this.index;\n\n            // prevent spurious errors from being emitted when the window is unloaded\n            if (global.document && global.addEventListener) {\n              global.addEventListener('beforeunload', function () {\n                if (self.script) self.script.onerror = empty;\n              }, false);\n            }\n          }\n\n          /**\n           * Inherits from Polling.\n           */\n\n          inherit(JSONPPolling, Polling);\n\n          /*\n           * JSONP only supports binary as base64 encoded strings\n           */\n\n          JSONPPolling.prototype.supportsBinary = false;\n\n          /**\n           * Closes the socket.\n           *\n           * @api private\n           */\n\n          JSONPPolling.prototype.doClose = function () {\n            if (this.script) {\n              this.script.parentNode.removeChild(this.script);\n              this.script = null;\n            }\n\n            if (this.form) {\n              this.form.parentNode.removeChild(this.form);\n              this.form = null;\n              this.iframe = null;\n            }\n\n            Polling.prototype.doClose.call(this);\n          };\n\n          /**\n           * Starts a poll cycle.\n           *\n           * @api private\n           */\n\n          JSONPPolling.prototype.doPoll = function () {\n            var self = this;\n            var script = document.createElement('script');\n\n            if (this.script) {\n              this.script.parentNode.removeChild(this.script);\n              this.script = null;\n            }\n\n            script.async = true;\n            script.src = this.uri();\n            script.onerror = function (e) {\n              self.onError('jsonp poll error', e);\n            };\n\n            var insertAt = document.getElementsByTagName('script')[0];\n            if (insertAt) {\n              insertAt.parentNode.insertBefore(script, insertAt);\n            } else {\n              (document.head || document.body).appendChild(script);\n            }\n            this.script = script;\n\n            var isUAgecko = 'undefined' != typeof navigator && /gecko/i.test(navigator.userAgent);\n\n            if (isUAgecko) {\n              setTimeout(function () {\n                var iframe = document.createElement('iframe');\n                document.body.appendChild(iframe);\n                document.body.removeChild(iframe);\n              }, 100);\n            }\n          };\n\n          /**\n           * Writes with a hidden iframe.\n           *\n           * @param {String} data to send\n           * @param {Function} called upon flush.\n           * @api private\n           */\n\n          JSONPPolling.prototype.doWrite = function (data, fn) {\n            var self = this;\n\n            if (!this.form) {\n              var form = document.createElement('form');\n              var area = document.createElement('textarea');\n              var id = this.iframeId = 'eio_iframe_' + this.index;\n              var iframe;\n\n              form.className = 'socketio';\n              form.style.position = 'absolute';\n              form.style.top = '-1000px';\n              form.style.left = '-1000px';\n              form.target = id;\n              form.method = 'POST';\n              form.setAttribute('accept-charset', 'utf-8');\n              area.name = 'd';\n              form.appendChild(area);\n              document.body.appendChild(form);\n\n              this.form = form;\n              this.area = area;\n            }\n\n            this.form.action = this.uri();\n\n            function complete() {\n              initIframe();\n              fn();\n            }\n\n            function initIframe() {\n              if (self.iframe) {\n                try {\n                  self.form.removeChild(self.iframe);\n                } catch (e) {\n                  self.onError('jsonp polling iframe removal error', e);\n                }\n              }\n\n              try {\n                // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n                var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n                iframe = document.createElement(html);\n              } catch (e) {\n                iframe = document.createElement('iframe');\n                iframe.name = self.iframeId;\n                iframe.src = 'javascript:0';\n              }\n\n              iframe.id = self.iframeId;\n\n              self.form.appendChild(iframe);\n              self.iframe = iframe;\n            }\n\n            initIframe();\n\n            // escape \\n to prevent it from being converted into \\r\\n by some UAs\n            // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n            data = data.replace(rEscapedNewline, '\\\\\\n');\n            this.area.value = data.replace(rNewline, '\\\\n');\n\n            try {\n              this.form.submit();\n            } catch (e) {}\n\n            if (this.iframe.attachEvent) {\n              this.iframe.onreadystatechange = function () {\n                if (self.iframe.readyState == 'complete') {\n                  complete();\n                }\n              };\n            } else {\n              this.iframe.onload = complete;\n            }\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./polling\": 8, \"component-inherit\": 16 }], 7: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module requirements.\n           */\n\n          var XMLHttpRequest = _dereq_('xmlhttprequest-ssl');\n          var Polling = _dereq_('./polling');\n          var Emitter = _dereq_('component-emitter');\n          var inherit = _dereq_('component-inherit');\n          var debug = _dereq_('debug')('engine.io-client:polling-xhr');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = XHR;\n          module.exports.Request = Request;\n\n          /**\n           * Empty function\n           */\n\n          function empty() {}\n\n          /**\n           * XHR Polling constructor.\n           *\n           * @param {Object} opts\n           * @api public\n           */\n\n          function XHR(opts) {\n            Polling.call(this, opts);\n\n            if (global.location) {\n              var isSSL = 'https:' == location.protocol;\n              var port = location.port;\n\n              // some user agents have empty `location.port`\n              if (!port) {\n                port = isSSL ? 443 : 80;\n              }\n\n              this.xd = opts.hostname != global.location.hostname || port != opts.port;\n              this.xs = opts.secure != isSSL;\n            } else {\n              this.extraHeaders = opts.extraHeaders;\n            }\n          }\n\n          /**\n           * Inherits from Polling.\n           */\n\n          inherit(XHR, Polling);\n\n          /**\n           * XHR supports binary\n           */\n\n          XHR.prototype.supportsBinary = true;\n\n          /**\n           * Creates a request.\n           *\n           * @param {String} method\n           * @api private\n           */\n\n          XHR.prototype.request = function (opts) {\n            opts = opts || {};\n            opts.uri = this.uri();\n            opts.xd = this.xd;\n            opts.xs = this.xs;\n            opts.agent = this.agent || false;\n            opts.supportsBinary = this.supportsBinary;\n            opts.enablesXDR = this.enablesXDR;\n\n            // SSL options for Node.js client\n            opts.pfx = this.pfx;\n            opts.key = this.key;\n            opts.passphrase = this.passphrase;\n            opts.cert = this.cert;\n            opts.ca = this.ca;\n            opts.ciphers = this.ciphers;\n            opts.rejectUnauthorized = this.rejectUnauthorized;\n\n            // other options for Node.js client\n            opts.extraHeaders = this.extraHeaders;\n\n            return new Request(opts);\n          };\n\n          /**\n           * Sends data.\n           *\n           * @param {String} data to send.\n           * @param {Function} called upon flush.\n           * @api private\n           */\n\n          XHR.prototype.doWrite = function (data, fn) {\n            var isBinary = typeof data !== 'string' && data !== undefined;\n            var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n            var self = this;\n            req.on('success', fn);\n            req.on('error', function (err) {\n              self.onError('xhr post error', err);\n            });\n            this.sendXhr = req;\n          };\n\n          /**\n           * Starts a poll cycle.\n           *\n           * @api private\n           */\n\n          XHR.prototype.doPoll = function () {\n            debug('xhr poll');\n            var req = this.request();\n            var self = this;\n            req.on('data', function (data) {\n              self.onData(data);\n            });\n            req.on('error', function (err) {\n              self.onError('xhr poll error', err);\n            });\n            this.pollXhr = req;\n          };\n\n          /**\n           * Request constructor\n           *\n           * @param {Object} options\n           * @api public\n           */\n\n          function Request(opts) {\n            this.method = opts.method || 'GET';\n            this.uri = opts.uri;\n            this.xd = !!opts.xd;\n            this.xs = !!opts.xs;\n            this.async = false !== opts.async;\n            this.data = undefined != opts.data ? opts.data : null;\n            this.agent = opts.agent;\n            this.isBinary = opts.isBinary;\n            this.supportsBinary = opts.supportsBinary;\n            this.enablesXDR = opts.enablesXDR;\n\n            // SSL options for Node.js client\n            this.pfx = opts.pfx;\n            this.key = opts.key;\n            this.passphrase = opts.passphrase;\n            this.cert = opts.cert;\n            this.ca = opts.ca;\n            this.ciphers = opts.ciphers;\n            this.rejectUnauthorized = opts.rejectUnauthorized;\n\n            // other options for Node.js client\n            this.extraHeaders = opts.extraHeaders;\n\n            this.create();\n          }\n\n          /**\n           * Mix in `Emitter`.\n           */\n\n          Emitter(Request.prototype);\n\n          /**\n           * Creates the XHR object and sends the request.\n           *\n           * @api private\n           */\n\n          Request.prototype.create = function () {\n            var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n            // SSL options for Node.js client\n            opts.pfx = this.pfx;\n            opts.key = this.key;\n            opts.passphrase = this.passphrase;\n            opts.cert = this.cert;\n            opts.ca = this.ca;\n            opts.ciphers = this.ciphers;\n            opts.rejectUnauthorized = this.rejectUnauthorized;\n\n            var xhr = this.xhr = new XMLHttpRequest(opts);\n            var self = this;\n\n            try {\n              debug('xhr open %s: %s', this.method, this.uri);\n              xhr.open(this.method, this.uri, this.async);\n              try {\n                if (this.extraHeaders) {\n                  xhr.setDisableHeaderCheck(true);\n                  for (var i in this.extraHeaders) {\n                    if (this.extraHeaders.hasOwnProperty(i)) {\n                      xhr.setRequestHeader(i, this.extraHeaders[i]);\n                    }\n                  }\n                }\n              } catch (e) {}\n              if (this.supportsBinary) {\n                // This has to be done after open because Firefox is stupid\n                // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n                xhr.responseType = 'arraybuffer';\n              }\n\n              if ('POST' == this.method) {\n                try {\n                  if (this.isBinary) {\n                    xhr.setRequestHeader('Content-type', 'application/octet-stream');\n                  } else {\n                    xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n                  }\n                } catch (e) {}\n              }\n\n              // ie6 check\n              if ('withCredentials' in xhr) {\n                xhr.withCredentials = true;\n              }\n\n              if (this.hasXDR()) {\n                xhr.onload = function () {\n                  self.onLoad();\n                };\n                xhr.onerror = function () {\n                  self.onError(xhr.responseText);\n                };\n              } else {\n                xhr.onreadystatechange = function () {\n                  if (4 != xhr.readyState) return;\n                  if (200 == xhr.status || 1223 == xhr.status) {\n                    self.onLoad();\n                  } else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    setTimeout(function () {\n                      self.onError(xhr.status);\n                    }, 0);\n                  }\n                };\n              }\n\n              debug('xhr data %s', this.data);\n              xhr.send(this.data);\n            } catch (e) {\n              // Need to defer since .create() is called directly fhrom the constructor\n              // and thus the 'error' event can only be only bound *after* this exception\n              // occurs.  Therefore, also, we cannot throw here at all.\n              setTimeout(function () {\n                self.onError(e);\n              }, 0);\n              return;\n            }\n\n            if (global.document) {\n              this.index = Request.requestsCount++;\n              Request.requests[this.index] = this;\n            }\n          };\n\n          /**\n           * Called upon successful response.\n           *\n           * @api private\n           */\n\n          Request.prototype.onSuccess = function () {\n            this.emit('success');\n            this.cleanup();\n          };\n\n          /**\n           * Called if we have data.\n           *\n           * @api private\n           */\n\n          Request.prototype.onData = function (data) {\n            this.emit('data', data);\n            this.onSuccess();\n          };\n\n          /**\n           * Called upon error.\n           *\n           * @api private\n           */\n\n          Request.prototype.onError = function (err) {\n            this.emit('error', err);\n            this.cleanup(true);\n          };\n\n          /**\n           * Cleans up house.\n           *\n           * @api private\n           */\n\n          Request.prototype.cleanup = function (fromError) {\n            if ('undefined' == typeof this.xhr || null === this.xhr) {\n              return;\n            }\n            // xmlhttprequest\n            if (this.hasXDR()) {\n              this.xhr.onload = this.xhr.onerror = empty;\n            } else {\n              this.xhr.onreadystatechange = empty;\n            }\n\n            if (fromError) {\n              try {\n                this.xhr.abort();\n              } catch (e) {}\n            }\n\n            if (global.document) {\n              delete Request.requests[this.index];\n            }\n\n            this.xhr = null;\n          };\n\n          /**\n           * Called upon load.\n           *\n           * @api private\n           */\n\n          Request.prototype.onLoad = function () {\n            var data;\n            try {\n              var contentType;\n              try {\n                contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n              } catch (e) {}\n              if (contentType === 'application/octet-stream') {\n                data = this.xhr.response;\n              } else {\n                if (!this.supportsBinary) {\n                  data = this.xhr.responseText;\n                } else {\n                  try {\n                    data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n                  } catch (e) {\n                    var ui8Arr = new Uint8Array(this.xhr.response);\n                    var dataArray = [];\n                    for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n                      dataArray.push(ui8Arr[idx]);\n                    }\n\n                    data = String.fromCharCode.apply(null, dataArray);\n                  }\n                }\n              }\n            } catch (e) {\n              this.onError(e);\n            }\n            if (null != data) {\n              this.onData(data);\n            }\n          };\n\n          /**\n           * Check if it has XDomainRequest.\n           *\n           * @api private\n           */\n\n          Request.prototype.hasXDR = function () {\n            return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n          };\n\n          /**\n           * Aborts the request.\n           *\n           * @api public\n           */\n\n          Request.prototype.abort = function () {\n            this.cleanup();\n          };\n\n          /**\n           * Aborts pending requests when unloading the window. This is needed to prevent\n           * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n           * emitted.\n           */\n\n          if (global.document) {\n            Request.requestsCount = 0;\n            Request.requests = {};\n            if (global.attachEvent) {\n              global.attachEvent('onunload', unloadHandler);\n            } else if (global.addEventListener) {\n              global.addEventListener('beforeunload', unloadHandler, false);\n            }\n          }\n\n          function unloadHandler() {\n            for (var i in Request.requests) {\n              if (Request.requests.hasOwnProperty(i)) {\n                Request.requests[i].abort();\n              }\n            }\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./polling\": 8, \"component-emitter\": 15, \"component-inherit\": 16, \"debug\": 17, \"xmlhttprequest-ssl\": 10 }], 8: [function (_dereq_, module, exports) {\n        /**\n         * Module dependencies.\n         */\n\n        var Transport = _dereq_('../transport');\n        var parseqs = _dereq_('parseqs');\n        var parser = _dereq_('engine.io-parser');\n        var inherit = _dereq_('component-inherit');\n        var yeast = _dereq_('yeast');\n        var debug = _dereq_('debug')('engine.io-client:polling');\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = Polling;\n\n        /**\n         * Is XHR2 supported?\n         */\n\n        var hasXHR2 = (function () {\n          var XMLHttpRequest = _dereq_('xmlhttprequest-ssl');\n          var xhr = new XMLHttpRequest({ xdomain: false });\n          return null != xhr.responseType;\n        })();\n\n        /**\n         * Polling interface.\n         *\n         * @param {Object} opts\n         * @api private\n         */\n\n        function Polling(opts) {\n          var forceBase64 = opts && opts.forceBase64;\n          if (!hasXHR2 || forceBase64) {\n            this.supportsBinary = false;\n          }\n          Transport.call(this, opts);\n        }\n\n        /**\n         * Inherits from Transport.\n         */\n\n        inherit(Polling, Transport);\n\n        /**\n         * Transport name.\n         */\n\n        Polling.prototype.name = 'polling';\n\n        /**\n         * Opens the socket (triggers polling). We write a PING message to determine\n         * when the transport is open.\n         *\n         * @api private\n         */\n\n        Polling.prototype.doOpen = function () {\n          this.poll();\n        };\n\n        /**\n         * Pauses polling.\n         *\n         * @param {Function} callback upon buffers are flushed and transport is paused\n         * @api private\n         */\n\n        Polling.prototype.pause = function (onPause) {\n          var pending = 0;\n          var self = this;\n\n          this.readyState = 'pausing';\n\n          function pause() {\n            debug('paused');\n            self.readyState = 'paused';\n            onPause();\n          }\n\n          if (this.polling || !this.writable) {\n            var total = 0;\n\n            if (this.polling) {\n              debug('we are currently polling - waiting to pause');\n              total++;\n              this.once('pollComplete', function () {\n                debug('pre-pause polling complete');\n                --total || pause();\n              });\n            }\n\n            if (!this.writable) {\n              debug('we are currently writing - waiting to pause');\n              total++;\n              this.once('drain', function () {\n                debug('pre-pause writing complete');\n                --total || pause();\n              });\n            }\n          } else {\n            pause();\n          }\n        };\n\n        /**\n         * Starts polling cycle.\n         *\n         * @api public\n         */\n\n        Polling.prototype.poll = function () {\n          debug('polling');\n          this.polling = true;\n          this.doPoll();\n          this.emit('poll');\n        };\n\n        /**\n         * Overloads onData to detect payloads.\n         *\n         * @api private\n         */\n\n        Polling.prototype.onData = function (data) {\n          var self = this;\n          debug('polling got data %s', data);\n          var callback = function callback(packet, index, total) {\n            // if its the first message we consider the transport open\n            if ('opening' == self.readyState) {\n              self.onOpen();\n            }\n\n            // if its a close packet, we close the ongoing requests\n            if ('close' == packet.type) {\n              self.onClose();\n              return false;\n            }\n\n            // otherwise bypass onData and handle the message\n            self.onPacket(packet);\n          };\n\n          // decode payload\n          parser.decodePayload(data, this.socket.binaryType, callback);\n\n          // if an event did not trigger closing\n          if ('closed' != this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit('pollComplete');\n\n            if ('open' == this.readyState) {\n              this.poll();\n            } else {\n              debug('ignoring poll - transport state \"%s\"', this.readyState);\n            }\n          }\n        };\n\n        /**\n         * For polling, send a close packet.\n         *\n         * @api private\n         */\n\n        Polling.prototype.doClose = function () {\n          var self = this;\n\n          function close() {\n            debug('writing close packet');\n            self.write([{ type: 'close' }]);\n          }\n\n          if ('open' == this.readyState) {\n            debug('transport open - closing');\n            close();\n          } else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            debug('transport not open - deferring close');\n            this.once('open', close);\n          }\n        };\n\n        /**\n         * Writes a packets payload.\n         *\n         * @param {Array} data packets\n         * @param {Function} drain callback\n         * @api private\n         */\n\n        Polling.prototype.write = function (packets) {\n          var self = this;\n          this.writable = false;\n          var callbackfn = function callbackfn() {\n            self.writable = true;\n            self.emit('drain');\n          };\n\n          var self = this;\n          parser.encodePayload(packets, this.supportsBinary, function (data) {\n            self.doWrite(data, callbackfn);\n          });\n        };\n\n        /**\n         * Generates uri for connection.\n         *\n         * @api private\n         */\n\n        Polling.prototype.uri = function () {\n          var query = this.query || {};\n          var schema = this.secure ? 'https' : 'http';\n          var port = '';\n\n          // cache busting is forced\n          if (false !== this.timestampRequests) {\n            query[this.timestampParam] = yeast();\n          }\n\n          if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n          }\n\n          query = parseqs.encode(query);\n\n          // avoid port if default for schema\n          if (this.port && ('https' == schema && this.port != 443 || 'http' == schema && this.port != 80)) {\n            port = ':' + this.port;\n          }\n\n          // prepend ? to query\n          if (query.length) {\n            query = '?' + query;\n          }\n\n          var ipv6 = this.hostname.indexOf(':') !== -1;\n          return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n        };\n      }, { \"../transport\": 4, \"component-inherit\": 16, \"debug\": 17, \"engine.io-parser\": 19, \"parseqs\": 27, \"xmlhttprequest-ssl\": 10, \"yeast\": 30 }], 9: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module dependencies.\n           */\n\n          var Transport = _dereq_('../transport');\n          var parser = _dereq_('engine.io-parser');\n          var parseqs = _dereq_('parseqs');\n          var inherit = _dereq_('component-inherit');\n          var yeast = _dereq_('yeast');\n          var debug = _dereq_('debug')('engine.io-client:websocket');\n          var BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\n          /**\n           * Get either the `WebSocket` or `MozWebSocket` globals\n           * in the browser or the WebSocket-compatible interface\n           * exposed by `ws` for Node environment.\n           */\n\n          var WebSocket = BrowserWebSocket || (typeof window !== 'undefined' ? null : _dereq_('ws'));\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = WS;\n\n          /**\n           * WebSocket transport constructor.\n           *\n           * @api {Object} connection options\n           * @api public\n           */\n\n          function WS(opts) {\n            var forceBase64 = opts && opts.forceBase64;\n            if (forceBase64) {\n              this.supportsBinary = false;\n            }\n            this.perMessageDeflate = opts.perMessageDeflate;\n            Transport.call(this, opts);\n          }\n\n          /**\n           * Inherits from Transport.\n           */\n\n          inherit(WS, Transport);\n\n          /**\n           * Transport name.\n           *\n           * @api public\n           */\n\n          WS.prototype.name = 'websocket';\n\n          /*\n           * WebSockets support binary\n           */\n\n          WS.prototype.supportsBinary = true;\n\n          /**\n           * Opens socket.\n           *\n           * @api private\n           */\n\n          WS.prototype.doOpen = function () {\n            if (!this.check()) {\n              // let probe timeout\n              return;\n            }\n\n            var self = this;\n            var uri = this.uri();\n            var protocols = void 0;\n            var opts = {\n              agent: this.agent,\n              perMessageDeflate: this.perMessageDeflate\n            };\n\n            // SSL options for Node.js client\n            opts.pfx = this.pfx;\n            opts.key = this.key;\n            opts.passphrase = this.passphrase;\n            opts.cert = this.cert;\n            opts.ca = this.ca;\n            opts.ciphers = this.ciphers;\n            opts.rejectUnauthorized = this.rejectUnauthorized;\n            if (this.extraHeaders) {\n              opts.headers = this.extraHeaders;\n            }\n\n            this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n\n            if (this.ws.binaryType === undefined) {\n              this.supportsBinary = false;\n            }\n\n            if (this.ws.supports && this.ws.supports.binary) {\n              this.supportsBinary = true;\n              this.ws.binaryType = 'buffer';\n            } else {\n              this.ws.binaryType = 'arraybuffer';\n            }\n\n            this.addEventListeners();\n          };\n\n          /**\n           * Adds event listeners to the socket\n           *\n           * @api private\n           */\n\n          WS.prototype.addEventListeners = function () {\n            var self = this;\n\n            this.ws.onopen = function () {\n              self.onOpen();\n            };\n            this.ws.onclose = function () {\n              self.onClose();\n            };\n            this.ws.onmessage = function (ev) {\n              self.onData(ev.data);\n            };\n            this.ws.onerror = function (e) {\n              self.onError('websocket error', e);\n            };\n          };\n\n          /**\n           * Override `onData` to use a timer on iOS.\n           * See: https://gist.github.com/mloughran/2052006\n           *\n           * @api private\n           */\n\n          if ('undefined' != typeof navigator && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {\n            WS.prototype.onData = function (data) {\n              var self = this;\n              setTimeout(function () {\n                Transport.prototype.onData.call(self, data);\n              }, 0);\n            };\n          }\n\n          /**\n           * Writes data to socket.\n           *\n           * @param {Array} array of packets.\n           * @api private\n           */\n\n          WS.prototype.write = function (packets) {\n            var self = this;\n            this.writable = false;\n\n            // encodePacket efficient as it uses WS framing\n            // no need for encodePayload\n            var total = packets.length;\n            for (var i = 0, l = total; i < l; i++) {\n              (function (packet) {\n                parser.encodePacket(packet, self.supportsBinary, function (data) {\n                  if (!BrowserWebSocket) {\n                    // always create a new object (GH-437)\n                    var opts = {};\n                    if (packet.options) {\n                      opts.compress = packet.options.compress;\n                    }\n\n                    if (self.perMessageDeflate) {\n                      var len = 'string' == typeof data ? global.Buffer.byteLength(data) : data.length;\n                      if (len < self.perMessageDeflate.threshold) {\n                        opts.compress = false;\n                      }\n                    }\n                  }\n\n                  //Sometimes the websocket has already been closed but the browser didn't\n                  //have a chance of informing us about it yet, in that case send will\n                  //throw an error\n                  try {\n                    if (BrowserWebSocket) {\n                      // TypeError is thrown when passing the second argument on Safari\n                      self.ws.send(data);\n                    } else {\n                      self.ws.send(data, opts);\n                    }\n                  } catch (e) {\n                    debug('websocket closed before onclose event');\n                  }\n\n                  --total || done();\n                });\n              })(packets[i]);\n            }\n\n            function done() {\n              self.emit('flush');\n\n              // fake drain\n              // defer to next tick to allow Socket to clear writeBuffer\n              setTimeout(function () {\n                self.writable = true;\n                self.emit('drain');\n              }, 0);\n            }\n          };\n\n          /**\n           * Called upon close\n           *\n           * @api private\n           */\n\n          WS.prototype.onClose = function () {\n            Transport.prototype.onClose.call(this);\n          };\n\n          /**\n           * Closes socket.\n           *\n           * @api private\n           */\n\n          WS.prototype.doClose = function () {\n            if (typeof this.ws !== 'undefined') {\n              this.ws.close();\n            }\n          };\n\n          /**\n           * Generates uri for connection.\n           *\n           * @api private\n           */\n\n          WS.prototype.uri = function () {\n            var query = this.query || {};\n            var schema = this.secure ? 'wss' : 'ws';\n            var port = '';\n\n            // avoid port if default for schema\n            if (this.port && ('wss' == schema && this.port != 443 || 'ws' == schema && this.port != 80)) {\n              port = ':' + this.port;\n            }\n\n            // append timestamp to URI\n            if (this.timestampRequests) {\n              query[this.timestampParam] = yeast();\n            }\n\n            // communicate binary support capabilities\n            if (!this.supportsBinary) {\n              query.b64 = 1;\n            }\n\n            query = parseqs.encode(query);\n\n            // prepend ? to query\n            if (query.length) {\n              query = '?' + query;\n            }\n\n            var ipv6 = this.hostname.indexOf(':') !== -1;\n            return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n          };\n\n          /**\n           * Feature detection for WebSocket.\n           *\n           * @return {Boolean} whether this transport is available.\n           * @api public\n           */\n\n          WS.prototype.check = function () {\n            return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"../transport\": 4, \"component-inherit\": 16, \"debug\": 17, \"engine.io-parser\": 19, \"parseqs\": 27, \"ws\": undefined, \"yeast\": 30 }], 10: [function (_dereq_, module, exports) {\n        // browser shim for xmlhttprequest module\n        var hasCORS = _dereq_('has-cors');\n\n        module.exports = function (opts) {\n          var xdomain = opts.xdomain;\n\n          // scheme must be same when usign XDomainRequest\n          // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n          var xscheme = opts.xscheme;\n\n          // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n          // https://github.com/Automattic/engine.io-client/pull/217\n          var enablesXDR = opts.enablesXDR;\n\n          // XMLHttpRequest can be disabled on IE\n          try {\n            if ('undefined' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n              return new XMLHttpRequest();\n            }\n          } catch (e) {}\n\n          // Use XDomainRequest for IE8 if enablesXDR is true\n          // because loading bar keeps flashing when using jsonp-polling\n          // https://github.com/yujiosaka/socke.io-ie8-loading-example\n          try {\n            if ('undefined' != typeof XDomainRequest && !xscheme && enablesXDR) {\n              return new XDomainRequest();\n            }\n          } catch (e) {}\n\n          if (!xdomain) {\n            try {\n              return new ActiveXObject('Microsoft.XMLHTTP');\n            } catch (e) {}\n          }\n        };\n      }, { \"has-cors\": 22 }], 11: [function (_dereq_, module, exports) {\n        module.exports = after;\n\n        function after(count, callback, err_cb) {\n          var bail = false;\n          err_cb = err_cb || noop;\n          proxy.count = count;\n\n          return count === 0 ? callback() : proxy;\n\n          function proxy(err, result) {\n            if (proxy.count <= 0) {\n              throw new Error('after called too many times');\n            }\n            --proxy.count;\n\n            // after first error, rest are passed to err_cb\n            if (err) {\n              bail = true;\n              callback(err);\n              // future error callbacks will go to error handler\n              callback = err_cb;\n            } else if (proxy.count === 0 && !bail) {\n              callback(null, result);\n            }\n          }\n        }\n\n        function noop() {}\n      }, {}], 12: [function (_dereq_, module, exports) {\n        /**\n         * An abstraction for slicing an arraybuffer even when\n         * ArrayBuffer.prototype.slice is not supported\n         *\n         * @api public\n         */\n\n        module.exports = function (arraybuffer, start, end) {\n          var bytes = arraybuffer.byteLength;\n          start = start || 0;\n          end = end || bytes;\n\n          if (arraybuffer.slice) {\n            return arraybuffer.slice(start, end);\n          }\n\n          if (start < 0) {\n            start += bytes;\n          }\n          if (end < 0) {\n            end += bytes;\n          }\n          if (end > bytes) {\n            end = bytes;\n          }\n\n          if (start >= bytes || start >= end || bytes === 0) {\n            return new ArrayBuffer(0);\n          }\n\n          var abv = new Uint8Array(arraybuffer);\n          var result = new Uint8Array(end - start);\n          for (var i = start, ii = 0; i < end; i++, ii++) {\n            result[ii] = abv[i];\n          }\n          return result.buffer;\n        };\n      }, {}], 13: [function (_dereq_, module, exports) {\n        /*\n         * base64-arraybuffer\n         * https://github.com/niklasvh/base64-arraybuffer\n         *\n         * Copyright (c) 2012 Niklas von Hertzen\n         * Licensed under the MIT license.\n         */\n        (function (chars) {\n          \"use strict\";\n\n          exports.encode = function (arraybuffer) {\n            var bytes = new Uint8Array(arraybuffer),\n                i,\n                len = bytes.length,\n                base64 = \"\";\n\n            for (i = 0; i < len; i += 3) {\n              base64 += chars[bytes[i] >> 2];\n              base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n              base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n              base64 += chars[bytes[i + 2] & 63];\n            }\n\n            if (len % 3 === 2) {\n              base64 = base64.substring(0, base64.length - 1) + \"=\";\n            } else if (len % 3 === 1) {\n              base64 = base64.substring(0, base64.length - 2) + \"==\";\n            }\n\n            return base64;\n          };\n\n          exports.decode = function (base64) {\n            var bufferLength = base64.length * 0.75,\n                len = base64.length,\n                i,\n                p = 0,\n                encoded1,\n                encoded2,\n                encoded3,\n                encoded4;\n\n            if (base64[base64.length - 1] === \"=\") {\n              bufferLength--;\n              if (base64[base64.length - 2] === \"=\") {\n                bufferLength--;\n              }\n            }\n\n            var arraybuffer = new ArrayBuffer(bufferLength),\n                bytes = new Uint8Array(arraybuffer);\n\n            for (i = 0; i < len; i += 4) {\n              encoded1 = chars.indexOf(base64[i]);\n              encoded2 = chars.indexOf(base64[i + 1]);\n              encoded3 = chars.indexOf(base64[i + 2]);\n              encoded4 = chars.indexOf(base64[i + 3]);\n\n              bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n              bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n              bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n            }\n\n            return arraybuffer;\n          };\n        })(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n      }, {}], 14: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Create a blob builder even when vendor prefixes exist\n           */\n\n          var BlobBuilder = global.BlobBuilder || global.WebKitBlobBuilder || global.MSBlobBuilder || global.MozBlobBuilder;\n\n          /**\n           * Check if Blob constructor is supported\n           */\n\n          var blobSupported = (function () {\n            try {\n              var a = new Blob(['hi']);\n              return a.size === 2;\n            } catch (e) {\n              return false;\n            }\n          })();\n\n          /**\n           * Check if Blob constructor supports ArrayBufferViews\n           * Fails in Safari 6, so we need to map to ArrayBuffers there.\n           */\n\n          var blobSupportsArrayBufferView = blobSupported && (function () {\n            try {\n              var b = new Blob([new Uint8Array([1, 2])]);\n              return b.size === 2;\n            } catch (e) {\n              return false;\n            }\n          })();\n\n          /**\n           * Check if BlobBuilder is supported\n           */\n\n          var blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;\n\n          /**\n           * Helper function that maps ArrayBufferViews to ArrayBuffers\n           * Used by BlobBuilder constructor and old browsers that didn't\n           * support it in the Blob constructor.\n           */\n\n          function mapArrayBufferViews(ary) {\n            for (var i = 0; i < ary.length; i++) {\n              var chunk = ary[i];\n              if (chunk.buffer instanceof ArrayBuffer) {\n                var buf = chunk.buffer;\n\n                // if this is a subarray, make a copy so we only\n                // include the subarray region from the underlying buffer\n                if (chunk.byteLength !== buf.byteLength) {\n                  var copy = new Uint8Array(chunk.byteLength);\n                  copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n                  buf = copy.buffer;\n                }\n\n                ary[i] = buf;\n              }\n            }\n          }\n\n          function BlobBuilderConstructor(ary, options) {\n            options = options || {};\n\n            var bb = new BlobBuilder();\n            mapArrayBufferViews(ary);\n\n            for (var i = 0; i < ary.length; i++) {\n              bb.append(ary[i]);\n            }\n\n            return options.type ? bb.getBlob(options.type) : bb.getBlob();\n          };\n\n          function BlobConstructor(ary, options) {\n            mapArrayBufferViews(ary);\n            return new Blob(ary, options || {});\n          };\n\n          module.exports = (function () {\n            if (blobSupported) {\n              return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n            } else if (blobBuilderSupported) {\n              return BlobBuilderConstructor;\n            } else {\n              return undefined;\n            }\n          })();\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 15: [function (_dereq_, module, exports) {\n\n        /**\n         * Expose `Emitter`.\n         */\n\n        module.exports = Emitter;\n\n        /**\n         * Initialize a new `Emitter`.\n         *\n         * @api public\n         */\n\n        function Emitter(obj) {\n          if (obj) return mixin(obj);\n        };\n\n        /**\n         * Mixin the emitter properties.\n         *\n         * @param {Object} obj\n         * @return {Object}\n         * @api private\n         */\n\n        function mixin(obj) {\n          for (var key in Emitter.prototype) {\n            obj[key] = Emitter.prototype[key];\n          }\n          return obj;\n        }\n\n        /**\n         * Listen on the given `event` with `fn`.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n          this._callbacks = this._callbacks || {};\n          (this._callbacks[event] = this._callbacks[event] || []).push(fn);\n          return this;\n        };\n\n        /**\n         * Adds an `event` listener that will be invoked a single\n         * time then automatically removed.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.once = function (event, fn) {\n          var self = this;\n          this._callbacks = this._callbacks || {};\n\n          function on() {\n            self.off(event, on);\n            fn.apply(this, arguments);\n          }\n\n          on.fn = fn;\n          this.on(event, on);\n          return this;\n        };\n\n        /**\n         * Remove the given callback for `event` or all\n         * registered callbacks.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n          this._callbacks = this._callbacks || {};\n\n          // all\n          if (0 == arguments.length) {\n            this._callbacks = {};\n            return this;\n          }\n\n          // specific event\n          var callbacks = this._callbacks[event];\n          if (!callbacks) return this;\n\n          // remove all handlers\n          if (1 == arguments.length) {\n            delete this._callbacks[event];\n            return this;\n          }\n\n          // remove specific handler\n          var cb;\n          for (var i = 0; i < callbacks.length; i++) {\n            cb = callbacks[i];\n            if (cb === fn || cb.fn === fn) {\n              callbacks.splice(i, 1);\n              break;\n            }\n          }\n          return this;\n        };\n\n        /**\n         * Emit `event` with the given args.\n         *\n         * @param {String} event\n         * @param {Mixed} ...\n         * @return {Emitter}\n         */\n\n        Emitter.prototype.emit = function (event) {\n          this._callbacks = this._callbacks || {};\n          var args = [].slice.call(arguments, 1),\n              callbacks = this._callbacks[event];\n\n          if (callbacks) {\n            callbacks = callbacks.slice(0);\n            for (var i = 0, len = callbacks.length; i < len; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n\n          return this;\n        };\n\n        /**\n         * Return array of callbacks for `event`.\n         *\n         * @param {String} event\n         * @return {Array}\n         * @api public\n         */\n\n        Emitter.prototype.listeners = function (event) {\n          this._callbacks = this._callbacks || {};\n          return this._callbacks[event] || [];\n        };\n\n        /**\n         * Check if this emitter has `event` handlers.\n         *\n         * @param {String} event\n         * @return {Boolean}\n         * @api public\n         */\n\n        Emitter.prototype.hasListeners = function (event) {\n          return !!this.listeners(event).length;\n        };\n      }, {}], 16: [function (_dereq_, module, exports) {\n\n        module.exports = function (a, b) {\n          var fn = function fn() {};\n          fn.prototype = b.prototype;\n          a.prototype = new fn();\n          a.prototype.constructor = a;\n        };\n      }, {}], 17: [function (_dereq_, module, exports) {\n\n        /**\n         * This is the web browser implementation of `debug()`.\n         *\n         * Expose `debug()` as the module.\n         */\n\n        exports = module.exports = _dereq_('./debug');\n        exports.log = log;\n        exports.formatArgs = formatArgs;\n        exports.save = save;\n        exports.load = load;\n        exports.useColors = useColors;\n        exports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n\n        /**\n         * Colors.\n         */\n\n        exports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];\n\n        /**\n         * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n         * and the Firebug extension (any Firefox version) are known\n         * to support \"%c\" CSS customizations.\n         *\n         * TODO: add a `localStorage` variable to explicitly enable/disable colors\n         */\n\n        function useColors() {\n          // is webkit? http://stackoverflow.com/a/16459606/376773\n          return 'WebkitAppearance' in document.documentElement.style ||\n          // is firebug? http://stackoverflow.com/a/398120/376773\n          window.console && (console.firebug || console.exception && console.table) ||\n          // is firefox >= v31?\n          // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n          navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31;\n        }\n\n        /**\n         * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n         */\n\n        exports.formatters.j = function (v) {\n          return JSON.stringify(v);\n        };\n\n        /**\n         * Colorize log arguments if enabled.\n         *\n         * @api public\n         */\n\n        function formatArgs() {\n          var args = arguments;\n          var useColors = this.useColors;\n\n          args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n\n          if (!useColors) return args;\n\n          var c = 'color: ' + this.color;\n          args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n          // the final \"%c\" is somewhat tricky, because there could be other\n          // arguments passed either before or after the %c, so we need to\n          // figure out the correct index to insert the CSS into\n          var index = 0;\n          var lastC = 0;\n          args[0].replace(/%[a-z%]/g, function (match) {\n            if ('%%' === match) return;\n            index++;\n            if ('%c' === match) {\n              // we only are interested in the *last* %c\n              // (the user may have provided their own)\n              lastC = index;\n            }\n          });\n\n          args.splice(lastC, 0, c);\n          return args;\n        }\n\n        /**\n         * Invokes `console.log()` when available.\n         * No-op when `console.log` is not a \"function\".\n         *\n         * @api public\n         */\n\n        function log() {\n          // this hackery is required for IE8/9, where\n          // the `console.log` function doesn't have 'apply'\n\n          return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n        }\n\n        /**\n         * Save `namespaces`.\n         *\n         * @param {String} namespaces\n         * @api private\n         */\n\n        function save(namespaces) {\n          try {\n            if (null == namespaces) {\n              exports.storage.removeItem('debug');\n            } else {\n              exports.storage.debug = namespaces;\n            }\n          } catch (e) {}\n        }\n\n        /**\n         * Load `namespaces`.\n         *\n         * @return {String} returns the previously persisted debug modes\n         * @api private\n         */\n\n        function load() {\n          var r;\n          try {\n            r = exports.storage.debug;\n          } catch (e) {}\n          return r;\n        }\n\n        /**\n         * Enable namespaces listed in `localStorage.debug` initially.\n         */\n\n        exports.enable(load());\n\n        /**\n         * Localstorage attempts to return the localstorage.\n         *\n         * This is necessary because safari throws\n         * when a user disables cookies/localstorage\n         * and you attempt to access it.\n         *\n         * @return {LocalStorage}\n         * @api private\n         */\n\n        function localstorage() {\n          try {\n            return window.localStorage;\n          } catch (e) {}\n        }\n      }, { \"./debug\": 18 }], 18: [function (_dereq_, module, exports) {\n\n        /**\n         * This is the common logic for both the Node.js and web browser\n         * implementations of `debug()`.\n         *\n         * Expose `debug()` as the module.\n         */\n\n        exports = module.exports = debug;\n        exports.coerce = coerce;\n        exports.disable = disable;\n        exports.enable = enable;\n        exports.enabled = enabled;\n        exports.humanize = _dereq_('ms');\n\n        /**\n         * The currently active debug mode names, and names to skip.\n         */\n\n        exports.names = [];\n        exports.skips = [];\n\n        /**\n         * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n         *\n         * Valid key names are a single, lowercased letter, i.e. \"n\".\n         */\n\n        exports.formatters = {};\n\n        /**\n         * Previously assigned color.\n         */\n\n        var prevColor = 0;\n\n        /**\n         * Previous log timestamp.\n         */\n\n        var prevTime;\n\n        /**\n         * Select a color.\n         *\n         * @return {Number}\n         * @api private\n         */\n\n        function selectColor() {\n          return exports.colors[prevColor++ % exports.colors.length];\n        }\n\n        /**\n         * Create a debugger with the given `namespace`.\n         *\n         * @param {String} namespace\n         * @return {Function}\n         * @api public\n         */\n\n        function debug(namespace) {\n\n          // define the `disabled` version\n          function disabled() {}\n          disabled.enabled = false;\n\n          // define the `enabled` version\n          function enabled() {\n\n            var self = enabled;\n\n            // set `diff` timestamp\n            var curr = +new Date();\n            var ms = curr - (prevTime || curr);\n            self.diff = ms;\n            self.prev = prevTime;\n            self.curr = curr;\n            prevTime = curr;\n\n            // add the `color` if not set\n            if (null == self.useColors) self.useColors = exports.useColors();\n            if (null == self.color && self.useColors) self.color = selectColor();\n\n            var args = Array.prototype.slice.call(arguments);\n\n            args[0] = exports.coerce(args[0]);\n\n            if ('string' !== typeof args[0]) {\n              // anything else let's inspect with %o\n              args = ['%o'].concat(args);\n            }\n\n            // apply any `formatters` transformations\n            var index = 0;\n            args[0] = args[0].replace(/%([a-z%])/g, function (match, format) {\n              // if we encounter an escaped % then don't increase the array index\n              if (match === '%%') return match;\n              index++;\n              var formatter = exports.formatters[format];\n              if ('function' === typeof formatter) {\n                var val = args[index];\n                match = formatter.call(self, val);\n\n                // now we need to remove `args[index]` since it's inlined in the `format`\n                args.splice(index, 1);\n                index--;\n              }\n              return match;\n            });\n\n            if ('function' === typeof exports.formatArgs) {\n              args = exports.formatArgs.apply(self, args);\n            }\n            var logFn = enabled.log || exports.log || console.log.bind(console);\n            logFn.apply(self, args);\n          }\n          enabled.enabled = true;\n\n          var fn = exports.enabled(namespace) ? enabled : disabled;\n\n          fn.namespace = namespace;\n\n          return fn;\n        }\n\n        /**\n         * Enables a debug mode by namespaces. This can include modes\n         * separated by a colon and wildcards.\n         *\n         * @param {String} namespaces\n         * @api public\n         */\n\n        function enable(namespaces) {\n          exports.save(namespaces);\n\n          var split = (namespaces || '').split(/[\\s,]+/);\n          var len = split.length;\n\n          for (var i = 0; i < len; i++) {\n            if (!split[i]) continue; // ignore empty strings\n            namespaces = split[i].replace(/\\*/g, '.*?');\n            if (namespaces[0] === '-') {\n              exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n            } else {\n              exports.names.push(new RegExp('^' + namespaces + '$'));\n            }\n          }\n        }\n\n        /**\n         * Disable debug output.\n         *\n         * @api public\n         */\n\n        function disable() {\n          exports.enable('');\n        }\n\n        /**\n         * Returns true if the given mode name is enabled, false otherwise.\n         *\n         * @param {String} name\n         * @return {Boolean}\n         * @api public\n         */\n\n        function enabled(name) {\n          var i, len;\n          for (i = 0, len = exports.skips.length; i < len; i++) {\n            if (exports.skips[i].test(name)) {\n              return false;\n            }\n          }\n          for (i = 0, len = exports.names.length; i < len; i++) {\n            if (exports.names[i].test(name)) {\n              return true;\n            }\n          }\n          return false;\n        }\n\n        /**\n         * Coerce `val`.\n         *\n         * @param {Mixed} val\n         * @return {Mixed}\n         * @api private\n         */\n\n        function coerce(val) {\n          if (val instanceof Error) return val.stack || val.message;\n          return val;\n        }\n      }, { \"ms\": 25 }], 19: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module dependencies.\n           */\n\n          var keys = _dereq_('./keys');\n          var hasBinary = _dereq_('has-binary');\n          var sliceBuffer = _dereq_('arraybuffer.slice');\n          var base64encoder = _dereq_('base64-arraybuffer');\n          var after = _dereq_('after');\n          var utf8 = _dereq_('utf8');\n\n          /**\n           * Check if we are running an android browser. That requires us to use\n           * ArrayBuffer with polling transports...\n           *\n           * http://ghinda.net/jpeg-blob-ajax-android/\n           */\n\n          var isAndroid = navigator.userAgent.match(/Android/i);\n\n          /**\n           * Check if we are running in PhantomJS.\n           * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n           * https://github.com/ariya/phantomjs/issues/11395\n           * @type boolean\n           */\n          var isPhantomJS = /PhantomJS/i.test(navigator.userAgent);\n\n          /**\n           * When true, avoids using Blobs to encode payloads.\n           * @type boolean\n           */\n          var dontSendBlobs = isAndroid || isPhantomJS;\n\n          /**\n           * Current protocol version.\n           */\n\n          exports.protocol = 3;\n\n          /**\n           * Packet types.\n           */\n\n          var packets = exports.packets = {\n            open: 0, // non-ws\n            close: 1, // non-ws\n            ping: 2,\n            pong: 3,\n            message: 4,\n            upgrade: 5,\n            noop: 6\n          };\n\n          var packetslist = keys(packets);\n\n          /**\n           * Premade error packet.\n           */\n\n          var err = { type: 'error', data: 'parser error' };\n\n          /**\n           * Create a blob api even for blob builder when vendor prefixes exist\n           */\n\n          var Blob = _dereq_('blob');\n\n          /**\n           * Encodes a packet.\n           *\n           *     <packet type id> [ <data> ]\n           *\n           * Example:\n           *\n           *     5hello world\n           *     3\n           *     4\n           *\n           * Binary is encoded in an identical principle\n           *\n           * @api private\n           */\n\n          exports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n            if ('function' == typeof supportsBinary) {\n              callback = supportsBinary;\n              supportsBinary = false;\n            }\n\n            if ('function' == typeof utf8encode) {\n              callback = utf8encode;\n              utf8encode = null;\n            }\n\n            var data = packet.data === undefined ? undefined : packet.data.buffer || packet.data;\n\n            if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n              return encodeArrayBuffer(packet, supportsBinary, callback);\n            } else if (Blob && data instanceof global.Blob) {\n              return encodeBlob(packet, supportsBinary, callback);\n            }\n\n            // might be an object with { base64: true, data: dataAsBase64String }\n            if (data && data.base64) {\n              return encodeBase64Object(packet, callback);\n            }\n\n            // Sending data as a utf-8 string\n            var encoded = packets[packet.type];\n\n            // data fragment is optional\n            if (undefined !== packet.data) {\n              encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n            }\n\n            return callback('' + encoded);\n          };\n\n          function encodeBase64Object(packet, callback) {\n            // packet data is an object { base64: true, data: dataAsBase64String }\n            var message = 'b' + exports.packets[packet.type] + packet.data.data;\n            return callback(message);\n          }\n\n          /**\n           * Encode packet helpers for binary types\n           */\n\n          function encodeArrayBuffer(packet, supportsBinary, callback) {\n            if (!supportsBinary) {\n              return exports.encodeBase64Packet(packet, callback);\n            }\n\n            var data = packet.data;\n            var contentArray = new Uint8Array(data);\n            var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n            resultBuffer[0] = packets[packet.type];\n            for (var i = 0; i < contentArray.length; i++) {\n              resultBuffer[i + 1] = contentArray[i];\n            }\n\n            return callback(resultBuffer.buffer);\n          }\n\n          function encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n            if (!supportsBinary) {\n              return exports.encodeBase64Packet(packet, callback);\n            }\n\n            var fr = new FileReader();\n            fr.onload = function () {\n              packet.data = fr.result;\n              exports.encodePacket(packet, supportsBinary, true, callback);\n            };\n            return fr.readAsArrayBuffer(packet.data);\n          }\n\n          function encodeBlob(packet, supportsBinary, callback) {\n            if (!supportsBinary) {\n              return exports.encodeBase64Packet(packet, callback);\n            }\n\n            if (dontSendBlobs) {\n              return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n            }\n\n            var length = new Uint8Array(1);\n            length[0] = packets[packet.type];\n            var blob = new Blob([length.buffer, packet.data]);\n\n            return callback(blob);\n          }\n\n          /**\n           * Encodes a packet with binary data in a base64 string\n           *\n           * @param {Object} packet, has `type` and `data`\n           * @return {String} base64 encoded message\n           */\n\n          exports.encodeBase64Packet = function (packet, callback) {\n            var message = 'b' + exports.packets[packet.type];\n            if (Blob && packet.data instanceof global.Blob) {\n              var fr = new FileReader();\n              fr.onload = function () {\n                var b64 = fr.result.split(',')[1];\n                callback(message + b64);\n              };\n              return fr.readAsDataURL(packet.data);\n            }\n\n            var b64data;\n            try {\n              b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n            } catch (e) {\n              // iPhone Safari doesn't let you apply with typed arrays\n              var typed = new Uint8Array(packet.data);\n              var basic = new Array(typed.length);\n              for (var i = 0; i < typed.length; i++) {\n                basic[i] = typed[i];\n              }\n              b64data = String.fromCharCode.apply(null, basic);\n            }\n            message += global.btoa(b64data);\n            return callback(message);\n          };\n\n          /**\n           * Decodes a packet. Changes format to Blob if requested.\n           *\n           * @return {Object} with `type` and `data` (if any)\n           * @api private\n           */\n\n          exports.decodePacket = function (data, binaryType, utf8decode) {\n            // String data\n            if (typeof data == 'string' || data === undefined) {\n              if (data.charAt(0) == 'b') {\n                return exports.decodeBase64Packet(data.substr(1), binaryType);\n              }\n\n              if (utf8decode) {\n                try {\n                  data = utf8.decode(data);\n                } catch (e) {\n                  return err;\n                }\n              }\n              var type = data.charAt(0);\n\n              if (Number(type) != type || !packetslist[type]) {\n                return err;\n              }\n\n              if (data.length > 1) {\n                return { type: packetslist[type], data: data.substring(1) };\n              } else {\n                return { type: packetslist[type] };\n              }\n            }\n\n            var asArray = new Uint8Array(data);\n            var type = asArray[0];\n            var rest = sliceBuffer(data, 1);\n            if (Blob && binaryType === 'blob') {\n              rest = new Blob([rest]);\n            }\n            return { type: packetslist[type], data: rest };\n          };\n\n          /**\n           * Decodes a packet encoded in a base64 string\n           *\n           * @param {String} base64 encoded message\n           * @return {Object} with `type` and `data` (if any)\n           */\n\n          exports.decodeBase64Packet = function (msg, binaryType) {\n            var type = packetslist[msg.charAt(0)];\n            if (!global.ArrayBuffer) {\n              return { type: type, data: { base64: true, data: msg.substr(1) } };\n            }\n\n            var data = base64encoder.decode(msg.substr(1));\n\n            if (binaryType === 'blob' && Blob) {\n              data = new Blob([data]);\n            }\n\n            return { type: type, data: data };\n          };\n\n          /**\n           * Encodes multiple messages (payload).\n           *\n           *     <length>:data\n           *\n           * Example:\n           *\n           *     11:hello world2:hi\n           *\n           * If any contents are binary, they will be encoded as base64 strings. Base64\n           * encoded strings are marked with a b before the length specifier\n           *\n           * @param {Array} packets\n           * @api private\n           */\n\n          exports.encodePayload = function (packets, supportsBinary, callback) {\n            if (typeof supportsBinary == 'function') {\n              callback = supportsBinary;\n              supportsBinary = null;\n            }\n\n            var isBinary = hasBinary(packets);\n\n            if (supportsBinary && isBinary) {\n              if (Blob && !dontSendBlobs) {\n                return exports.encodePayloadAsBlob(packets, callback);\n              }\n\n              return exports.encodePayloadAsArrayBuffer(packets, callback);\n            }\n\n            if (!packets.length) {\n              return callback('0:');\n            }\n\n            function setLengthHeader(message) {\n              return message.length + ':' + message;\n            }\n\n            function encodeOne(packet, doneCallback) {\n              exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function (message) {\n                doneCallback(null, setLengthHeader(message));\n              });\n            }\n\n            map(packets, encodeOne, function (err, results) {\n              return callback(results.join(''));\n            });\n          };\n\n          /**\n           * Async array map using after\n           */\n\n          function map(ary, each, done) {\n            var result = new Array(ary.length);\n            var next = after(ary.length, done);\n\n            var eachWithIndex = function eachWithIndex(i, el, cb) {\n              each(el, function (error, msg) {\n                result[i] = msg;\n                cb(error, result);\n              });\n            };\n\n            for (var i = 0; i < ary.length; i++) {\n              eachWithIndex(i, ary[i], next);\n            }\n          }\n\n          /*\n           * Decodes data when a payload is maybe expected. Possible binary contents are\n           * decoded from their base64 representation\n           *\n           * @param {String} data, callback method\n           * @api public\n           */\n\n          exports.decodePayload = function (data, binaryType, callback) {\n            if (typeof data != 'string') {\n              return exports.decodePayloadAsBinary(data, binaryType, callback);\n            }\n\n            if (typeof binaryType === 'function') {\n              callback = binaryType;\n              binaryType = null;\n            }\n\n            var packet;\n            if (data == '') {\n              // parser error - ignoring payload\n              return callback(err, 0, 1);\n            }\n\n            var length = '',\n                n,\n                msg;\n\n            for (var i = 0, l = data.length; i < l; i++) {\n              var chr = data.charAt(i);\n\n              if (':' != chr) {\n                length += chr;\n              } else {\n                if ('' == length || length != (n = Number(length))) {\n                  // parser error - ignoring payload\n                  return callback(err, 0, 1);\n                }\n\n                msg = data.substr(i + 1, n);\n\n                if (length != msg.length) {\n                  // parser error - ignoring payload\n                  return callback(err, 0, 1);\n                }\n\n                if (msg.length) {\n                  packet = exports.decodePacket(msg, binaryType, true);\n\n                  if (err.type == packet.type && err.data == packet.data) {\n                    // parser error in individual packet - ignoring payload\n                    return callback(err, 0, 1);\n                  }\n\n                  var ret = callback(packet, i + n, l);\n                  if (false === ret) return;\n                }\n\n                // advance cursor\n                i += n;\n                length = '';\n              }\n            }\n\n            if (length != '') {\n              // parser error - ignoring payload\n              return callback(err, 0, 1);\n            }\n          };\n\n          /**\n           * Encodes multiple messages (payload) as binary.\n           *\n           * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n           * 255><data>\n           *\n           * Example:\n           * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n           *\n           * @param {Array} packets\n           * @return {ArrayBuffer} encoded payload\n           * @api private\n           */\n\n          exports.encodePayloadAsArrayBuffer = function (packets, callback) {\n            if (!packets.length) {\n              return callback(new ArrayBuffer(0));\n            }\n\n            function encodeOne(packet, doneCallback) {\n              exports.encodePacket(packet, true, true, function (data) {\n                return doneCallback(null, data);\n              });\n            }\n\n            map(packets, encodeOne, function (err, encodedPackets) {\n              var totalLength = encodedPackets.reduce(function (acc, p) {\n                var len;\n                if (typeof p === 'string') {\n                  len = p.length;\n                } else {\n                  len = p.byteLength;\n                }\n                return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n              }, 0);\n\n              var resultArray = new Uint8Array(totalLength);\n\n              var bufferIndex = 0;\n              encodedPackets.forEach(function (p) {\n                var isString = typeof p === 'string';\n                var ab = p;\n                if (isString) {\n                  var view = new Uint8Array(p.length);\n                  for (var i = 0; i < p.length; i++) {\n                    view[i] = p.charCodeAt(i);\n                  }\n                  ab = view.buffer;\n                }\n\n                if (isString) {\n                  // not true binary\n                  resultArray[bufferIndex++] = 0;\n                } else {\n                  // true binary\n                  resultArray[bufferIndex++] = 1;\n                }\n\n                var lenStr = ab.byteLength.toString();\n                for (var i = 0; i < lenStr.length; i++) {\n                  resultArray[bufferIndex++] = parseInt(lenStr[i]);\n                }\n                resultArray[bufferIndex++] = 255;\n\n                var view = new Uint8Array(ab);\n                for (var i = 0; i < view.length; i++) {\n                  resultArray[bufferIndex++] = view[i];\n                }\n              });\n\n              return callback(resultArray.buffer);\n            });\n          };\n\n          /**\n           * Encode as Blob\n           */\n\n          exports.encodePayloadAsBlob = function (packets, callback) {\n            function encodeOne(packet, doneCallback) {\n              exports.encodePacket(packet, true, true, function (encoded) {\n                var binaryIdentifier = new Uint8Array(1);\n                binaryIdentifier[0] = 1;\n                if (typeof encoded === 'string') {\n                  var view = new Uint8Array(encoded.length);\n                  for (var i = 0; i < encoded.length; i++) {\n                    view[i] = encoded.charCodeAt(i);\n                  }\n                  encoded = view.buffer;\n                  binaryIdentifier[0] = 0;\n                }\n\n                var len = encoded instanceof ArrayBuffer ? encoded.byteLength : encoded.size;\n\n                var lenStr = len.toString();\n                var lengthAry = new Uint8Array(lenStr.length + 1);\n                for (var i = 0; i < lenStr.length; i++) {\n                  lengthAry[i] = parseInt(lenStr[i]);\n                }\n                lengthAry[lenStr.length] = 255;\n\n                if (Blob) {\n                  var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n                  doneCallback(null, blob);\n                }\n              });\n            }\n\n            map(packets, encodeOne, function (err, results) {\n              return callback(new Blob(results));\n            });\n          };\n\n          /*\n           * Decodes data when a payload is maybe expected. Strings are decoded by\n           * interpreting each byte as a key code for entries marked to start with 0. See\n           * description of encodePayloadAsBinary\n           *\n           * @param {ArrayBuffer} data, callback method\n           * @api public\n           */\n\n          exports.decodePayloadAsBinary = function (data, binaryType, callback) {\n            if (typeof binaryType === 'function') {\n              callback = binaryType;\n              binaryType = null;\n            }\n\n            var bufferTail = data;\n            var buffers = [];\n\n            var numberTooLong = false;\n            while (bufferTail.byteLength > 0) {\n              var tailArray = new Uint8Array(bufferTail);\n              var isString = tailArray[0] === 0;\n              var msgLength = '';\n\n              for (var i = 1;; i++) {\n                if (tailArray[i] == 255) break;\n\n                if (msgLength.length > 310) {\n                  numberTooLong = true;\n                  break;\n                }\n\n                msgLength += tailArray[i];\n              }\n\n              if (numberTooLong) return callback(err, 0, 1);\n\n              bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n              msgLength = parseInt(msgLength);\n\n              var msg = sliceBuffer(bufferTail, 0, msgLength);\n              if (isString) {\n                try {\n                  msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n                } catch (e) {\n                  // iPhone Safari doesn't let you apply to typed arrays\n                  var typed = new Uint8Array(msg);\n                  msg = '';\n                  for (var i = 0; i < typed.length; i++) {\n                    msg += String.fromCharCode(typed[i]);\n                  }\n                }\n              }\n\n              buffers.push(msg);\n              bufferTail = sliceBuffer(bufferTail, msgLength);\n            }\n\n            var total = buffers.length;\n            buffers.forEach(function (buffer, i) {\n              callback(exports.decodePacket(buffer, binaryType, true), i, total);\n            });\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./keys\": 20, \"after\": 11, \"arraybuffer.slice\": 12, \"base64-arraybuffer\": 13, \"blob\": 14, \"has-binary\": 21, \"utf8\": 29 }], 20: [function (_dereq_, module, exports) {\n\n        /**\n         * Gets the keys for an object.\n         *\n         * @return {Array} keys\n         * @api private\n         */\n\n        module.exports = Object.keys || function keys(obj) {\n          var arr = [];\n          var has = Object.prototype.hasOwnProperty;\n\n          for (var i in obj) {\n            if (has.call(obj, i)) {\n              arr.push(i);\n            }\n          }\n          return arr;\n        };\n      }, {}], 21: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          /*\n           * Module requirements.\n           */\n\n          var isArray = _dereq_('isarray');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = hasBinary;\n\n          /**\n           * Checks for binary data.\n           *\n           * Right now only Buffer and ArrayBuffer are supported..\n           *\n           * @param {Object} anything\n           * @api public\n           */\n\n          function hasBinary(data) {\n\n            function _hasBinary(obj) {\n              if (!obj) return false;\n\n              if (global.Buffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer || global.Blob && obj instanceof Blob || global.File && obj instanceof File) {\n                return true;\n              }\n\n              if (isArray(obj)) {\n                for (var i = 0; i < obj.length; i++) {\n                  if (_hasBinary(obj[i])) {\n                    return true;\n                  }\n                }\n              } else if (obj && 'object' == typeof obj) {\n                if (obj.toJSON) {\n                  obj = obj.toJSON();\n                }\n\n                for (var key in obj) {\n                  if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n                    return true;\n                  }\n                }\n              }\n\n              return false;\n            }\n\n            return _hasBinary(data);\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"isarray\": 24 }], 22: [function (_dereq_, module, exports) {\n\n        /**\n         * Module exports.\n         *\n         * Logic borrowed from Modernizr:\n         *\n         *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n         */\n\n        try {\n          module.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();\n        } catch (err) {\n          // if XMLHttp support is disabled in IE then it will throw\n          // when trying to create\n          module.exports = false;\n        }\n      }, {}], 23: [function (_dereq_, module, exports) {\n\n        var indexOf = [].indexOf;\n\n        module.exports = function (arr, obj) {\n          if (indexOf) return arr.indexOf(obj);\n          for (var i = 0; i < arr.length; ++i) {\n            if (arr[i] === obj) return i;\n          }\n          return -1;\n        };\n      }, {}], 24: [function (_dereq_, module, exports) {\n        module.exports = Array.isArray || function (arr) {\n          return Object.prototype.toString.call(arr) == '[object Array]';\n        };\n      }, {}], 25: [function (_dereq_, module, exports) {\n        /**\n         * Helpers.\n         */\n\n        var s = 1000;\n        var m = s * 60;\n        var h = m * 60;\n        var d = h * 24;\n        var y = d * 365.25;\n\n        /**\n         * Parse or format the given `val`.\n         *\n         * Options:\n         *\n         *  - `long` verbose formatting [false]\n         *\n         * @param {String|Number} val\n         * @param {Object} options\n         * @return {String|Number}\n         * @api public\n         */\n\n        module.exports = function (val, options) {\n          options = options || {};\n          if ('string' == typeof val) return parse(val);\n          return options.long ? long(val) : short(val);\n        };\n\n        /**\n         * Parse the given `str` and return milliseconds.\n         *\n         * @param {String} str\n         * @return {Number}\n         * @api private\n         */\n\n        function parse(str) {\n          str = '' + str;\n          if (str.length > 10000) return;\n          var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n          if (!match) return;\n          var n = parseFloat(match[1]);\n          var type = (match[2] || 'ms').toLowerCase();\n          switch (type) {\n            case 'years':\n            case 'year':\n            case 'yrs':\n            case 'yr':\n            case 'y':\n              return n * y;\n            case 'days':\n            case 'day':\n            case 'd':\n              return n * d;\n            case 'hours':\n            case 'hour':\n            case 'hrs':\n            case 'hr':\n            case 'h':\n              return n * h;\n            case 'minutes':\n            case 'minute':\n            case 'mins':\n            case 'min':\n            case 'm':\n              return n * m;\n            case 'seconds':\n            case 'second':\n            case 'secs':\n            case 'sec':\n            case 's':\n              return n * s;\n            case 'milliseconds':\n            case 'millisecond':\n            case 'msecs':\n            case 'msec':\n            case 'ms':\n              return n;\n          }\n        }\n\n        /**\n         * Short format for `ms`.\n         *\n         * @param {Number} ms\n         * @return {String}\n         * @api private\n         */\n\n        function short(ms) {\n          if (ms >= d) return Math.round(ms / d) + 'd';\n          if (ms >= h) return Math.round(ms / h) + 'h';\n          if (ms >= m) return Math.round(ms / m) + 'm';\n          if (ms >= s) return Math.round(ms / s) + 's';\n          return ms + 'ms';\n        }\n\n        /**\n         * Long format for `ms`.\n         *\n         * @param {Number} ms\n         * @return {String}\n         * @api private\n         */\n\n        function long(ms) {\n          return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n        }\n\n        /**\n         * Pluralization helper.\n         */\n\n        function plural(ms, n, name) {\n          if (ms < n) return;\n          if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n          return Math.ceil(ms / n) + ' ' + name + 's';\n        }\n      }, {}], 26: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * JSON parse.\n           *\n           * @see Based on jQuery#parseJSON (MIT) and JSON2\n           * @api private\n           */\n\n          var rvalidchars = /^[\\],:{}\\s]*$/;\n          var rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n          var rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n          var rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\n          var rtrimLeft = /^\\s+/;\n          var rtrimRight = /\\s+$/;\n\n          module.exports = function parsejson(data) {\n            if ('string' != typeof data || !data) {\n              return null;\n            }\n\n            data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\n            // Attempt to parse using the native JSON parser first\n            if (global.JSON && JSON.parse) {\n              return JSON.parse(data);\n            }\n\n            if (rvalidchars.test(data.replace(rvalidescape, '@').replace(rvalidtokens, ']').replace(rvalidbraces, ''))) {\n              return new Function('return ' + data)();\n            }\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 27: [function (_dereq_, module, exports) {\n        /**\n         * Compiles a querystring\n         * Returns string representation of the object\n         *\n         * @param {Object}\n         * @api private\n         */\n\n        exports.encode = function (obj) {\n          var str = '';\n\n          for (var i in obj) {\n            if (obj.hasOwnProperty(i)) {\n              if (str.length) str += '&';\n              str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n            }\n          }\n\n          return str;\n        };\n\n        /**\n         * Parses a simple querystring into an object\n         *\n         * @param {String} qs\n         * @api private\n         */\n\n        exports.decode = function (qs) {\n          var qry = {};\n          var pairs = qs.split('&');\n          for (var i = 0, l = pairs.length; i < l; i++) {\n            var pair = pairs[i].split('=');\n            qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n          }\n          return qry;\n        };\n      }, {}], 28: [function (_dereq_, module, exports) {\n        /**\n         * Parses an URI\n         *\n         * @author Steven Levithan <stevenlevithan.com> (MIT license)\n         * @api private\n         */\n\n        var re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\n        var parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];\n\n        module.exports = function parseuri(str) {\n          var src = str,\n              b = str.indexOf('['),\n              e = str.indexOf(']');\n\n          if (b != -1 && e != -1) {\n            str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n          }\n\n          var m = re.exec(str || ''),\n              uri = {},\n              i = 14;\n\n          while (i--) {\n            uri[parts[i]] = m[i] || '';\n          }\n\n          if (b != -1 && e != -1) {\n            uri.source = src;\n            uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n            uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n            uri.ipv6uri = true;\n          }\n\n          return uri;\n        };\n      }, {}], 29: [function (_dereq_, module, exports) {\n        (function (global) {\n          /*! https://mths.be/utf8js v2.0.0 by @mathias */\n          ;(function (root) {\n\n            // Detect free variables `exports`\n            var freeExports = typeof exports == 'object' && exports;\n\n            // Detect free variable `module`\n            var freeModule = typeof module == 'object' && module && module.exports == freeExports && module;\n\n            // Detect free variable `global`, from Node.js or Browserified code,\n            // and use it as `root`\n            var freeGlobal = typeof global == 'object' && global;\n            if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n              root = freeGlobal;\n            }\n\n            /*--------------------------------------------------------------------------*/\n\n            var stringFromCharCode = String.fromCharCode;\n\n            // Taken from https://mths.be/punycode\n            function ucs2decode(string) {\n              var output = [];\n              var counter = 0;\n              var length = string.length;\n              var value;\n              var extra;\n              while (counter < length) {\n                value = string.charCodeAt(counter++);\n                if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n                  // high surrogate, and there is a next character\n                  extra = string.charCodeAt(counter++);\n                  if ((extra & 0xFC00) == 0xDC00) {\n                    // low surrogate\n                    output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n                  } else {\n                    // unmatched surrogate; only append this code unit, in case the next\n                    // code unit is the high surrogate of a surrogate pair\n                    output.push(value);\n                    counter--;\n                  }\n                } else {\n                  output.push(value);\n                }\n              }\n              return output;\n            }\n\n            // Taken from https://mths.be/punycode\n            function ucs2encode(array) {\n              var length = array.length;\n              var index = -1;\n              var value;\n              var output = '';\n              while (++index < length) {\n                value = array[index];\n                if (value > 0xFFFF) {\n                  value -= 0x10000;\n                  output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n                  value = 0xDC00 | value & 0x3FF;\n                }\n                output += stringFromCharCode(value);\n              }\n              return output;\n            }\n\n            function checkScalarValue(codePoint) {\n              if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n                throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() + ' is not a scalar value');\n              }\n            }\n            /*--------------------------------------------------------------------------*/\n\n            function createByte(codePoint, shift) {\n              return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);\n            }\n\n            function encodeCodePoint(codePoint) {\n              if ((codePoint & 0xFFFFFF80) == 0) {\n                // 1-byte sequence\n                return stringFromCharCode(codePoint);\n              }\n              var symbol = '';\n              if ((codePoint & 0xFFFFF800) == 0) {\n                // 2-byte sequence\n                symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);\n              } else if ((codePoint & 0xFFFF0000) == 0) {\n                // 3-byte sequence\n                checkScalarValue(codePoint);\n                symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);\n                symbol += createByte(codePoint, 6);\n              } else if ((codePoint & 0xFFE00000) == 0) {\n                // 4-byte sequence\n                symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);\n                symbol += createByte(codePoint, 12);\n                symbol += createByte(codePoint, 6);\n              }\n              symbol += stringFromCharCode(codePoint & 0x3F | 0x80);\n              return symbol;\n            }\n\n            function utf8encode(string) {\n              var codePoints = ucs2decode(string);\n              var length = codePoints.length;\n              var index = -1;\n              var codePoint;\n              var byteString = '';\n              while (++index < length) {\n                codePoint = codePoints[index];\n                byteString += encodeCodePoint(codePoint);\n              }\n              return byteString;\n            }\n\n            /*--------------------------------------------------------------------------*/\n\n            function readContinuationByte() {\n              if (byteIndex >= byteCount) {\n                throw Error('Invalid byte index');\n              }\n\n              var continuationByte = byteArray[byteIndex] & 0xFF;\n              byteIndex++;\n\n              if ((continuationByte & 0xC0) == 0x80) {\n                return continuationByte & 0x3F;\n              }\n\n              // If we end up here, it’s not a continuation byte\n              throw Error('Invalid continuation byte');\n            }\n\n            function decodeSymbol() {\n              var byte1;\n              var byte2;\n              var byte3;\n              var byte4;\n              var codePoint;\n\n              if (byteIndex > byteCount) {\n                throw Error('Invalid byte index');\n              }\n\n              if (byteIndex == byteCount) {\n                return false;\n              }\n\n              // Read first byte\n              byte1 = byteArray[byteIndex] & 0xFF;\n              byteIndex++;\n\n              // 1-byte sequence (no continuation bytes)\n              if ((byte1 & 0x80) == 0) {\n                return byte1;\n              }\n\n              // 2-byte sequence\n              if ((byte1 & 0xE0) == 0xC0) {\n                var byte2 = readContinuationByte();\n                codePoint = (byte1 & 0x1F) << 6 | byte2;\n                if (codePoint >= 0x80) {\n                  return codePoint;\n                } else {\n                  throw Error('Invalid continuation byte');\n                }\n              }\n\n              // 3-byte sequence (may include unpaired surrogates)\n              if ((byte1 & 0xF0) == 0xE0) {\n                byte2 = readContinuationByte();\n                byte3 = readContinuationByte();\n                codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;\n                if (codePoint >= 0x0800) {\n                  checkScalarValue(codePoint);\n                  return codePoint;\n                } else {\n                  throw Error('Invalid continuation byte');\n                }\n              }\n\n              // 4-byte sequence\n              if ((byte1 & 0xF8) == 0xF0) {\n                byte2 = readContinuationByte();\n                byte3 = readContinuationByte();\n                byte4 = readContinuationByte();\n                codePoint = (byte1 & 0x0F) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;\n                if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n                  return codePoint;\n                }\n              }\n\n              throw Error('Invalid UTF-8 detected');\n            }\n\n            var byteArray;\n            var byteCount;\n            var byteIndex;\n            function utf8decode(byteString) {\n              byteArray = ucs2decode(byteString);\n              byteCount = byteArray.length;\n              byteIndex = 0;\n              var codePoints = [];\n              var tmp;\n              while ((tmp = decodeSymbol()) !== false) {\n                codePoints.push(tmp);\n              }\n              return ucs2encode(codePoints);\n            }\n\n            /*--------------------------------------------------------------------------*/\n\n            var utf8 = {\n              'version': '2.0.0',\n              'encode': utf8encode,\n              'decode': utf8decode\n            };\n\n            // Some AMD build optimizers, like r.js, check for specific condition patterns\n            // like the following:\n            if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n              define(function () {\n                return utf8;\n              });\n            } else if (freeExports && !freeExports.nodeType) {\n              if (freeModule) {\n                // in Node.js or RingoJS v0.8.0+\n                freeModule.exports = utf8;\n              } else {\n                // in Narwhal or RingoJS v0.7.0-\n                var object = {};\n                var hasOwnProperty = object.hasOwnProperty;\n                for (var key in utf8) {\n                  hasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n                }\n              }\n            } else {\n              // in Rhino or a web browser\n              root.utf8 = utf8;\n            }\n          })(this);\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 30: [function (_dereq_, module, exports) {\n        'use strict';\n\n        var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),\n            length = 64,\n            map = {},\n            seed = 0,\n            i = 0,\n            prev;\n\n        /**\n         * Return a string representing the specified number.\n         *\n         * @param {Number} num The number to convert.\n         * @returns {String} The string representation of the number.\n         * @api public\n         */\n        function encode(num) {\n          var encoded = '';\n\n          do {\n            encoded = alphabet[num % length] + encoded;\n            num = Math.floor(num / length);\n          } while (num > 0);\n\n          return encoded;\n        }\n\n        /**\n         * Return the integer value specified by the given string.\n         *\n         * @param {String} str The string to convert.\n         * @returns {Number} The integer value represented by the string.\n         * @api public\n         */\n        function decode(str) {\n          var decoded = 0;\n\n          for (i = 0; i < str.length; i++) {\n            decoded = decoded * length + map[str.charAt(i)];\n          }\n\n          return decoded;\n        }\n\n        /**\n         * Yeast: A tiny growing id generator.\n         *\n         * @returns {String} A unique id.\n         * @api public\n         */\n        function yeast() {\n          var now = encode(+new Date());\n\n          if (now !== prev) return seed = 0, prev = now;\n          return now + '.' + encode(seed++);\n        }\n\n        //\n        // Map each character to its index.\n        //\n        for (; i < length; i++) map[alphabet[i]] = i;\n\n        //\n        // Expose the `yeast`, `encode` and `decode` functions.\n        //\n        yeast.encode = encode;\n        yeast.decode = decode;\n        module.exports = yeast;\n      }, {}], 31: [function (_dereq_, module, exports) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var url = _dereq_('./url');\n        var parser = _dereq_('socket.io-parser');\n        var Manager = _dereq_('./manager');\n        var debug = _dereq_('debug')('socket.io-client');\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = exports = lookup;\n\n        /**\n         * Managers cache.\n         */\n\n        var cache = exports.managers = {};\n\n        /**\n         * Looks up an existing `Manager` for multiplexing.\n         * If the user summons:\n         *\n         *   `io('http://localhost/a');`\n         *   `io('http://localhost/b');`\n         *\n         * We reuse the existing instance based on same scheme/port/host,\n         * and we initialize sockets for each namespace.\n         *\n         * @api public\n         */\n\n        function lookup(uri, opts) {\n          if (typeof uri == 'object') {\n            opts = uri;\n            uri = undefined;\n          }\n\n          opts = opts || {};\n\n          var parsed = url(uri);\n          var source = parsed.source;\n          var id = parsed.id;\n          var path = parsed.path;\n          var sameNamespace = cache[id] && path in cache[id].nsps;\n          var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;\n\n          var io;\n\n          if (newConnection) {\n            debug('ignoring socket cache for %s', source);\n            io = Manager(source, opts);\n          } else {\n            if (!cache[id]) {\n              debug('new io instance for %s', source);\n              cache[id] = Manager(source, opts);\n            }\n            io = cache[id];\n          }\n\n          return io.socket(parsed.path);\n        }\n\n        /**\n         * Protocol version.\n         *\n         * @api public\n         */\n\n        exports.protocol = parser.protocol;\n\n        /**\n         * `connect`.\n         *\n         * @param {String} uri\n         * @api public\n         */\n\n        exports.connect = lookup;\n\n        /**\n         * Expose constructors for standalone build.\n         *\n         * @api public\n         */\n\n        exports.Manager = _dereq_('./manager');\n        exports.Socket = _dereq_('./socket');\n      }, { \"./manager\": 32, \"./socket\": 34, \"./url\": 35, \"debug\": 39, \"socket.io-parser\": 47 }], 32: [function (_dereq_, module, exports) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var eio = _dereq_('engine.io-client');\n        var Socket = _dereq_('./socket');\n        var Emitter = _dereq_('component-emitter');\n        var parser = _dereq_('socket.io-parser');\n        var on = _dereq_('./on');\n        var bind = _dereq_('component-bind');\n        var debug = _dereq_('debug')('socket.io-client:manager');\n        var indexOf = _dereq_('indexof');\n        var Backoff = _dereq_('backo2');\n\n        /**\n         * IE6+ hasOwnProperty\n         */\n\n        var has = Object.prototype.hasOwnProperty;\n\n        /**\n         * Module exports\n         */\n\n        module.exports = Manager;\n\n        /**\n         * `Manager` constructor.\n         *\n         * @param {String} engine instance or engine uri/opts\n         * @param {Object} options\n         * @api public\n         */\n\n        function Manager(uri, opts) {\n          if (!(this instanceof Manager)) return new Manager(uri, opts);\n          if (uri && 'object' == typeof uri) {\n            opts = uri;\n            uri = undefined;\n          }\n          opts = opts || {};\n\n          opts.path = opts.path || '/socket.io';\n          this.nsps = {};\n          this.subs = [];\n          this.opts = opts;\n          this.reconnection(opts.reconnection !== false);\n          this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n          this.reconnectionDelay(opts.reconnectionDelay || 1000);\n          this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n          this.randomizationFactor(opts.randomizationFactor || 0.5);\n          this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor()\n          });\n          this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n          this.readyState = 'closed';\n          this.uri = uri;\n          this.connecting = [];\n          this.lastPing = null;\n          this.encoding = false;\n          this.packetBuffer = [];\n          this.encoder = new parser.Encoder();\n          this.decoder = new parser.Decoder();\n          this.autoConnect = opts.autoConnect !== false;\n          if (this.autoConnect) this.open();\n        }\n\n        /**\n         * Propagate given event to sockets and emit on `this`\n         *\n         * @api private\n         */\n\n        Manager.prototype.emitAll = function () {\n          this.emit.apply(this, arguments);\n          for (var nsp in this.nsps) {\n            if (has.call(this.nsps, nsp)) {\n              this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n            }\n          }\n        };\n\n        /**\n         * Update `socket.id` of all sockets\n         *\n         * @api private\n         */\n\n        Manager.prototype.updateSocketIds = function () {\n          for (var nsp in this.nsps) {\n            if (has.call(this.nsps, nsp)) {\n              this.nsps[nsp].id = this.engine.id;\n            }\n          }\n        };\n\n        /**\n         * Mix in `Emitter`.\n         */\n\n        Emitter(Manager.prototype);\n\n        /**\n         * Sets the `reconnection` config.\n         *\n         * @param {Boolean} true/false if it should automatically reconnect\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.reconnection = function (v) {\n          if (!arguments.length) return this._reconnection;\n          this._reconnection = !!v;\n          return this;\n        };\n\n        /**\n         * Sets the reconnection attempts config.\n         *\n         * @param {Number} max reconnection attempts before giving up\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.reconnectionAttempts = function (v) {\n          if (!arguments.length) return this._reconnectionAttempts;\n          this._reconnectionAttempts = v;\n          return this;\n        };\n\n        /**\n         * Sets the delay between reconnections.\n         *\n         * @param {Number} delay\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.reconnectionDelay = function (v) {\n          if (!arguments.length) return this._reconnectionDelay;\n          this._reconnectionDelay = v;\n          this.backoff && this.backoff.setMin(v);\n          return this;\n        };\n\n        Manager.prototype.randomizationFactor = function (v) {\n          if (!arguments.length) return this._randomizationFactor;\n          this._randomizationFactor = v;\n          this.backoff && this.backoff.setJitter(v);\n          return this;\n        };\n\n        /**\n         * Sets the maximum delay between reconnections.\n         *\n         * @param {Number} delay\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.reconnectionDelayMax = function (v) {\n          if (!arguments.length) return this._reconnectionDelayMax;\n          this._reconnectionDelayMax = v;\n          this.backoff && this.backoff.setMax(v);\n          return this;\n        };\n\n        /**\n         * Sets the connection timeout. `false` to disable\n         *\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.timeout = function (v) {\n          if (!arguments.length) return this._timeout;\n          this._timeout = v;\n          return this;\n        };\n\n        /**\n         * Starts trying to reconnect if reconnection is enabled and we have not\n         * started reconnecting yet\n         *\n         * @api private\n         */\n\n        Manager.prototype.maybeReconnectOnOpen = function () {\n          // Only try to reconnect if it's the first time we're connecting\n          if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n          }\n        };\n\n        /**\n         * Sets the current transport `socket`.\n         *\n         * @param {Function} optional, callback\n         * @return {Manager} self\n         * @api public\n         */\n\n        Manager.prototype.open = Manager.prototype.connect = function (fn) {\n          debug('readyState %s', this.readyState);\n          if (~this.readyState.indexOf('open')) return this;\n\n          debug('opening %s', this.uri);\n          this.engine = eio(this.uri, this.opts);\n          var socket = this.engine;\n          var self = this;\n          this.readyState = 'opening';\n          this.skipReconnect = false;\n\n          // emit `open`\n          var openSub = on(socket, 'open', function () {\n            self.onopen();\n            fn && fn();\n          });\n\n          // emit `connect_error`\n          var errorSub = on(socket, 'error', function (data) {\n            debug('connect_error');\n            self.cleanup();\n            self.readyState = 'closed';\n            self.emitAll('connect_error', data);\n            if (fn) {\n              var err = new Error('Connection error');\n              err.data = data;\n              fn(err);\n            } else {\n              // Only do this if there is no fn to handle the error\n              self.maybeReconnectOnOpen();\n            }\n          });\n\n          // emit `connect_timeout`\n          if (false !== this._timeout) {\n            var timeout = this._timeout;\n            debug('connect attempt will timeout after %d', timeout);\n\n            // set timer\n            var timer = setTimeout(function () {\n              debug('connect attempt timed out after %d', timeout);\n              openSub.destroy();\n              socket.close();\n              socket.emit('error', 'timeout');\n              self.emitAll('connect_timeout', timeout);\n            }, timeout);\n\n            this.subs.push({\n              destroy: function destroy() {\n                clearTimeout(timer);\n              }\n            });\n          }\n\n          this.subs.push(openSub);\n          this.subs.push(errorSub);\n\n          return this;\n        };\n\n        /**\n         * Called upon transport open.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onopen = function () {\n          debug('open');\n\n          // clear old subs\n          this.cleanup();\n\n          // mark as open\n          this.readyState = 'open';\n          this.emit('open');\n\n          // add new subs\n          var socket = this.engine;\n          this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n          this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n          this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n          this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n          this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n          this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n        };\n\n        /**\n         * Called upon a ping.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onping = function () {\n          this.lastPing = new Date();\n          this.emitAll('ping');\n        };\n\n        /**\n         * Called upon a packet.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onpong = function () {\n          this.emitAll('pong', new Date() - this.lastPing);\n        };\n\n        /**\n         * Called with data.\n         *\n         * @api private\n         */\n\n        Manager.prototype.ondata = function (data) {\n          this.decoder.add(data);\n        };\n\n        /**\n         * Called when parser fully decodes a packet.\n         *\n         * @api private\n         */\n\n        Manager.prototype.ondecoded = function (packet) {\n          this.emit('packet', packet);\n        };\n\n        /**\n         * Called upon socket error.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onerror = function (err) {\n          debug('error', err);\n          this.emitAll('error', err);\n        };\n\n        /**\n         * Creates a new socket for the given `nsp`.\n         *\n         * @return {Socket}\n         * @api public\n         */\n\n        Manager.prototype.socket = function (nsp) {\n          var socket = this.nsps[nsp];\n          if (!socket) {\n            socket = new Socket(this, nsp);\n            this.nsps[nsp] = socket;\n            var self = this;\n            socket.on('connecting', onConnecting);\n            socket.on('connect', function () {\n              socket.id = self.engine.id;\n            });\n\n            if (this.autoConnect) {\n              // manually call here since connecting evnet is fired before listening\n              onConnecting();\n            }\n          }\n\n          function onConnecting() {\n            if (! ~indexOf(self.connecting, socket)) {\n              self.connecting.push(socket);\n            }\n          }\n\n          return socket;\n        };\n\n        /**\n         * Called upon a socket close.\n         *\n         * @param {Socket} socket\n         */\n\n        Manager.prototype.destroy = function (socket) {\n          var index = indexOf(this.connecting, socket);\n          if (~index) this.connecting.splice(index, 1);\n          if (this.connecting.length) return;\n\n          this.close();\n        };\n\n        /**\n         * Writes a packet.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Manager.prototype.packet = function (packet) {\n          debug('writing packet %j', packet);\n          var self = this;\n\n          if (!self.encoding) {\n            // encode, then write to engine with result\n            self.encoding = true;\n            this.encoder.encode(packet, function (encodedPackets) {\n              for (var i = 0; i < encodedPackets.length; i++) {\n                self.engine.write(encodedPackets[i], packet.options);\n              }\n              self.encoding = false;\n              self.processPacketQueue();\n            });\n          } else {\n            // add packet to the queue\n            self.packetBuffer.push(packet);\n          }\n        };\n\n        /**\n         * If packet buffer is non-empty, begins encoding the\n         * next packet in line.\n         *\n         * @api private\n         */\n\n        Manager.prototype.processPacketQueue = function () {\n          if (this.packetBuffer.length > 0 && !this.encoding) {\n            var pack = this.packetBuffer.shift();\n            this.packet(pack);\n          }\n        };\n\n        /**\n         * Clean up transport subscriptions and packet buffer.\n         *\n         * @api private\n         */\n\n        Manager.prototype.cleanup = function () {\n          debug('cleanup');\n\n          var sub;\n          while (sub = this.subs.shift()) sub.destroy();\n\n          this.packetBuffer = [];\n          this.encoding = false;\n          this.lastPing = null;\n\n          this.decoder.destroy();\n        };\n\n        /**\n         * Close the current socket.\n         *\n         * @api private\n         */\n\n        Manager.prototype.close = Manager.prototype.disconnect = function () {\n          debug('disconnect');\n          this.skipReconnect = true;\n          this.reconnecting = false;\n          if ('opening' == this.readyState) {\n            // `onclose` will not fire because\n            // an open event never happened\n            this.cleanup();\n          }\n          this.backoff.reset();\n          this.readyState = 'closed';\n          if (this.engine) this.engine.close();\n        };\n\n        /**\n         * Called upon engine close.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onclose = function (reason) {\n          debug('onclose');\n\n          this.cleanup();\n          this.backoff.reset();\n          this.readyState = 'closed';\n          this.emit('close', reason);\n\n          if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n          }\n        };\n\n        /**\n         * Attempt a reconnection.\n         *\n         * @api private\n         */\n\n        Manager.prototype.reconnect = function () {\n          if (this.reconnecting || this.skipReconnect) return this;\n\n          var self = this;\n\n          if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug('reconnect failed');\n            this.backoff.reset();\n            this.emitAll('reconnect_failed');\n            this.reconnecting = false;\n          } else {\n            var delay = this.backoff.duration();\n            debug('will wait %dms before reconnect attempt', delay);\n\n            this.reconnecting = true;\n            var timer = setTimeout(function () {\n              if (self.skipReconnect) return;\n\n              debug('attempting reconnect');\n              self.emitAll('reconnect_attempt', self.backoff.attempts);\n              self.emitAll('reconnecting', self.backoff.attempts);\n\n              // check again for the case socket closed in above events\n              if (self.skipReconnect) return;\n\n              self.open(function (err) {\n                if (err) {\n                  debug('reconnect attempt error');\n                  self.reconnecting = false;\n                  self.reconnect();\n                  self.emitAll('reconnect_error', err.data);\n                } else {\n                  debug('reconnect success');\n                  self.onreconnect();\n                }\n              });\n            }, delay);\n\n            this.subs.push({\n              destroy: function destroy() {\n                clearTimeout(timer);\n              }\n            });\n          }\n        };\n\n        /**\n         * Called upon successful reconnect.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onreconnect = function () {\n          var attempt = this.backoff.attempts;\n          this.reconnecting = false;\n          this.backoff.reset();\n          this.updateSocketIds();\n          this.emitAll('reconnect', attempt);\n        };\n      }, { \"./on\": 33, \"./socket\": 34, \"backo2\": 36, \"component-bind\": 37, \"component-emitter\": 38, \"debug\": 39, \"engine.io-client\": 1, \"indexof\": 42, \"socket.io-parser\": 47 }], 33: [function (_dereq_, module, exports) {\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = on;\n\n        /**\n         * Helper for subscriptions.\n         *\n         * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n         * @param {String} event name\n         * @param {Function} callback\n         * @api public\n         */\n\n        function on(obj, ev, fn) {\n          obj.on(ev, fn);\n          return {\n            destroy: function destroy() {\n              obj.removeListener(ev, fn);\n            }\n          };\n        }\n      }, {}], 34: [function (_dereq_, module, exports) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var parser = _dereq_('socket.io-parser');\n        var Emitter = _dereq_('component-emitter');\n        var toArray = _dereq_('to-array');\n        var on = _dereq_('./on');\n        var bind = _dereq_('component-bind');\n        var debug = _dereq_('debug')('socket.io-client:socket');\n        var hasBin = _dereq_('has-binary');\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = exports = Socket;\n\n        /**\n         * Internal events (blacklisted).\n         * These events can't be emitted by the user.\n         *\n         * @api private\n         */\n\n        var events = {\n          connect: 1,\n          connect_error: 1,\n          connect_timeout: 1,\n          connecting: 1,\n          disconnect: 1,\n          error: 1,\n          reconnect: 1,\n          reconnect_attempt: 1,\n          reconnect_failed: 1,\n          reconnect_error: 1,\n          reconnecting: 1,\n          ping: 1,\n          pong: 1\n        };\n\n        /**\n         * Shortcut to `Emitter#emit`.\n         */\n\n        var emit = Emitter.prototype.emit;\n\n        /**\n         * `Socket` constructor.\n         *\n         * @api public\n         */\n\n        function Socket(io, nsp) {\n          this.io = io;\n          this.nsp = nsp;\n          this.json = this; // compat\n          this.ids = 0;\n          this.acks = {};\n          this.receiveBuffer = [];\n          this.sendBuffer = [];\n          this.connected = false;\n          this.disconnected = true;\n          if (this.io.autoConnect) this.open();\n        }\n\n        /**\n         * Mix in `Emitter`.\n         */\n\n        Emitter(Socket.prototype);\n\n        /**\n         * Subscribe to open, close and packet events\n         *\n         * @api private\n         */\n\n        Socket.prototype.subEvents = function () {\n          if (this.subs) return;\n\n          var io = this.io;\n          this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n        };\n\n        /**\n         * \"Opens\" the socket.\n         *\n         * @api public\n         */\n\n        Socket.prototype.open = Socket.prototype.connect = function () {\n          if (this.connected) return this;\n\n          this.subEvents();\n          this.io.open(); // ensure open\n          if ('open' == this.io.readyState) this.onopen();\n          this.emit('connecting');\n          return this;\n        };\n\n        /**\n         * Sends a `message` event.\n         *\n         * @return {Socket} self\n         * @api public\n         */\n\n        Socket.prototype.send = function () {\n          var args = toArray(arguments);\n          args.unshift('message');\n          this.emit.apply(this, args);\n          return this;\n        };\n\n        /**\n         * Override `emit`.\n         * If the event is in `events`, it's emitted normally.\n         *\n         * @param {String} event name\n         * @return {Socket} self\n         * @api public\n         */\n\n        Socket.prototype.emit = function (ev) {\n          if (events.hasOwnProperty(ev)) {\n            emit.apply(this, arguments);\n            return this;\n          }\n\n          var args = toArray(arguments);\n          var parserType = parser.EVENT; // default\n          if (hasBin(args)) {\n            parserType = parser.BINARY_EVENT;\n          } // binary\n          var packet = { type: parserType, data: args };\n\n          packet.options = {};\n          packet.options.compress = !this.flags || false !== this.flags.compress;\n\n          // event ack callback\n          if ('function' == typeof args[args.length - 1]) {\n            debug('emitting packet with ack id %d', this.ids);\n            this.acks[this.ids] = args.pop();\n            packet.id = this.ids++;\n          }\n\n          if (this.connected) {\n            this.packet(packet);\n          } else {\n            this.sendBuffer.push(packet);\n          }\n\n          delete this.flags;\n\n          return this;\n        };\n\n        /**\n         * Sends a packet.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Socket.prototype.packet = function (packet) {\n          packet.nsp = this.nsp;\n          this.io.packet(packet);\n        };\n\n        /**\n         * Called upon engine `open`.\n         *\n         * @api private\n         */\n\n        Socket.prototype.onopen = function () {\n          debug('transport is open - connecting');\n\n          // write connect packet if necessary\n          if ('/' != this.nsp) {\n            this.packet({ type: parser.CONNECT });\n          }\n        };\n\n        /**\n         * Called upon engine `close`.\n         *\n         * @param {String} reason\n         * @api private\n         */\n\n        Socket.prototype.onclose = function (reason) {\n          debug('close (%s)', reason);\n          this.connected = false;\n          this.disconnected = true;\n          delete this.id;\n          this.emit('disconnect', reason);\n        };\n\n        /**\n         * Called with socket packet.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Socket.prototype.onpacket = function (packet) {\n          if (packet.nsp != this.nsp) return;\n\n          switch (packet.type) {\n            case parser.CONNECT:\n              this.onconnect();\n              break;\n\n            case parser.EVENT:\n              this.onevent(packet);\n              break;\n\n            case parser.BINARY_EVENT:\n              this.onevent(packet);\n              break;\n\n            case parser.ACK:\n              this.onack(packet);\n              break;\n\n            case parser.BINARY_ACK:\n              this.onack(packet);\n              break;\n\n            case parser.DISCONNECT:\n              this.ondisconnect();\n              break;\n\n            case parser.ERROR:\n              this.emit('error', packet.data);\n              break;\n          }\n        };\n\n        /**\n         * Called upon a server event.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Socket.prototype.onevent = function (packet) {\n          var args = packet.data || [];\n          debug('emitting event %j', args);\n\n          if (null != packet.id) {\n            debug('attaching ack callback to event');\n            args.push(this.ack(packet.id));\n          }\n\n          if (this.connected) {\n            emit.apply(this, args);\n          } else {\n            this.receiveBuffer.push(args);\n          }\n        };\n\n        /**\n         * Produces an ack callback to emit with an event.\n         *\n         * @api private\n         */\n\n        Socket.prototype.ack = function (id) {\n          var self = this;\n          var sent = false;\n          return function () {\n            // prevent double callbacks\n            if (sent) return;\n            sent = true;\n            var args = toArray(arguments);\n            debug('sending ack %j', args);\n\n            var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n            self.packet({\n              type: type,\n              id: id,\n              data: args\n            });\n          };\n        };\n\n        /**\n         * Called upon a server acknowlegement.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Socket.prototype.onack = function (packet) {\n          var ack = this.acks[packet.id];\n          if ('function' == typeof ack) {\n            debug('calling ack %s with %j', packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n          } else {\n            debug('bad ack %s', packet.id);\n          }\n        };\n\n        /**\n         * Called upon server connect.\n         *\n         * @api private\n         */\n\n        Socket.prototype.onconnect = function () {\n          this.connected = true;\n          this.disconnected = false;\n          this.emit('connect');\n          this.emitBuffered();\n        };\n\n        /**\n         * Emit buffered events (received and emitted).\n         *\n         * @api private\n         */\n\n        Socket.prototype.emitBuffered = function () {\n          var i;\n          for (i = 0; i < this.receiveBuffer.length; i++) {\n            emit.apply(this, this.receiveBuffer[i]);\n          }\n          this.receiveBuffer = [];\n\n          for (i = 0; i < this.sendBuffer.length; i++) {\n            this.packet(this.sendBuffer[i]);\n          }\n          this.sendBuffer = [];\n        };\n\n        /**\n         * Called upon server disconnect.\n         *\n         * @api private\n         */\n\n        Socket.prototype.ondisconnect = function () {\n          debug('server disconnect (%s)', this.nsp);\n          this.destroy();\n          this.onclose('io server disconnect');\n        };\n\n        /**\n         * Called upon forced client/server side disconnections,\n         * this method ensures the manager stops tracking us and\n         * that reconnections don't get triggered for this.\n         *\n         * @api private.\n         */\n\n        Socket.prototype.destroy = function () {\n          if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            for (var i = 0; i < this.subs.length; i++) {\n              this.subs[i].destroy();\n            }\n            this.subs = null;\n          }\n\n          this.io.destroy(this);\n        };\n\n        /**\n         * Disconnects the socket manually.\n         *\n         * @return {Socket} self\n         * @api public\n         */\n\n        Socket.prototype.close = Socket.prototype.disconnect = function () {\n          if (this.connected) {\n            debug('performing disconnect (%s)', this.nsp);\n            this.packet({ type: parser.DISCONNECT });\n          }\n\n          // remove socket from pool\n          this.destroy();\n\n          if (this.connected) {\n            // fire events\n            this.onclose('io client disconnect');\n          }\n          return this;\n        };\n\n        /**\n         * Sets the compress flag.\n         *\n         * @param {Boolean} if `true`, compresses the sending data\n         * @return {Socket} self\n         * @api public\n         */\n\n        Socket.prototype.compress = function (compress) {\n          this.flags = this.flags || {};\n          this.flags.compress = compress;\n          return this;\n        };\n      }, { \"./on\": 33, \"component-bind\": 37, \"component-emitter\": 38, \"debug\": 39, \"has-binary\": 41, \"socket.io-parser\": 47, \"to-array\": 51 }], 35: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          /**\n           * Module dependencies.\n           */\n\n          var parseuri = _dereq_('parseuri');\n          var debug = _dereq_('debug')('socket.io-client:url');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = url;\n\n          /**\n           * URL parser.\n           *\n           * @param {String} url\n           * @param {Object} An object meant to mimic window.location.\n           *                 Defaults to window.location.\n           * @api public\n           */\n\n          function url(uri, loc) {\n            var obj = uri;\n\n            // default to window.location\n            var loc = loc || global.location;\n            if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n            // relative path support\n            if ('string' == typeof uri) {\n              if ('/' == uri.charAt(0)) {\n                if ('/' == uri.charAt(1)) {\n                  uri = loc.protocol + uri;\n                } else {\n                  uri = loc.host + uri;\n                }\n              }\n\n              if (!/^(https?|wss?):\\/\\//.test(uri)) {\n                debug('protocol-less url %s', uri);\n                if ('undefined' != typeof loc) {\n                  uri = loc.protocol + '//' + uri;\n                } else {\n                  uri = 'https://' + uri;\n                }\n              }\n\n              // parse\n              debug('parse %s', uri);\n              obj = parseuri(uri);\n            }\n\n            // make sure we treat `localhost:80` and `localhost` equally\n            if (!obj.port) {\n              if (/^(http|ws)$/.test(obj.protocol)) {\n                obj.port = '80';\n              } else if (/^(http|ws)s$/.test(obj.protocol)) {\n                obj.port = '443';\n              }\n            }\n\n            obj.path = obj.path || '/';\n\n            var ipv6 = obj.host.indexOf(':') !== -1;\n            var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n            // define unique id\n            obj.id = obj.protocol + '://' + host + ':' + obj.port;\n            // define href\n            obj.href = obj.protocol + '://' + host + (loc && loc.port == obj.port ? '' : ':' + obj.port);\n\n            return obj;\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"debug\": 39, \"parseuri\": 45 }], 36: [function (_dereq_, module, exports) {\n\n        /**\n         * Expose `Backoff`.\n         */\n\n        module.exports = Backoff;\n\n        /**\n         * Initialize backoff timer with `opts`.\n         *\n         * - `min` initial timeout in milliseconds [100]\n         * - `max` max timeout [10000]\n         * - `jitter` [0]\n         * - `factor` [2]\n         *\n         * @param {Object} opts\n         * @api public\n         */\n\n        function Backoff(opts) {\n          opts = opts || {};\n          this.ms = opts.min || 100;\n          this.max = opts.max || 10000;\n          this.factor = opts.factor || 2;\n          this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n          this.attempts = 0;\n        }\n\n        /**\n         * Return the backoff duration.\n         *\n         * @return {Number}\n         * @api public\n         */\n\n        Backoff.prototype.duration = function () {\n          var ms = this.ms * Math.pow(this.factor, this.attempts++);\n          if (this.jitter) {\n            var rand = Math.random();\n            var deviation = Math.floor(rand * this.jitter * ms);\n            ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n          }\n          return Math.min(ms, this.max) | 0;\n        };\n\n        /**\n         * Reset the number of attempts.\n         *\n         * @api public\n         */\n\n        Backoff.prototype.reset = function () {\n          this.attempts = 0;\n        };\n\n        /**\n         * Set the minimum duration\n         *\n         * @api public\n         */\n\n        Backoff.prototype.setMin = function (min) {\n          this.ms = min;\n        };\n\n        /**\n         * Set the maximum duration\n         *\n         * @api public\n         */\n\n        Backoff.prototype.setMax = function (max) {\n          this.max = max;\n        };\n\n        /**\n         * Set the jitter\n         *\n         * @api public\n         */\n\n        Backoff.prototype.setJitter = function (jitter) {\n          this.jitter = jitter;\n        };\n      }, {}], 37: [function (_dereq_, module, exports) {\n        /**\n         * Slice reference.\n         */\n\n        var slice = [].slice;\n\n        /**\n         * Bind `obj` to `fn`.\n         *\n         * @param {Object} obj\n         * @param {Function|String} fn or string\n         * @return {Function}\n         * @api public\n         */\n\n        module.exports = function (obj, fn) {\n          if ('string' == typeof fn) fn = obj[fn];\n          if ('function' != typeof fn) throw new Error('bind() requires a function');\n          var args = slice.call(arguments, 2);\n          return function () {\n            return fn.apply(obj, args.concat(slice.call(arguments)));\n          };\n        };\n      }, {}], 38: [function (_dereq_, module, exports) {\n\n        /**\n         * Expose `Emitter`.\n         */\n\n        module.exports = Emitter;\n\n        /**\n         * Initialize a new `Emitter`.\n         *\n         * @api public\n         */\n\n        function Emitter(obj) {\n          if (obj) return mixin(obj);\n        };\n\n        /**\n         * Mixin the emitter properties.\n         *\n         * @param {Object} obj\n         * @return {Object}\n         * @api private\n         */\n\n        function mixin(obj) {\n          for (var key in Emitter.prototype) {\n            obj[key] = Emitter.prototype[key];\n          }\n          return obj;\n        }\n\n        /**\n         * Listen on the given `event` with `fn`.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n          this._callbacks = this._callbacks || {};\n          (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n          return this;\n        };\n\n        /**\n         * Adds an `event` listener that will be invoked a single\n         * time then automatically removed.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.once = function (event, fn) {\n          function on() {\n            this.off(event, on);\n            fn.apply(this, arguments);\n          }\n\n          on.fn = fn;\n          this.on(event, on);\n          return this;\n        };\n\n        /**\n         * Remove the given callback for `event` or all\n         * registered callbacks.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n          this._callbacks = this._callbacks || {};\n\n          // all\n          if (0 == arguments.length) {\n            this._callbacks = {};\n            return this;\n          }\n\n          // specific event\n          var callbacks = this._callbacks['$' + event];\n          if (!callbacks) return this;\n\n          // remove all handlers\n          if (1 == arguments.length) {\n            delete this._callbacks['$' + event];\n            return this;\n          }\n\n          // remove specific handler\n          var cb;\n          for (var i = 0; i < callbacks.length; i++) {\n            cb = callbacks[i];\n            if (cb === fn || cb.fn === fn) {\n              callbacks.splice(i, 1);\n              break;\n            }\n          }\n          return this;\n        };\n\n        /**\n         * Emit `event` with the given args.\n         *\n         * @param {String} event\n         * @param {Mixed} ...\n         * @return {Emitter}\n         */\n\n        Emitter.prototype.emit = function (event) {\n          this._callbacks = this._callbacks || {};\n          var args = [].slice.call(arguments, 1),\n              callbacks = this._callbacks['$' + event];\n\n          if (callbacks) {\n            callbacks = callbacks.slice(0);\n            for (var i = 0, len = callbacks.length; i < len; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n\n          return this;\n        };\n\n        /**\n         * Return array of callbacks for `event`.\n         *\n         * @param {String} event\n         * @return {Array}\n         * @api public\n         */\n\n        Emitter.prototype.listeners = function (event) {\n          this._callbacks = this._callbacks || {};\n          return this._callbacks['$' + event] || [];\n        };\n\n        /**\n         * Check if this emitter has `event` handlers.\n         *\n         * @param {String} event\n         * @return {Boolean}\n         * @api public\n         */\n\n        Emitter.prototype.hasListeners = function (event) {\n          return !!this.listeners(event).length;\n        };\n      }, {}], 39: [function (_dereq_, module, exports) {\n        arguments[4][17][0].apply(exports, arguments);\n      }, { \"./debug\": 40, \"dup\": 17 }], 40: [function (_dereq_, module, exports) {\n        arguments[4][18][0].apply(exports, arguments);\n      }, { \"dup\": 18, \"ms\": 44 }], 41: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          /*\n           * Module requirements.\n           */\n\n          var isArray = _dereq_('isarray');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = hasBinary;\n\n          /**\n           * Checks for binary data.\n           *\n           * Right now only Buffer and ArrayBuffer are supported..\n           *\n           * @param {Object} anything\n           * @api public\n           */\n\n          function hasBinary(data) {\n\n            function _hasBinary(obj) {\n              if (!obj) return false;\n\n              if (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer || global.Blob && obj instanceof Blob || global.File && obj instanceof File) {\n                return true;\n              }\n\n              if (isArray(obj)) {\n                for (var i = 0; i < obj.length; i++) {\n                  if (_hasBinary(obj[i])) {\n                    return true;\n                  }\n                }\n              } else if (obj && 'object' == typeof obj) {\n                // see: https://github.com/Automattic/has-binary/pull/4\n                if (obj.toJSON && 'function' == typeof obj.toJSON) {\n                  obj = obj.toJSON();\n                }\n\n                for (var key in obj) {\n                  if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n                    return true;\n                  }\n                }\n              }\n\n              return false;\n            }\n\n            return _hasBinary(data);\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"isarray\": 43 }], 42: [function (_dereq_, module, exports) {\n        arguments[4][23][0].apply(exports, arguments);\n      }, { \"dup\": 23 }], 43: [function (_dereq_, module, exports) {\n        arguments[4][24][0].apply(exports, arguments);\n      }, { \"dup\": 24 }], 44: [function (_dereq_, module, exports) {\n        arguments[4][25][0].apply(exports, arguments);\n      }, { \"dup\": 25 }], 45: [function (_dereq_, module, exports) {\n        arguments[4][28][0].apply(exports, arguments);\n      }, { \"dup\": 28 }], 46: [function (_dereq_, module, exports) {\n        (function (global) {\n          /*global Blob,File*/\n\n          /**\n           * Module requirements\n           */\n\n          var isArray = _dereq_('isarray');\n          var isBuf = _dereq_('./is-buffer');\n\n          /**\n           * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n           * Anything with blobs or files should be fed through removeBlobs before coming\n           * here.\n           *\n           * @param {Object} packet - socket.io event packet\n           * @return {Object} with deconstructed packet and list of buffers\n           * @api public\n           */\n\n          exports.deconstructPacket = function (packet) {\n            var buffers = [];\n            var packetData = packet.data;\n\n            function _deconstructPacket(data) {\n              if (!data) return data;\n\n              if (isBuf(data)) {\n                var placeholder = { _placeholder: true, num: buffers.length };\n                buffers.push(data);\n                return placeholder;\n              } else if (isArray(data)) {\n                var newData = new Array(data.length);\n                for (var i = 0; i < data.length; i++) {\n                  newData[i] = _deconstructPacket(data[i]);\n                }\n                return newData;\n              } else if ('object' == typeof data && !(data instanceof Date)) {\n                var newData = {};\n                for (var key in data) {\n                  newData[key] = _deconstructPacket(data[key]);\n                }\n                return newData;\n              }\n              return data;\n            }\n\n            var pack = packet;\n            pack.data = _deconstructPacket(packetData);\n            pack.attachments = buffers.length; // number of binary 'attachments'\n            return { packet: pack, buffers: buffers };\n          };\n\n          /**\n           * Reconstructs a binary packet from its placeholder packet and buffers\n           *\n           * @param {Object} packet - event packet with placeholders\n           * @param {Array} buffers - binary buffers to put in placeholder positions\n           * @return {Object} reconstructed packet\n           * @api public\n           */\n\n          exports.reconstructPacket = function (packet, buffers) {\n            var curPlaceHolder = 0;\n\n            function _reconstructPacket(data) {\n              if (data && data._placeholder) {\n                var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n                return buf;\n              } else if (isArray(data)) {\n                for (var i = 0; i < data.length; i++) {\n                  data[i] = _reconstructPacket(data[i]);\n                }\n                return data;\n              } else if (data && 'object' == typeof data) {\n                for (var key in data) {\n                  data[key] = _reconstructPacket(data[key]);\n                }\n                return data;\n              }\n              return data;\n            }\n\n            packet.data = _reconstructPacket(packet.data);\n            packet.attachments = undefined; // no longer useful\n            return packet;\n          };\n\n          /**\n           * Asynchronously removes Blobs or Files from data via\n           * FileReader's readAsArrayBuffer method. Used before encoding\n           * data as msgpack. Calls callback with the blobless data.\n           *\n           * @param {Object} data\n           * @param {Function} callback\n           * @api private\n           */\n\n          exports.removeBlobs = function (data, callback) {\n            function _removeBlobs(obj, curKey, containingObject) {\n              if (!obj) return obj;\n\n              // convert any blob\n              if (global.Blob && obj instanceof Blob || global.File && obj instanceof File) {\n                pendingBlobs++;\n\n                // async filereader\n                var fileReader = new FileReader();\n                fileReader.onload = function () {\n                  // this.result == arraybuffer\n                  if (containingObject) {\n                    containingObject[curKey] = this.result;\n                  } else {\n                    bloblessData = this.result;\n                  }\n\n                  // if nothing pending its callback time\n                  if (! --pendingBlobs) {\n                    callback(bloblessData);\n                  }\n                };\n\n                fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n              } else if (isArray(obj)) {\n                  // handle array\n                  for (var i = 0; i < obj.length; i++) {\n                    _removeBlobs(obj[i], i, obj);\n                  }\n                } else if (obj && 'object' == typeof obj && !isBuf(obj)) {\n                  // and object\n                  for (var key in obj) {\n                    _removeBlobs(obj[key], key, obj);\n                  }\n                }\n            }\n\n            var pendingBlobs = 0;\n            var bloblessData = data;\n            _removeBlobs(bloblessData);\n            if (!pendingBlobs) {\n              callback(bloblessData);\n            }\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./is-buffer\": 48, \"isarray\": 43 }], 47: [function (_dereq_, module, exports) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var debug = _dereq_('debug')('socket.io-parser');\n        var json = _dereq_('json3');\n        var isArray = _dereq_('isarray');\n        var Emitter = _dereq_('component-emitter');\n        var binary = _dereq_('./binary');\n        var isBuf = _dereq_('./is-buffer');\n\n        /**\n         * Protocol version.\n         *\n         * @api public\n         */\n\n        exports.protocol = 4;\n\n        /**\n         * Packet types.\n         *\n         * @api public\n         */\n\n        exports.types = ['CONNECT', 'DISCONNECT', 'EVENT', 'BINARY_EVENT', 'ACK', 'BINARY_ACK', 'ERROR'];\n\n        /**\n         * Packet type `connect`.\n         *\n         * @api public\n         */\n\n        exports.CONNECT = 0;\n\n        /**\n         * Packet type `disconnect`.\n         *\n         * @api public\n         */\n\n        exports.DISCONNECT = 1;\n\n        /**\n         * Packet type `event`.\n         *\n         * @api public\n         */\n\n        exports.EVENT = 2;\n\n        /**\n         * Packet type `ack`.\n         *\n         * @api public\n         */\n\n        exports.ACK = 3;\n\n        /**\n         * Packet type `error`.\n         *\n         * @api public\n         */\n\n        exports.ERROR = 4;\n\n        /**\n         * Packet type 'binary event'\n         *\n         * @api public\n         */\n\n        exports.BINARY_EVENT = 5;\n\n        /**\n         * Packet type `binary ack`. For acks with binary arguments.\n         *\n         * @api public\n         */\n\n        exports.BINARY_ACK = 6;\n\n        /**\n         * Encoder constructor.\n         *\n         * @api public\n         */\n\n        exports.Encoder = Encoder;\n\n        /**\n         * Decoder constructor.\n         *\n         * @api public\n         */\n\n        exports.Decoder = Decoder;\n\n        /**\n         * A socket.io Encoder instance\n         *\n         * @api public\n         */\n\n        function Encoder() {}\n\n        /**\n         * Encode a packet as a single string if non-binary, or as a\n         * buffer sequence, depending on packet type.\n         *\n         * @param {Object} obj - packet object\n         * @param {Function} callback - function to handle encodings (likely engine.write)\n         * @return Calls callback with Array of encodings\n         * @api public\n         */\n\n        Encoder.prototype.encode = function (obj, callback) {\n          debug('encoding packet %j', obj);\n\n          if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n            encodeAsBinary(obj, callback);\n          } else {\n            var encoding = encodeAsString(obj);\n            callback([encoding]);\n          }\n        };\n\n        /**\n         * Encode packet as string.\n         *\n         * @param {Object} packet\n         * @return {String} encoded\n         * @api private\n         */\n\n        function encodeAsString(obj) {\n          var str = '';\n          var nsp = false;\n\n          // first is type\n          str += obj.type;\n\n          // attachments if we have them\n          if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n            str += obj.attachments;\n            str += '-';\n          }\n\n          // if we have a namespace other than `/`\n          // we append it followed by a comma `,`\n          if (obj.nsp && '/' != obj.nsp) {\n            nsp = true;\n            str += obj.nsp;\n          }\n\n          // immediately followed by the id\n          if (null != obj.id) {\n            if (nsp) {\n              str += ',';\n              nsp = false;\n            }\n            str += obj.id;\n          }\n\n          // json data\n          if (null != obj.data) {\n            if (nsp) str += ',';\n            str += json.stringify(obj.data);\n          }\n\n          debug('encoded %j as %s', obj, str);\n          return str;\n        }\n\n        /**\n         * Encode packet as 'buffer sequence' by removing blobs, and\n         * deconstructing packet into object with placeholders and\n         * a list of buffers.\n         *\n         * @param {Object} packet\n         * @return {Buffer} encoded\n         * @api private\n         */\n\n        function encodeAsBinary(obj, callback) {\n\n          function writeEncoding(bloblessData) {\n            var deconstruction = binary.deconstructPacket(bloblessData);\n            var pack = encodeAsString(deconstruction.packet);\n            var buffers = deconstruction.buffers;\n\n            buffers.unshift(pack); // add packet info to beginning of data list\n            callback(buffers); // write all the buffers\n          }\n\n          binary.removeBlobs(obj, writeEncoding);\n        }\n\n        /**\n         * A socket.io Decoder instance\n         *\n         * @return {Object} decoder\n         * @api public\n         */\n\n        function Decoder() {\n          this.reconstructor = null;\n        }\n\n        /**\n         * Mix in `Emitter` with Decoder.\n         */\n\n        Emitter(Decoder.prototype);\n\n        /**\n         * Decodes an ecoded packet string into packet JSON.\n         *\n         * @param {String} obj - encoded packet\n         * @return {Object} packet\n         * @api public\n         */\n\n        Decoder.prototype.add = function (obj) {\n          var packet;\n          if ('string' == typeof obj) {\n            packet = decodeString(obj);\n            if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) {\n              // binary packet's json\n              this.reconstructor = new BinaryReconstructor(packet);\n\n              // no attachments, labeled binary but no binary data to follow\n              if (this.reconstructor.reconPack.attachments === 0) {\n                this.emit('decoded', packet);\n              }\n            } else {\n              // non-binary full packet\n              this.emit('decoded', packet);\n            }\n          } else if (isBuf(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n              throw new Error('got binary data when not reconstructing a packet');\n            } else {\n              packet = this.reconstructor.takeBinaryData(obj);\n              if (packet) {\n                // received final buffer\n                this.reconstructor = null;\n                this.emit('decoded', packet);\n              }\n            }\n          } else {\n            throw new Error('Unknown type: ' + obj);\n          }\n        };\n\n        /**\n         * Decode a packet String (JSON data)\n         *\n         * @param {String} str\n         * @return {Object} packet\n         * @api private\n         */\n\n        function decodeString(str) {\n          var p = {};\n          var i = 0;\n\n          // look up type\n          p.type = Number(str.charAt(0));\n          if (null == exports.types[p.type]) return error();\n\n          // look up attachments if type binary\n          if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n            var buf = '';\n            while (str.charAt(++i) != '-') {\n              buf += str.charAt(i);\n              if (i == str.length) break;\n            }\n            if (buf != Number(buf) || str.charAt(i) != '-') {\n              throw new Error('Illegal attachments');\n            }\n            p.attachments = Number(buf);\n          }\n\n          // look up namespace (if any)\n          if ('/' == str.charAt(i + 1)) {\n            p.nsp = '';\n            while (++i) {\n              var c = str.charAt(i);\n              if (',' == c) break;\n              p.nsp += c;\n              if (i == str.length) break;\n            }\n          } else {\n            p.nsp = '/';\n          }\n\n          // look up id\n          var next = str.charAt(i + 1);\n          if ('' !== next && Number(next) == next) {\n            p.id = '';\n            while (++i) {\n              var c = str.charAt(i);\n              if (null == c || Number(c) != c) {\n                --i;\n                break;\n              }\n              p.id += str.charAt(i);\n              if (i == str.length) break;\n            }\n            p.id = Number(p.id);\n          }\n\n          // look up json data\n          if (str.charAt(++i)) {\n            try {\n              p.data = json.parse(str.substr(i));\n            } catch (e) {\n              return error();\n            }\n          }\n\n          debug('decoded %s as %j', str, p);\n          return p;\n        }\n\n        /**\n         * Deallocates a parser's resources\n         *\n         * @api public\n         */\n\n        Decoder.prototype.destroy = function () {\n          if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n          }\n        };\n\n        /**\n         * A manager of a binary event's 'buffer sequence'. Should\n         * be constructed whenever a packet of type BINARY_EVENT is\n         * decoded.\n         *\n         * @param {Object} packet\n         * @return {BinaryReconstructor} initialized reconstructor\n         * @api private\n         */\n\n        function BinaryReconstructor(packet) {\n          this.reconPack = packet;\n          this.buffers = [];\n        }\n\n        /**\n         * Method to be called when binary data received from connection\n         * after a BINARY_EVENT packet.\n         *\n         * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n         * @return {null | Object} returns null if more binary data is expected or\n         *   a reconstructed packet object if all buffers have been received.\n         * @api private\n         */\n\n        BinaryReconstructor.prototype.takeBinaryData = function (binData) {\n          this.buffers.push(binData);\n          if (this.buffers.length == this.reconPack.attachments) {\n            // done with buffer list\n            var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n          }\n          return null;\n        };\n\n        /**\n         * Cleans up binary packet reconstruction variables.\n         *\n         * @api private\n         */\n\n        BinaryReconstructor.prototype.finishedReconstruction = function () {\n          this.reconPack = null;\n          this.buffers = [];\n        };\n\n        function error(data) {\n          return {\n            type: exports.ERROR,\n            data: 'parser error'\n          };\n        }\n      }, { \"./binary\": 46, \"./is-buffer\": 48, \"component-emitter\": 49, \"debug\": 39, \"isarray\": 43, \"json3\": 50 }], 48: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          module.exports = isBuf;\n\n          /**\n           * Returns true if obj is a buffer or an arraybuffer.\n           *\n           * @api private\n           */\n\n          function isBuf(obj) {\n            return global.Buffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer;\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 49: [function (_dereq_, module, exports) {\n        arguments[4][15][0].apply(exports, arguments);\n      }, { \"dup\": 15 }], 50: [function (_dereq_, module, exports) {\n        (function (global) {\n          /*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n          ;(function () {\n            // Detect the `define` function exposed by asynchronous module loaders. The\n            // strict `define` check is necessary for compatibility with `r.js`.\n            var isLoader = typeof define === \"function\" && define.amd;\n\n            // A set of types used to distinguish objects from primitives.\n            var objectTypes = {\n              \"function\": true,\n              \"object\": true\n            };\n\n            // Detect the `exports` object exposed by CommonJS implementations.\n            var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n            // Use the `global` object exposed by Node (including Browserify via\n            // `insert-module-globals`), Narwhal, and Ringo as the default context,\n            // and the `window` object in browsers. Rhino exports a `global` function\n            // instead.\n            var root = objectTypes[typeof window] && window || this,\n                freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n            if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n              root = freeGlobal;\n            }\n\n            // Public: Initializes JSON 3 using the given `context` object, attaching the\n            // `stringify` and `parse` functions to the specified `exports` object.\n            function runInContext(context, exports) {\n              context || (context = root[\"Object\"]());\n              exports || (exports = root[\"Object\"]());\n\n              // Native constructor aliases.\n              var Number = context[\"Number\"] || root[\"Number\"],\n                  String = context[\"String\"] || root[\"String\"],\n                  Object = context[\"Object\"] || root[\"Object\"],\n                  Date = context[\"Date\"] || root[\"Date\"],\n                  SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n                  TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n                  Math = context[\"Math\"] || root[\"Math\"],\n                  nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n              // Delegate to the native `stringify` and `parse` implementations.\n              if (typeof nativeJSON == \"object\" && nativeJSON) {\n                exports.stringify = nativeJSON.stringify;\n                exports.parse = nativeJSON.parse;\n              }\n\n              // Convenience aliases.\n              var objectProto = Object.prototype,\n                  getClass = objectProto.toString,\n                  isProperty,\n                  forEach,\n                  undef;\n\n              // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n              var isExtended = new Date(-3509827334573292);\n              try {\n                // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n                // results for certain dates in Opera >= 10.53.\n                isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n                // Safari < 2.0.2 stores the internal millisecond time value correctly,\n                // but clips the values returned by the date methods to the range of\n                // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n                isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n              } catch (exception) {}\n\n              // Internal: Determines whether the native `JSON.stringify` and `parse`\n              // implementations are spec-compliant. Based on work by Ken Snyder.\n              function has(name) {\n                if (has[name] !== undef) {\n                  // Return cached feature test result.\n                  return has[name];\n                }\n                var isSupported;\n                if (name == \"bug-string-char-index\") {\n                  // IE <= 7 doesn't support accessing string characters using square\n                  // bracket notation. IE 8 only supports this for primitives.\n                  isSupported = \"a\"[0] != \"a\";\n                } else if (name == \"json\") {\n                  // Indicates whether both `JSON.stringify` and `JSON.parse` are\n                  // supported.\n                  isSupported = has(\"json-stringify\") && has(\"json-parse\");\n                } else {\n                  var value,\n                      serialized = \"{\\\"a\\\":[1,true,false,null,\\\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\\\"]}\";\n                  // Test `JSON.stringify`.\n                  if (name == \"json-stringify\") {\n                    var stringify = exports.stringify,\n                        stringifySupported = typeof stringify == \"function\" && isExtended;\n                    if (stringifySupported) {\n                      // A test function object with a custom `toJSON` method.\n                      (value = function () {\n                        return 1;\n                      }).toJSON = value;\n                      try {\n                        stringifySupported =\n                        // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                        // primitives as object literals.\n                        stringify(0) === \"0\" &&\n                        // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                        // literals.\n                        stringify(new Number()) === \"0\" && stringify(new String()) == '\"\"' &&\n                        // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                        // does not define a canonical JSON representation (this applies to\n                        // objects with `toJSON` properties as well, *unless* they are nested\n                        // within an object or array).\n                        stringify(getClass) === undef &&\n                        // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                        // FF 3.1b3 pass this test.\n                        stringify(undef) === undef &&\n                        // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                        // respectively, if the value is omitted entirely.\n                        stringify() === undef &&\n                        // FF 3.1b1, 2 throw an error if the given value is not a number,\n                        // string, array, object, Boolean, or `null` literal. This applies to\n                        // objects with custom `toJSON` methods as well, unless they are nested\n                        // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                        // methods entirely.\n                        stringify(value) === \"1\" && stringify([value]) == \"[1]\" &&\n                        // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                        // `\"[null]\"`.\n                        stringify([undef]) == \"[null]\" &&\n                        // YUI 3.0.0b1 fails to serialize `null` literals.\n                        stringify(null) == \"null\" &&\n                        // FF 3.1b1, 2 halts serialization if an array contains a function:\n                        // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                        // elides non-JSON values from objects and arrays, unless they\n                        // define custom `toJSON` methods.\n                        stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                        // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                        // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                        stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                        // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                        stringify(null, value) === \"1\" && stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                        // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                        // serialize extended years.\n                        stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                        // The milliseconds are optional in ES 5, but required in 5.1.\n                        stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                        // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                        // four-digit years instead of six-digit years. Credits: @Yaffle.\n                        stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                        // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                        // values less than 1000. Credits: @Yaffle.\n                        stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n                      } catch (exception) {\n                        stringifySupported = false;\n                      }\n                    }\n                    isSupported = stringifySupported;\n                  }\n                  // Test `JSON.parse`.\n                  if (name == \"json-parse\") {\n                    var parse = exports.parse;\n                    if (typeof parse == \"function\") {\n                      try {\n                        // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n                        // Conforming implementations should also coerce the initial argument to\n                        // a string prior to parsing.\n                        if (parse(\"0\") === 0 && !parse(false)) {\n                          // Simple parsing test.\n                          value = parse(serialized);\n                          var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                          if (parseSupported) {\n                            try {\n                              // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                              parseSupported = !parse('\"\\t\"');\n                            } catch (exception) {}\n                            if (parseSupported) {\n                              try {\n                                // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                                // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                                // certain octal literals.\n                                parseSupported = parse(\"01\") !== 1;\n                              } catch (exception) {}\n                            }\n                            if (parseSupported) {\n                              try {\n                                // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                                // points. These environments, along with FF 3.1b1 and 2,\n                                // also allow trailing commas in JSON objects and arrays.\n                                parseSupported = parse(\"1.\") !== 1;\n                              } catch (exception) {}\n                            }\n                          }\n                        }\n                      } catch (exception) {\n                        parseSupported = false;\n                      }\n                    }\n                    isSupported = parseSupported;\n                  }\n                }\n                return has[name] = !!isSupported;\n              }\n\n              if (!has(\"json\")) {\n                // Common `[[Class]]` name aliases.\n                var functionClass = \"[object Function]\",\n                    dateClass = \"[object Date]\",\n                    numberClass = \"[object Number]\",\n                    stringClass = \"[object String]\",\n                    arrayClass = \"[object Array]\",\n                    booleanClass = \"[object Boolean]\";\n\n                // Detect incomplete support for accessing string characters by index.\n                var charIndexBuggy = has(\"bug-string-char-index\");\n\n                // Define additional utility methods if the `Date` methods are buggy.\n                if (!isExtended) {\n                  var floor = Math.floor;\n                  // A mapping between the months of the year and the number of days between\n                  // January 1st and the first of the respective month.\n                  var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n                  // Internal: Calculates the number of days between the Unix epoch and the\n                  // first day of the given month.\n                  var getDay = function getDay(year, month) {\n                    return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n                  };\n                }\n\n                // Internal: Determines if a property is a direct property of the given\n                // object. Delegates to the native `Object#hasOwnProperty` method.\n                if (!(isProperty = objectProto.hasOwnProperty)) {\n                  isProperty = function (property) {\n                    var members = {},\n                        constructor;\n                    if ((members.__proto__ = null, members.__proto__ = {\n                      // The *proto* property cannot be set multiple times in recent\n                      // versions of Firefox and SeaMonkey.\n                      \"toString\": 1\n                    }, members).toString != getClass) {\n                      // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n                      // supports the mutable *proto* property.\n                      isProperty = function (property) {\n                        // Capture and break the object's prototype chain (see section 8.6.2\n                        // of the ES 5.1 spec). The parenthesized expression prevents an\n                        // unsafe transformation by the Closure Compiler.\n                        var original = this.__proto__,\n                            result = (property in (this.__proto__ = null, this));\n                        // Restore the original prototype chain.\n                        this.__proto__ = original;\n                        return result;\n                      };\n                    } else {\n                      // Capture a reference to the top-level `Object` constructor.\n                      constructor = members.constructor;\n                      // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n                      // other environments.\n                      isProperty = function (property) {\n                        var parent = (this.constructor || constructor).prototype;\n                        return property in this && !(property in parent && this[property] === parent[property]);\n                      };\n                    }\n                    members = null;\n                    return isProperty.call(this, property);\n                  };\n                }\n\n                // Internal: Normalizes the `for...in` iteration algorithm across\n                // environments. Each enumerated key is yielded to a `callback` function.\n                forEach = function (object, callback) {\n                  var size = 0,\n                      Properties,\n                      members,\n                      property;\n\n                  // Tests for bugs in the current environment's `for...in` algorithm. The\n                  // `valueOf` property inherits the non-enumerable flag from\n                  // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n                  (Properties = function () {\n                    this.valueOf = 0;\n                  }).prototype.valueOf = 0;\n\n                  // Iterate over a new instance of the `Properties` class.\n                  members = new Properties();\n                  for (property in members) {\n                    // Ignore all properties inherited from `Object.prototype`.\n                    if (isProperty.call(members, property)) {\n                      size++;\n                    }\n                  }\n                  Properties = members = null;\n\n                  // Normalize the iteration algorithm.\n                  if (!size) {\n                    // A list of non-enumerable properties inherited from `Object.prototype`.\n                    members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n                    // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n                    // properties.\n                    forEach = function (object, callback) {\n                      var isFunction = getClass.call(object) == functionClass,\n                          property,\n                          length;\n                      var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n                      for (property in object) {\n                        // Gecko <= 1.0 enumerates the `prototype` property of functions under\n                        // certain conditions; IE does not.\n                        if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                          callback(property);\n                        }\n                      }\n                      // Manually invoke the callback for each non-enumerable property.\n                      for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n                    };\n                  } else if (size == 2) {\n                    // Safari <= 2.0.4 enumerates shadowed properties twice.\n                    forEach = function (object, callback) {\n                      // Create a set of iterated properties.\n                      var members = {},\n                          isFunction = getClass.call(object) == functionClass,\n                          property;\n                      for (property in object) {\n                        // Store each property name to prevent double enumeration. The\n                        // `prototype` property of functions is not enumerated due to cross-\n                        // environment inconsistencies.\n                        if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                          callback(property);\n                        }\n                      }\n                    };\n                  } else {\n                    // No bugs detected; use the standard `for...in` algorithm.\n                    forEach = function (object, callback) {\n                      var isFunction = getClass.call(object) == functionClass,\n                          property,\n                          isConstructor;\n                      for (property in object) {\n                        if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                          callback(property);\n                        }\n                      }\n                      // Manually invoke the callback for the `constructor` property due to\n                      // cross-environment inconsistencies.\n                      if (isConstructor || isProperty.call(object, property = \"constructor\")) {\n                        callback(property);\n                      }\n                    };\n                  }\n                  return forEach(object, callback);\n                };\n\n                // Public: Serializes a JavaScript `value` as a JSON string. The optional\n                // `filter` argument may specify either a function that alters how object and\n                // array members are serialized, or an array of strings and numbers that\n                // indicates which properties should be serialized. The optional `width`\n                // argument may be either a string or number that specifies the indentation\n                // level of the output.\n                if (!has(\"json-stringify\")) {\n                  // Internal: A map of control characters and their escaped equivalents.\n                  var Escapes = {\n                    92: \"\\\\\\\\\",\n                    34: '\\\\\"',\n                    8: \"\\\\b\",\n                    12: \"\\\\f\",\n                    10: \"\\\\n\",\n                    13: \"\\\\r\",\n                    9: \"\\\\t\"\n                  };\n\n                  // Internal: Converts `value` into a zero-padded string such that its\n                  // length is at least equal to `width`. The `width` must be <= 6.\n                  var leadingZeroes = \"000000\";\n                  var toPaddedString = function toPaddedString(width, value) {\n                    // The `|| 0` expression is necessary to work around a bug in\n                    // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n                    return (leadingZeroes + (value || 0)).slice(-width);\n                  };\n\n                  // Internal: Double-quotes a string `value`, replacing all ASCII control\n                  // characters (characters with code unit values between 0 and 31) with\n                  // their escaped equivalents. This is an implementation of the\n                  // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n                  var unicodePrefix = \"\\\\u00\";\n                  var quote = function quote(value) {\n                    var result = '\"',\n                        index = 0,\n                        length = value.length,\n                        useCharIndex = !charIndexBuggy || length > 10;\n                    var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n                    for (; index < length; index++) {\n                      var charCode = value.charCodeAt(index);\n                      // If the character is a control character, append its Unicode or\n                      // shorthand escape sequence; otherwise, append the character as-is.\n                      switch (charCode) {\n                        case 8:case 9:case 10:case 12:case 13:case 34:case 92:\n                          result += Escapes[charCode];\n                          break;\n                        default:\n                          if (charCode < 32) {\n                            result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                            break;\n                          }\n                          result += useCharIndex ? symbols[index] : value.charAt(index);\n                      }\n                    }\n                    return result + '\"';\n                  };\n\n                  // Internal: Recursively serializes an object. Implements the\n                  // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n                  var serialize = function serialize(property, object, callback, properties, whitespace, indentation, stack) {\n                    var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n                    try {\n                      // Necessary for host object support.\n                      value = object[property];\n                    } catch (exception) {}\n                    if (typeof value == \"object\" && value) {\n                      className = getClass.call(value);\n                      if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n                        if (value > -1 / 0 && value < 1 / 0) {\n                          // Dates are serialized according to the `Date#toJSON` method\n                          // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                          // for the ISO 8601 date time string format.\n                          if (getDay) {\n                            // Manually compute the year, month, date, hours, minutes,\n                            // seconds, and milliseconds if the `getUTC*` methods are\n                            // buggy. Adapted from @Yaffle's `date-shim` project.\n                            date = floor(value / 864e5);\n                            for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                            for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                            date = 1 + date - getDay(year, month);\n                            // The `time` value specifies the time within the day (see ES\n                            // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                            // to compute `A modulo B`, as the `%` operator does not\n                            // correspond to the `modulo` operation for negative numbers.\n                            time = (value % 864e5 + 864e5) % 864e5;\n                            // The hours, minutes, seconds, and milliseconds are obtained by\n                            // decomposing the time within the day. See section 15.9.1.10.\n                            hours = floor(time / 36e5) % 24;\n                            minutes = floor(time / 6e4) % 60;\n                            seconds = floor(time / 1e3) % 60;\n                            milliseconds = time % 1e3;\n                          } else {\n                            year = value.getUTCFullYear();\n                            month = value.getUTCMonth();\n                            date = value.getUTCDate();\n                            hours = value.getUTCHours();\n                            minutes = value.getUTCMinutes();\n                            seconds = value.getUTCSeconds();\n                            milliseconds = value.getUTCMilliseconds();\n                          }\n                          // Serialize extended years correctly.\n                          value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) + \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                          // Months, dates, hours, minutes, and seconds should have two\n                          // digits; milliseconds should have three.\n                          \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                          // Milliseconds are optional in ES 5.0, but required in 5.1.\n                          \".\" + toPaddedString(3, milliseconds) + \"Z\";\n                        } else {\n                          value = null;\n                        }\n                      } else if (typeof value.toJSON == \"function\" && (className != numberClass && className != stringClass && className != arrayClass || isProperty.call(value, \"toJSON\"))) {\n                        // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n                        // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n                        // ignores all `toJSON` methods on these objects unless they are\n                        // defined directly on an instance.\n                        value = value.toJSON(property);\n                      }\n                    }\n                    if (callback) {\n                      // If a replacement function was provided, call it to obtain the value\n                      // for serialization.\n                      value = callback.call(object, property, value);\n                    }\n                    if (value === null) {\n                      return \"null\";\n                    }\n                    className = getClass.call(value);\n                    if (className == booleanClass) {\n                      // Booleans are represented literally.\n                      return \"\" + value;\n                    } else if (className == numberClass) {\n                      // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n                      // `\"null\"`.\n                      return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n                    } else if (className == stringClass) {\n                      // Strings are double-quoted and escaped.\n                      return quote(\"\" + value);\n                    }\n                    // Recursively serialize objects and arrays.\n                    if (typeof value == \"object\") {\n                      // Check for cyclic structures. This is a linear search; performance\n                      // is inversely proportional to the number of unique nested objects.\n                      for (length = stack.length; length--;) {\n                        if (stack[length] === value) {\n                          // Cyclic structures cannot be serialized by `JSON.stringify`.\n                          throw TypeError();\n                        }\n                      }\n                      // Add the object to the stack of traversed objects.\n                      stack.push(value);\n                      results = [];\n                      // Save the current indentation level and indent one additional level.\n                      prefix = indentation;\n                      indentation += whitespace;\n                      if (className == arrayClass) {\n                        // Recursively serialize array elements.\n                        for (index = 0, length = value.length; index < length; index++) {\n                          element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                          results.push(element === undef ? \"null\" : element);\n                        }\n                        result = results.length ? whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : \"[\" + results.join(\",\") + \"]\" : \"[]\";\n                      } else {\n                        // Recursively serialize object members. Members are selected from\n                        // either a user-specified list of property names, or the object\n                        // itself.\n                        forEach(properties || value, function (property) {\n                          var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                          if (element !== undef) {\n                            // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                            // is not the empty string, let `member` {quote(property) + \":\"}\n                            // be the concatenation of `member` and the `space` character.\"\n                            // The \"`space` character\" refers to the literal space\n                            // character, not the `space` {width} argument provided to\n                            // `JSON.stringify`.\n                            results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                          }\n                        });\n                        result = results.length ? whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : \"{\" + results.join(\",\") + \"}\" : \"{}\";\n                      }\n                      // Remove the object from the traversed object stack.\n                      stack.pop();\n                      return result;\n                    }\n                  };\n\n                  // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n                  exports.stringify = function (source, filter, width) {\n                    var whitespace, callback, properties, className;\n                    if (objectTypes[typeof filter] && filter) {\n                      if ((className = getClass.call(filter)) == functionClass) {\n                        callback = filter;\n                      } else if (className == arrayClass) {\n                        // Convert the property names array into a makeshift set.\n                        properties = {};\n                        for (var index = 0, length = filter.length, value; index < length; value = filter[index++], (className = getClass.call(value), className == stringClass || className == numberClass) && (properties[value] = 1));\n                      }\n                    }\n                    if (width) {\n                      if ((className = getClass.call(width)) == numberClass) {\n                        // Convert the `width` to an integer and create a string containing\n                        // `width` number of space characters.\n                        if ((width -= width % 1) > 0) {\n                          for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n                        }\n                      } else if (className == stringClass) {\n                        whitespace = width.length <= 10 ? width : width.slice(0, 10);\n                      }\n                    }\n                    // Opera <= 7.54u2 discards the values associated with empty string keys\n                    // (`\"\"`) only if they are used directly within an object member list\n                    // (e.g., `!(\"\" in { \"\": 1})`).\n                    return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n                  };\n                }\n\n                // Public: Parses a JSON source string.\n                if (!has(\"json-parse\")) {\n                  var fromCharCode = String.fromCharCode;\n\n                  // Internal: A map of escaped control characters and their unescaped\n                  // equivalents.\n                  var Unescapes = {\n                    92: \"\\\\\",\n                    34: '\"',\n                    47: \"/\",\n                    98: \"\\b\",\n                    116: \"\\t\",\n                    110: \"\\n\",\n                    102: \"\\f\",\n                    114: \"\\r\"\n                  };\n\n                  // Internal: Stores the parser state.\n                  var Index, Source;\n\n                  // Internal: Resets the parser state and throws a `SyntaxError`.\n                  var abort = function abort() {\n                    Index = Source = null;\n                    throw SyntaxError();\n                  };\n\n                  // Internal: Returns the next token, or `\"$\"` if the parser has reached\n                  // the end of the source string. A token may be a string, number, `null`\n                  // literal, or Boolean literal.\n                  var lex = function lex() {\n                    var source = Source,\n                        length = source.length,\n                        value,\n                        begin,\n                        position,\n                        isSigned,\n                        charCode;\n                    while (Index < length) {\n                      charCode = source.charCodeAt(Index);\n                      switch (charCode) {\n                        case 9:case 10:case 13:case 32:\n                          // Skip whitespace tokens, including tabs, carriage returns, line\n                          // feeds, and space characters.\n                          Index++;\n                          break;\n                        case 123:case 125:case 91:case 93:case 58:case 44:\n                          // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                          // the current position.\n                          value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                          Index++;\n                          return value;\n                        case 34:\n                          // `\"` delimits a JSON string; advance to the next character and\n                          // begin parsing the string. String tokens are prefixed with the\n                          // sentinel `@` character to distinguish them from punctuators and\n                          // end-of-string tokens.\n                          for (value = \"@\", Index++; Index < length;) {\n                            charCode = source.charCodeAt(Index);\n                            if (charCode < 32) {\n                              // Unescaped ASCII control characters (those with a code unit\n                              // less than the space character) are not permitted.\n                              abort();\n                            } else if (charCode == 92) {\n                              // A reverse solidus (`\\`) marks the beginning of an escaped\n                              // control character (including `\"`, `\\`, and `/`) or Unicode\n                              // escape sequence.\n                              charCode = source.charCodeAt(++Index);\n                              switch (charCode) {\n                                case 92:case 34:case 47:case 98:case 116:case 110:case 102:case 114:\n                                  // Revive escaped control characters.\n                                  value += Unescapes[charCode];\n                                  Index++;\n                                  break;\n                                case 117:\n                                  // `\\u` marks the beginning of a Unicode escape sequence.\n                                  // Advance to the first character and validate the\n                                  // four-digit code point.\n                                  begin = ++Index;\n                                  for (position = Index + 4; Index < position; Index++) {\n                                    charCode = source.charCodeAt(Index);\n                                    // A valid sequence comprises four hexdigits (case-\n                                    // insensitive) that form a single hexadecimal value.\n                                    if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                                      // Invalid Unicode escape sequence.\n                                      abort();\n                                    }\n                                  }\n                                  // Revive the escaped character.\n                                  value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                                  break;\n                                default:\n                                  // Invalid escape sequence.\n                                  abort();\n                              }\n                            } else {\n                              if (charCode == 34) {\n                                // An unescaped double-quote character marks the end of the\n                                // string.\n                                break;\n                              }\n                              charCode = source.charCodeAt(Index);\n                              begin = Index;\n                              // Optimize for the common case where a string is valid.\n                              while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                                charCode = source.charCodeAt(++Index);\n                              }\n                              // Append the string as-is.\n                              value += source.slice(begin, Index);\n                            }\n                          }\n                          if (source.charCodeAt(Index) == 34) {\n                            // Advance to the next character and return the revived string.\n                            Index++;\n                            return value;\n                          }\n                          // Unterminated string.\n                          abort();\n                        default:\n                          // Parse numbers and literals.\n                          begin = Index;\n                          // Advance past the negative sign, if one is specified.\n                          if (charCode == 45) {\n                            isSigned = true;\n                            charCode = source.charCodeAt(++Index);\n                          }\n                          // Parse an integer or floating-point value.\n                          if (charCode >= 48 && charCode <= 57) {\n                            // Leading zeroes are interpreted as octal literals.\n                            if (charCode == 48 && (charCode = source.charCodeAt(Index + 1), charCode >= 48 && charCode <= 57)) {\n                              // Illegal octal literal.\n                              abort();\n                            }\n                            isSigned = false;\n                            // Parse the integer component.\n                            for (; Index < length && (charCode = source.charCodeAt(Index), charCode >= 48 && charCode <= 57); Index++);\n                            // Floats cannot contain a leading decimal point; however, this\n                            // case is already accounted for by the parser.\n                            if (source.charCodeAt(Index) == 46) {\n                              position = ++Index;\n                              // Parse the decimal component.\n                              for (; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++);\n                              if (position == Index) {\n                                // Illegal trailing decimal.\n                                abort();\n                              }\n                              Index = position;\n                            }\n                            // Parse exponents. The `e` denoting the exponent is\n                            // case-insensitive.\n                            charCode = source.charCodeAt(Index);\n                            if (charCode == 101 || charCode == 69) {\n                              charCode = source.charCodeAt(++Index);\n                              // Skip past the sign following the exponent, if one is\n                              // specified.\n                              if (charCode == 43 || charCode == 45) {\n                                Index++;\n                              }\n                              // Parse the exponential component.\n                              for (position = Index; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++);\n                              if (position == Index) {\n                                // Illegal empty exponent.\n                                abort();\n                              }\n                              Index = position;\n                            }\n                            // Coerce the parsed value to a JavaScript number.\n                            return +source.slice(begin, Index);\n                          }\n                          // A negative sign may only precede numbers.\n                          if (isSigned) {\n                            abort();\n                          }\n                          // `true`, `false`, and `null` literals.\n                          if (source.slice(Index, Index + 4) == \"true\") {\n                            Index += 4;\n                            return true;\n                          } else if (source.slice(Index, Index + 5) == \"false\") {\n                            Index += 5;\n                            return false;\n                          } else if (source.slice(Index, Index + 4) == \"null\") {\n                            Index += 4;\n                            return null;\n                          }\n                          // Unrecognized token.\n                          abort();\n                      }\n                    }\n                    // Return the sentinel `$` character if the parser has reached the end\n                    // of the source string.\n                    return \"$\";\n                  };\n\n                  // Internal: Parses a JSON `value` token.\n                  var get = function get(value) {\n                    var results, hasMembers;\n                    if (value == \"$\") {\n                      // Unexpected end of input.\n                      abort();\n                    }\n                    if (typeof value == \"string\") {\n                      if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n                        // Remove the sentinel `@` character.\n                        return value.slice(1);\n                      }\n                      // Parse object and array literals.\n                      if (value == \"[\") {\n                        // Parses a JSON array, returning a new JavaScript array.\n                        results = [];\n                        for (;; hasMembers || (hasMembers = true)) {\n                          value = lex();\n                          // A closing square bracket marks the end of the array literal.\n                          if (value == \"]\") {\n                            break;\n                          }\n                          // If the array literal contains elements, the current token\n                          // should be a comma separating the previous element from the\n                          // next.\n                          if (hasMembers) {\n                            if (value == \",\") {\n                              value = lex();\n                              if (value == \"]\") {\n                                // Unexpected trailing `,` in array literal.\n                                abort();\n                              }\n                            } else {\n                              // A `,` must separate each array element.\n                              abort();\n                            }\n                          }\n                          // Elisions and leading commas are not permitted.\n                          if (value == \",\") {\n                            abort();\n                          }\n                          results.push(get(value));\n                        }\n                        return results;\n                      } else if (value == \"{\") {\n                        // Parses a JSON object, returning a new JavaScript object.\n                        results = {};\n                        for (;; hasMembers || (hasMembers = true)) {\n                          value = lex();\n                          // A closing curly brace marks the end of the object literal.\n                          if (value == \"}\") {\n                            break;\n                          }\n                          // If the object literal contains members, the current token\n                          // should be a comma separator.\n                          if (hasMembers) {\n                            if (value == \",\") {\n                              value = lex();\n                              if (value == \"}\") {\n                                // Unexpected trailing `,` in object literal.\n                                abort();\n                              }\n                            } else {\n                              // A `,` must separate each object member.\n                              abort();\n                            }\n                          }\n                          // Leading commas are not permitted, object property names must be\n                          // double-quoted strings, and a `:` must separate each property\n                          // name and value.\n                          if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                            abort();\n                          }\n                          results[value.slice(1)] = get(lex());\n                        }\n                        return results;\n                      }\n                      // Unexpected token encountered.\n                      abort();\n                    }\n                    return value;\n                  };\n\n                  // Internal: Updates a traversed object member.\n                  var update = function update(source, property, callback) {\n                    var element = walk(source, property, callback);\n                    if (element === undef) {\n                      delete source[property];\n                    } else {\n                      source[property] = element;\n                    }\n                  };\n\n                  // Internal: Recursively traverses a parsed JSON object, invoking the\n                  // `callback` function for each value. This is an implementation of the\n                  // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n                  var walk = function walk(source, property, callback) {\n                    var value = source[property],\n                        length;\n                    if (typeof value == \"object\" && value) {\n                      // `forEach` can't be used to traverse an array in Opera <= 8.54\n                      // because its `Object#hasOwnProperty` implementation returns `false`\n                      // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n                      if (getClass.call(value) == arrayClass) {\n                        for (length = value.length; length--;) {\n                          update(value, length, callback);\n                        }\n                      } else {\n                        forEach(value, function (property) {\n                          update(value, property, callback);\n                        });\n                      }\n                    }\n                    return callback.call(source, property, value);\n                  };\n\n                  // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n                  exports.parse = function (source, callback) {\n                    var result, value;\n                    Index = 0;\n                    Source = \"\" + source;\n                    result = get(lex());\n                    // If a JSON string contains multiple tokens, it is invalid.\n                    if (lex() != \"$\") {\n                      abort();\n                    }\n                    // Reset the parser state.\n                    Index = Source = null;\n                    return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n                  };\n                }\n              }\n\n              exports[\"runInContext\"] = runInContext;\n              return exports;\n            }\n\n            if (freeExports && !isLoader) {\n              // Export for CommonJS environments.\n              runInContext(root, freeExports);\n            } else {\n              // Export for web browsers and JavaScript engines.\n              var nativeJSON = root.JSON,\n                  previousJSON = root[\"JSON3\"],\n                  isRestored = false;\n\n              var JSON3 = runInContext(root, root[\"JSON3\"] = {\n                // Public: Restores the original value of the global `JSON` object and\n                // returns a reference to the `JSON3` object.\n                \"noConflict\": function noConflict() {\n                  if (!isRestored) {\n                    isRestored = true;\n                    root.JSON = nativeJSON;\n                    root[\"JSON3\"] = previousJSON;\n                    nativeJSON = previousJSON = null;\n                  }\n                  return JSON3;\n                }\n              });\n\n              root.JSON = {\n                \"parse\": JSON3.parse,\n                \"stringify\": JSON3.stringify\n              };\n            }\n\n            // Export for asynchronous module loaders.\n            if (isLoader) {\n              define(function () {\n                return JSON3;\n              });\n            }\n          }).call(this);\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 51: [function (_dereq_, module, exports) {\n        module.exports = toArray;\n\n        function toArray(list, index) {\n          var array = [];\n\n          index = index || 0;\n\n          for (var i = index || 0; i < list.length; i++) {\n            array[i - index] = list[i];\n          }\n\n          return array;\n        }\n      }, {}] }, {}, [31])(31);\n  });\n}\n\ncc._RFpop();\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],\"tankScript\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, '64207bwT5lKDa3HBoPU6Hz0', 'tankScript');\n// Script/Gamescript/tankScript.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        lbname: {\n            type: cc.Label,\n            \"default\": null\n        },\n        bodytank: {\n            type: cc.Node,\n            \"default\": null\n        },\n        guntank: {\n            type: cc.Node,\n            \"default\": null\n        },\n\n        lbscore: {\n            type: cc.Label,\n            \"default\": null\n        }\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.lbname.string = \"\";\n        this.dirMv = 0;\n        this.speedMove = 0;\n        this.nextFrameMove = 0;\n\n        this.ammo = 0;\n        this.hp = 0;\n        this.level = 0;\n\n        this.count_updateRun = 0;\n\n        this.needUpdateName = true;\n\n        //var sp_body=this.node.children[0];\n        //var sprite_body=sp_body.getComponent(\"cc.Sprite\");\n        //sprite_body.spriteFrame=this.spAllCharacter.getSpriteFrame(\"TankColor-t5_b\");\n    },\n    //[{\"x\":\"-61.50\",\"y\":\"-52.00\",\"id\":\"48\",\"r\":\"0.00\",\"level\":\"1\",\"score\":\"0\",\"hp\":\"80\",\"ammo\":\"140\",\"sp\":\"50\",\"gR\":\"180\"}],\"e\":[]}\n\n    updateFrame: function updateFrame(obj_info) {\n        var x_p = Number(obj_info.x);\n        var y_p = Number(obj_info.y);\n        this.node.isActiveSC = true;\n        this.node.setPosition(cc.p(x_p, y_p));\n\n        this.bodytank.rotation = Number(obj_info.r);\n\n        var gunR = Number(obj_info.gR);\n        if (gunR > 180) {\n            gunR = gunR - 360;\n        }\n        gunR = -gunR;\n        //console.log(\"obj_info.dirMV: %s\",obj_info.dir);\n        this.dirMv = parseInt(obj_info.dir);\n        this.speedMove = parseInt(obj_info.sp);\n\n        this.nextFrameMove = 0;\n\n        this.Opos = cc.p(x_p, y_p);\n        this.min_x = x_p - 12;\n        this.max_x = x_p + 12;\n        this.min_y = y_p - 12;\n        this.max_y = y_p + 12;\n\n        //this.score=obj_info.score;\n        //this.ammo=parseInt(obj_info.ammo);\n        //this.hp=parseInt(obj_info.hp);\n\n        var tmpLevel = parseInt(obj_info.level);\n        if (tmpLevel != this.level) {\n            this.level = tmpLevel;\n            var parrentNode = this.node.parent;\n            var mapScript = parrentNode.getComponent(\"GameMap\");\n\n            var sp_body = this.node.children[0];\n            var sprite_body = sp_body.getComponent(\"cc.Sprite\");\n            sprite_body.spriteFrame = mapScript.tankAtlas.getSpriteFrame(\"TankColor-t\" + this.colorID + \"_b\");\n            this.count_updateRun++;\n            var tml_lv_gun = 1;\n            if (this.level >= 10 && this.level < 35) {\n                tml_lv_gun = 2;\n            } else if (this.level >= 35 && this.level < 79) {\n                tml_lv_gun = 3;\n            } else if (this.level >= 79) {\n                tml_lv_gun = 4;\n            }\n            if (this.levelGun != tml_lv_gun) {\n                this.levelGun = tml_lv_gun;\n                var sp_gun = this.node.children[2];\n                var sprite_gun = sp_gun.getComponent(\"cc.Sprite\");\n                this.count_updateRun++;\n                sprite_gun.spriteFrame = mapScript.tankAtlas.getSpriteFrame(\"TankColor-t\" + this.colorID + \"_l\" + this.levelGun);\n            }\n        }\n\n        var tmp_hp = parseInt(obj_info.hp);\n        if (tmp_hp != this.hp) {\n            this.hp = tmp_hp;\n            var nodepr = this.node.children[1];\n            var nodeprsc = nodepr.children[0];\n            var maxHP = 80 + (this.level - 1) * 15;\n            var Xsc = this.hp / maxHP;\n            if (Xsc > 1) {\n                Xsc = 1;\n            } else if (Xsc < 0) {\n                Xsc = 0;\n            }\n            nodeprsc.scaleX = Xsc;\n            this.count_updateRun++;\n        }\n\n        var name = obj_info.name;\n        if (name.length >= 1 && this.needUpdateName) {\n            this.needUpdateName = false;\n            var nodename = this.node.children[3];\n            var lbname = nodename.getComponent(\"cc.Label\");\n            lbname.string = name;\n            this.count_updateRun++;\n        }\n\n        var nodescore = this.node.children[4];\n        var lbscore = nodescore.getComponent(\"cc.Label\");\n        lbscore.string = \"add:\" + this.count_updateRun;\n\n        this.guntank.rotation = gunR;\n        //this.lbname.string=\"GuestXXXX\";\n    }\n\n});\n\ncc._RFpop();\n},{}]},{},[\"EffectScript\",\"PanelUserInfo\",\"TestConnect\",\"socket.io\",\"GameMap\",\"tankScript\",\"itemScript\",\"TestEffect\",\"PadController\",\"obsScript\",\"bulletScript\",\"TestParticleSystemPos\",\"GamePlayScript\",\"explosionScript\",\"Utils\",\"HomeScript\"])\n\n","\"use strict\";\ncc._RFpush(module, '5b781n3CftGaqia/EnKu/Bf', 'GameMap');\n// Script/Gamescript/GameMap.js\n\nvar Utils = require('../LIB/Utils');\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        t_prefab: {\n            type: cc.Prefab,\n            \"default\": null\n        },\n        obs_prefab: {\n            type: cc.Prefab,\n            \"default\": null\n        },\n        bullet_prefab: {\n            type: cc.Prefab,\n            \"default\": null\n        },\n        item_ammo_prefab: {\n            type: cc.Prefab,\n            \"default\": null\n        },\n        item_health_prefab: {\n            type: cc.Prefab,\n            \"default\": null\n        },\n\n        tankAtlas: cc.SpriteAtlas,\n\n        eff_hit_wall: cc.Prefab,\n        eff_hit_tank: cc.Prefab,\n        eff_gun_fire: cc.Prefab,\n        eff_tank_explosion: cc.Prefab\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        // khai bao dang dictionary key-value, mục đích là chỉ chứa các script điều khiển việc hiển thị các đối tượng trong node mapgame\n        this.dictObs = {}; // obj_type=1;\n        this.dictTanks = {}; // obj_type=2;\n        this.dictBullets = {}; // obj_type=3;\n        this.dictItems = {}; // obj_type=3;\n\n        this.MYPLAYER = null;\n        this.t_add_tank = 0;\n        this.t_add_bullet = 0;\n        this.t_add_obs = 0;\n        this.t_add_items = 0;\n        this.t_add_explosion = 0;\n\n        this.isOver = false;\n        this.estimateMoveTank();\n    },\n\n    /**\n     * trong hàm updateFrameStep thì đầu tiên gọi điến hàm beginUpdateFrame, kết thúc gọi đến hàm endUpdateFrame\n     * Mục đích là để kiểm tra những đối tượng nào mà trên server không còn trả về nữa thì destroy nó đi như là \n     *  (ra ngoài view màn hình(tank,items,obs), bị nổ(tank) ,hoặc hết time-life (items,bullet) )\n     * \n     * \n     * \n     * */\n\n    updateFrameStep: function updateFrameStep(msgObj) {\n        //----------TANK ----\n        this.beginUpdate(this.dictTanks);\n        var arr_tank = msgObj.t;\n        this.managerTank(arr_tank);\n        this.finishUpdate(this.dictTanks);\n\n        this.updateMapPosition();\n\n        //----------OBS ----\n\n        var arr_obs = msgObj.o;\n        if (!(typeof arr_obs === \"undefined\")) {\n            this.beginUpdate(this.dictObs);\n            this.managerObs(arr_obs);\n            this.finishUpdate(this.dictObs);\n        }\n\n        //----------BULLET ----\n        this.beginUpdate(this.dictBullets);\n        var arr_bullet = msgObj.b;\n        this.managerBullet(arr_bullet);\n        this.finishUpdate(this.dictBullets);\n\n        //----------ITEM ----\n\n        var arr_items = msgObj.i;\n        if (!(typeof arr_items === \"undefined\")) {\n            this.beginUpdate(this.dictItems);\n            this.managerItems(arr_items);\n            this.finishUpdate(this.dictItems);\n        }\n\n        //----------Explorsion ----\n        var arr_ex = msgObj.e;\n        this.managerExplosion(arr_ex);\n\n        this.loadMSGTest();\n    },\n\n    beginUpdate: function beginUpdate(dictUpdate) {\n        for (var ikey in dictUpdate) {\n            var tmp_script = dictUpdate[ikey];\n            tmp_script.node.isActiveSC = false;\n        }\n    },\n\n    finishUpdate: function finishUpdate(dictUpdate) {\n        var arrDelete = [];\n        for (var ikey in dictUpdate) {\n            var tmp_script = dictUpdate[ikey];\n            if (tmp_script.node.isActiveSC) {\n                continue;\n            }\n            if (cc.isValid(tmp_script.node)) {\n                arrDelete.push(tmp_script.node);\n            }\n        }\n\n        for (var deleteid = 0, maxlengt = arrDelete.length; deleteid < maxlengt; deleteid++) {\n            var node_tmp = arrDelete[deleteid];\n            var type_of_dict = node_tmp.obj_type;\n\n            if (type_of_dict == 1) {\n                delete this.dictObs[node_tmp.gid];\n            }\n            if (type_of_dict == 2) {\n                delete this.dictTanks[node_tmp.gid];\n            }\n            if (type_of_dict == 3) {\n                var script_bullet_delete = this.dictBullets[node_tmp.gid];\n                script_bullet_delete.clearBulletEffect();\n                delete this.dictBullets[node_tmp.gid];\n            }\n            if (type_of_dict == 4) {\n                var script_item_delete = this.dictItems[node_tmp.gid];\n                script_item_delete.beginClean();\n                delete this.dictItems[node_tmp.gid];\n            }\n            node_tmp.removeFromParent(true);\n            //node_tmp.destroy();\n        }\n    },\n\n    loadMSGTest: function loadMSGTest() {\n        // doan nay chi de test object meomory\n        this.c_tank_script = Object.keys(this.dictTanks).length;\n        this.c_obs_script = Object.keys(this.dictObs).length;\n        this.c_item_script = Object.keys(this.dictItems).length;\n        this.c_bullet_script = Object.keys(this.dictBullets).length;\n        var tong = this.c_tank_script + this.c_obs_script + this.c_item_script + this.c_bullet_script;\n        this.c_all_node = this.node.children.length - 1; // tru di 1 lan tiledMapBG\n        if (tong == this.c_all_node) {\n            this.msglog = \"count all object: \" + tong;\n        } else {\n            this.msglog = \"------>error: \" + tong + \"|\" + this.c_all_node + \"   info \" + \"t=\" + this.c_tank_script + \" obs=\" + this.c_obs_script + \" item=\" + this.c_item_script + \" bullet=\" + this.c_bullet_script;\n        }\n    },\n\n    managerExplosion: function managerExplosion(arr_Ex) {\n        for (var i_e = 0, i_e_m = arr_Ex.length; i_e < i_e_m; i_e++) {\n            var e_info = Utils.decodePackExplosion(arr_Ex[i_e]);\n            var status = e_info.stt;\n            status = status - 0;\n\n            var x_p = Number(e_info.x);\n            var y_p = Number(e_info.y);\n\n            this.t_add_explosion++;\n            if (status == 1) {\n                //dan ban trung tuong\n                var tmpnode = cc.instantiate(this.eff_hit_wall);\n\n                tmpnode.setPosition(cc.p(x_p, y_p));\n                tmpnode.setLocalZOrder(8);\n                var scriptEffect = tmpnode.getComponent(\"EffectScript\");\n\n                this.node.addChild(tmpnode);\n                scriptEffect.setFixedPosition();\n            }\n            if (status == 2) {//dan va cham xe tank\n\n            }\n            if (status >= 3 && status <= 6) {\n                //dan ban ra tu nong sung\n                var tmp_effect_gun = cc.instantiate(this.eff_gun_fire);\n                tmp_effect_gun.setPosition(cc.p(78, 2));\n                tmp_effect_gun.scale = 2;\n                tmp_effect_gun.setLocalZOrder(-3); // khong hieu sao -1,-2 lai khong duoc , bo tay\n                var scriptnode = this.dictTanks[e_info.tid];\n                if (typeof scriptnode === \"undefined\") {\n                    continue;\n                }\n                if (typeof scriptnode.node === \"undefined\") {\n                    continue;\n                }\n                var guntank = scriptnode.guntank;\n                scriptnode.guntank.addChild(tmp_effect_gun);\n            }\n            if (status === 0) {//xe tank no\n\n            }\n        }\n    },\n\n    managerTank: function managerTank(arr_tank) {\n        for (var i_t = 0, i_t_m = arr_tank.length; i_t < i_t_m; i_t++) {\n            var obj_info = Utils.decodePackTank(arr_tank[i_t]);\n            var tank_script = this.dictTanks[obj_info.id];\n            var tankNumberID = parseInt(obj_info.id);\n            //Utils.log(\"--->tank_tmp:\"+tank_tmp);\n            if (typeof tank_script === \"undefined\") {\n                // check bang null khong co tac dung :(\n                //Utils.log(\"add new tank game\");\n                var tank_node = cc.instantiate(this.t_prefab);\n                if (this.TANKID === tankNumberID) {\n                    this.MYPLAYER = tank_node;\n                }\n                var colorID = Math.abs(tankNumberID % 10);\n                if (colorID < 0) {\n                    colorID = 6;\n                } else if (colorID > 9) {\n                    colorID = 7;\n                }\n\n                tank_node.obj_type = 2;\n                tank_node.gid = obj_info.id;\n                tank_node.scale = 0.25;\n                tank_node.setLocalZOrder(5);\n\n                tank_script = tank_node.getComponent(\"tankScript\");\n                tank_script.gid = obj_info.id;\n                tank_script.colorID = colorID;\n                tank_script.level = 0;\n                tank_script.levelGun = 0;\n\n                this.node.addChild(tank_node);\n                this.dictTanks[tank_script.gid] = tank_script;\n\n                this.t_add_tank++;\n            }\n            tank_script.updateFrame(obj_info);\n            if (this.TANKID === tankNumberID) {\n                this.MYPLAYER.activeInfo = obj_info;\n            }\n        }\n        if (!this.MYPLAYER.isActiveSC) {\n            this.isOver = true;\n        }\n    },\n\n    managerObs: function managerObs(arr_obs) {\n        for (var i_o = 0, j_o_m = arr_obs.length; i_o < j_o_m; i_o++) {\n            var tmp_info = Utils.decodePackObs(arr_obs[i_o]);\n\n            var obs_script = this.dictObs[tmp_info.id];\n            if (typeof obs_script === \"undefined\") {\n                // Utils.log(\"Add new Obstacles\");\n                var tmp_Obs = cc.instantiate(this.obs_prefab);\n                tmp_Obs.obj_type = 1;\n                tmp_Obs.gid = tmp_info.id;\n                tmp_Obs.setLocalZOrder(2);\n\n                obs_script = tmp_Obs.getComponent(\"obsScript\");\n                obs_script.gid = tmp_info.id;\n                obs_script.initDisplay(tmp_info);\n                this.node.addChild(tmp_Obs);\n\n                this.dictObs[obs_script.gid] = obs_script;\n\n                this.t_add_obs++;\n            }\n            obs_script.node.isActiveSC = true;\n        }\n    },\n\n    managerBullet: function managerBullet(arr_bullet) {\n        for (var i_b = 0, j_b_m = arr_bullet.length; i_b < j_b_m; i_b++) {\n            var tmp_info = Utils.decodePackBullet(arr_bullet[i_b]);\n            var bullet_script = this.dictBullets[tmp_info.id];\n            if (typeof bullet_script === \"undefined\") {\n                // Utils.log(\"Add new Bullet\");\n                this.t_add_bullet++;\n                var tmp_Bullet = cc.instantiate(this.bullet_prefab);\n                tmp_Bullet.obj_type = 3;\n                tmp_Bullet.gid = tmp_info.id;\n                tmp_Bullet.setLocalZOrder(1);\n\n                bullet_script = tmp_Bullet.getComponent(\"bulletScript\");\n                bullet_script.gid = tmp_info.id;\n\n                this.node.addChild(tmp_Bullet);\n\n                this.dictBullets[bullet_script.gid] = bullet_script;\n            }\n            bullet_script.updateFrame(tmp_info);\n        }\n    },\n\n    managerItems: function managerItems(arr_items) {\n        for (var i_i = 0, j_i_m = arr_items.length; i_i < j_i_m; i_i++) {\n            var tmp_info = Utils.decodePackItem(arr_items[i_i]);\n            var item_script = this.dictItems[tmp_info.id];\n            if (typeof item_script === \"undefined\") {\n                //Utils.log(\"Add new item\");\n                var tmp_Item;\n                if (tmp_info.type == 1) {\n                    tmp_Item = cc.instantiate(this.item_ammo_prefab);\n                } else {\n                    tmp_Item = cc.instantiate(this.item_health_prefab);\n                }\n                tmp_Item.obj_type = 4;\n                tmp_Item.gid = tmp_info.id;\n                tmp_Item.setLocalZOrder(1);\n\n                item_script = tmp_Item.getComponent(\"itemScript\");\n                item_script.gid = tmp_info.id;\n                item_script.initDisplay(tmp_info);\n                this.node.addChild(tmp_Item);\n\n                this.dictItems[item_script.gid] = item_script;\n\n                this.t_add_items++;\n            }\n            item_script.node.isActiveSC = true;\n        }\n    },\n\n    updateMapPosition: function updateMapPosition() {\n        if (this.isOver) {\n            this.otherMSG = \"this.isOver\";\n            return;\n        }\n        if (this.MYPLAYER === null) {\n            this.otherMSG = \"MYPLAYER===null\";\n            return;\n        }\n        if (this.TANKID == this.MYPLAYER.gid) {\n            var x_pos = -this.MYPLAYER.x;\n            var y_pos = -this.MYPLAYER.y;\n            //this.node.setPosition(cc.p(x_pos,y_pos));\n            this.node.x = x_pos * 2; // nhan 2 boi vi map game scale =2\n            this.node.y = y_pos * 2;\n            this.otherMSG = \"\";\n        } else {\n            this.otherMSG = \"this.TANKID=\" + this.TANKID + \" | MYPLAYER.gid: \" + MYPLAYER.gid;\n        }\n    },\n\n    estimateMoveTank: function estimateMoveTank() {\n        /**\n        *server mac dinh luon push ve la 80/1000 \n        * dt_move=speed*0.08\n        * \n        */\n        /**\n         * GIẢI THÍCH :\n         * Hàm này chỉ là làm mượt chuyển động của xe tank và giảm bớt việc ở backend cứ 40/1000s là 25 lần 1s thì giờ\n         * chỉ cần là 1s push về 12 lần thôi , nếu comment lại hàm này và không chạy  cũng không sao như trông nó rất giật game\n         *\n         * 1.Cách cũ là livestream vị trí của các Object trong game\n         *      Tức là ví dụ ở frame1 xe tank ở vị trí 1, sau đó ở frame2 lại set vị trí cho xe tank ở vị trí P2..\n         *      Cách này realtime và luôn nhưng nhược điểm là cần từ backend push data về liên tục\n         * 2.Cách mới là tính toán đường đi tương đối của xe tank và cứ 0.08s lại đồng bộ với server 1 lần\n         *      Ví dụ ở frame1 xe tank đang ở vị trí là A1 và hướng đi của tank là đến vị trí A2 ở frame sau vậy mình tạo\n         *      ra 1 chuyển động cứ 0.001s lại cho xe tank nhích 1 đoạn tới vị trí của A2( vận tốc đã biết rồi) , và đên\n         *      frame2 bất kể xe tank đã nhích đến hay đi quá vị trí so với frame2 trả về thì cũng set position cho tank\n         *      ở vị trí frame2 trả về anh xem ở hàm managerTank\n         *\n         *\n         *      -Cách làm tương tự như vậy đối với viên đạn ,tuy nhiên với viên đạn sẽ có chút lỗi xảy ra là giữa đường\n         *      viên đạn va vào chướng ngại vật hoặc va vào xe tank mà client vẫn chưa được cập nhật speed đạn là 400\n         *      và time là 0.08 vậy sẽ có trường hợp đạn ở client vẫn cứ đi thẳng sai số với server là 400*0.08=32 px\n         *      cái này client thấy rất rõ ràng\n         *\n         *      -Một lỗi nữa là trên trình duyệt web không hiểu sao lại lag , nếu không được thì backend chắc phải if ,else code\n         *      để web vẫn push về là 0.04s 1 lần còn mobile là 0.08 và mobile sẽ giảm tải được dữ liệu đi về chỉ có 1kb/s\n         *\n               -còn một vấn đề ở backend là vì mỗi frame là mình check vị trí của viên đạn so với chướng ngại vật là theo\n         *      mỗi frame , trước ít ảy ra sai số vì mỗi frame cách nhau 0.04s và đạn đi có 16px x, giờ time mỗi frame cách\n         *      nhau lên đến 0.08 thì sai số tăng lên theo , nhưng cái này mình sửa được ở server và làm sau\n         *\n         *\n         *\n         */\n        //      chú ý là nếu timeout quá lớn thì return ngay hoặc di chuyển quá vị trí tính toán thì stop lại\n        //      1 : là vẫn nên làm chức năng tính toán va chạm ở client đối với đạn và tank\n        var self = this;\n        this.countStep = 0;\n        var TIME_FRAME_SERVER = 0.08;\n        this.schedule(function (dt) {\n            var checkCollision = false;\n            if (self.countStep == 0) {\n                checkCollision = true;\n            }\n            //console.log(\"CCCCCC----------------------AAAA--------------------AAA\");\n            for (var keyobj in self.dictTanks) {\n                var tankscript = self.dictTanks[keyobj];\n                //console.log(\"tankscript.dirMv: \"+tankscript.dirMv);\n                var maxMove = tankscript.speedMove * TIME_FRAME_SERVER;\n                if (tankscript.nextFrameMove >= maxMove) {\n                    continue;\n                }\n\n                var dt_move = tankscript.speedMove * dt;\n                tankscript.nextFrameMove = tankscript.nextFrameMove + dt_move;\n                var tmp_tank = tankscript.node;\n                if (tankscript.dirMv > 0 && tankscript.dirMv < 5) {\n                    if (tankscript.dirMv == 1) {\n                        tmp_tank.x = tmp_tank.x + dt_move;\n                    } else if (tankscript.dirMv == 2) {\n                        tmp_tank.y = tmp_tank.y + dt_move;\n                    } else if (tankscript.dirMv == 3) {\n                        tmp_tank.x = tmp_tank.x - dt_move;\n                    } else if (tankscript.dirMv == 4) {\n                        tmp_tank.y = tmp_tank.y - dt_move;\n                    } else {\n                        //console.log(\"AAAAAAA----------------------AAAA--------------------AAA\");\n                    }\n                }\n            }\n\n            self.updateMapPosition();\n\n            for (var key_b in self.dictBullets) {\n                var bullet_script = self.dictBullets[key_b];\n                var dtMv = 400 * dt;\n                var maxMove = 400 * TIME_FRAME_SERVER;\n                if (bullet_script.nextFrameMove >= maxMove) {\n                    return;\n                }\n\n                bullet_script.nextFrameMove = bullet_script.nextFrameMove + dtMv;\n                var convert_angle = bullet_script.angleMove * 3.14592 / 180;\n                var tmpPos = cc.p(bullet_script.node.x + dtMv * Math.cos(convert_angle), bullet_script.node.y + dtMv * Math.sin(convert_angle));\n\n                if (false) {\n                    // neu co va cham xay ra thi , bullet co opacity=0 va limit position\n                    if (this.checkCollisionWithObstacble(tmpPos)) {\n                        bullet_script.node.opacity = 0;\n                    }\n                    if (this.checkCollisionWithTank(tmpPos)) {\n                        bullet_script.node.opacity = 0;\n                    }\n                }\n\n                bullet_script.node.x = tmpPos.x;\n                bullet_script.node.y = tmpPos.y;\n                //bullet_script.updateEffectPosition();\n            }\n\n            self.countStep = self.countStep + 1;\n            if (self.countStep >= 4) {\n                self.countStep = 0;\n            }\n        }, 0.001);\n    },\n    onDisable: function onDisable() {\n        this.unscheduleAllCallbacks();\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n\n    checkCollisionWithObstacble: function checkCollisionWithObstacble(obj_b) {\n        var isC = false;\n        for (var keyobj in this.dictObs) {\n            var obs_sc = this.dictObs[keyobj];\n            if (obj_b.x > obs_sc.min_x && obj_b.x < obs_sc.max_x && obj_b.y < obs_sc.max_y && obj_b.y > obs_sc.min_y) {\n                isC = true;\n                break;\n            }\n        }\n        if (obj_b.x > 1475 || obj_b.x < -1475 || obj_b.y > 975 || obj_b.y < -975) {\n            isC = true;\n        }\n\n        return isC;\n    },\n    checkCollisionWithTank: function checkCollisionWithTank(obj_b) {\n        var isC = false;\n        for (var keyobj in this.dictTanks) {\n            var obs_sc = this.dictTanks[keyobj];\n            if (obj_b.x > obs_sc.min_x && obj_b.x < obs_sc.max_x && obj_b.y < obs_sc.max_y && obj_b.y > obs_sc.min_y) {\n                isC = true;\n                break;\n            }\n        }\n        return isC;\n    }\n});\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, 'de6b5n59epGzaVpgGIRcJVi', 'GamePlayScript');\n// Script/Gamescript/GamePlayScript.js\n\n\nvar Utils = require('../LIB/Utils');\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        hub_prefab: {\n            type: cc.Prefab,\n            \"default\": null\n        },\n        lbStatus: {\n            type: cc.Label,\n            \"default\": null\n        },\n        nodecontro: cc.Node,\n        panelInfo: cc.Node,\n        gameMap: {\n            type: cc.Node,\n            \"default\": null\n        },\n        tinyPlayer: cc.Node,\n        lbscore: cc.Label,\n        testnodxx: {\n            type: cc.Prefab,\n            \"default\": null\n        }\n    },\n    actionBackHome: function actionBackHome() {\n        this.socket.disconnect();\n        cc.director.loadScene(\"HomeScene\");\n    },\n\n    ListenNativeHidden: function ListenNativeHidden() {\n        //game_on_hide\n        if (cc.sys.isNative) {\n            var self = this;\n            this.lstnr = cc.EventListenerCustom.create(\"game_on_hide\", function () {\n                self.socket.disconnect();\n                cc.director.loadScene(\"HomeScene\");\n            });\n            cc.eventManager.addListener(this.lstnr, this);\n        }\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        /** \n         * Cơ bản trong Engine cocos: cấp cao nhất và chứa tất cả các đối tượng trong game là scene, trong scene chứa các child như là Canvas, Node, Sprite ,Label,button.... etc \n         * các child này sẽ có các thuộc tính cơ bản từ Node như position,scale,rotation,Anchor point ...\n         * Lớp Node là lớp base chứa các đối tượng ,Sprite,Label,Button... đều là kế thừa từ Node và có các thuộc tính của node, ngoài ra với mỗi đối tượng có thêm thuộc tính riêng của mình\n         *  -Sprite là đối tượng được dùng để thiển thị 1 bức ảnh cơ chế để load 1 bức ảnh image_file->texture->spriteframe----->Sprite \n         *          trong đó Sprite chỉ hiển thị spriteFrame, ví dụ mình có thể tạo 1 Sprite hiển thị trên màn hình là 1 ảnh hình tròn màu đỏ, khi touch vào thì load 1 spriteFrame màu xanh \n         *          ,release thì load lại spriteFrame màu đỏ \n         * \n         * Bất cứ đối tượng UI nào trong game đều có thể tạo 1 script đề điều khiển đối tượng đó, ví dụ có 1 đối tượng là xe tank thì trong xe tank có thể tạo 1 hoặc nhiều script để điều khiển \n         * xe tank, tuy nhiên tạo nhiều script sẽ dễ dẫn đến xung đột khó bắt lỗi \n         *     từ đối tượng UI muốn gọi ra script của xe tank thì gọi bằng cách \n         *          var scriptObj=UI_Object.getComponent(\"ScriptName\");--> bở vì 1 node có thể chứa nhiều script nên phải gọi thế này\n         *     ngược lại từ 1 script muốn gọi lại đối tượng UI_Object thì chỉ cần gọi \n         *          var ui_obj=script_obj.node;---> một đối tượng script chỉ có thể điều khiển duy nhất 1 node \n         *     ở dòng code trên ui_obj có thể là Label, Button, Sprite... tuy nhiên thì class Node là cha và đại diện chung cho tất cả các đối tượng trên \n         * */\n\n        /**\n         *  Hàm Onload được gọi đầu tiên trong game xem thêm ở url :http://cocos2d-x.org/docs/api-ref/creator/v1.1.2/classes/TiledLayer.html#method_onLoad\n         * \n         * \n         * */\n        if (cc.sys.isNative) {\n            this.ListenNativeHidden();\n        }\n\n        var script_controller = this.nodecontro.getComponent(\"PadController\");\n        script_controller.mainscript = this;\n\n        this.mapScript = this.gameMap.getComponent(\"GameMap\"); // lấy ra script của đối tượng gamemap\n\n        this.panelInfoScript = this.panelInfo.getComponent(\"PanelUserInfo\");\n\n        this.actionListenKeyPress(); //sử dụng cho việc nhấn phím để di chuyển xe tank web version\n        this.addTouchListenEvent(); // sử dụng cho việc touch mobile version\n\n        this.timelog = 0;\n        this.actionLoadGameBegin(); // connect đến server\n\n        //Utils.lastscore=103;\n        this.AdsManager();\n    },\n    AdsManager: function AdsManager() {\n        if (cc.sys.os == cc.sys.OS_IOS) {\n            jsb.reflection.callStaticMethod(\"BridgeIOS\", \"HiddenAdsBanerWithAnimation\");\n        } else if (cc.sys.os == cc.sys.OS_ANDROID) {} else {// phien ban web\n\n        }\n    },\n\n    //called every frame, uncomment this function to activate update callback\n    update: function update(dt) {\n        this.timelog = this.timelog + dt;\n        if (this.timelog > 0.3) {\n            this.timelog = 0;\n            var logscreen = \"ID:\" + this.mapScript.TANKID + \" Tank:\" + this.mapScript.t_add_tank + \"  Obs:\" + this.mapScript.t_add_obs + \"  Bullet:\" + this.mapScript.t_add_bullet + \"  item:\" + this.mapScript.t_add_items;\n            logscreen = logscreen + \" exp:\" + this.mapScript.t_add_explosion;\n            logscreen = logscreen + \"\\n\" + this.mapScript.msglog + \"\\n\" + this.mapScript.otherMSG;\n            this.lbStatus.string = logscreen;\n        }\n    },\n\n    onDisable: function onDisable() {\n        var script_controller = this.nodecontro.getComponent(\"PadController\");\n        script_controller.mainscript = null;\n        this.panelInfoScript = null;\n        Utils.log(\"Game player is Unload\");\n        cc.eventManager.removeListener(this.touchListen);\n        cc.eventManager.removeListener(this.keyEventListen);\n        if (cc.sys.isNative) {\n            cc.eventManager.removeListener(this.lstnr);\n        }\n\n        // cc.eventManager.removeAllListeners();\n    },\n\n    updateMoveController: function updateMoveController(dir_move) {\n        cc.log(\"dir_move:%s\", dir_move);\n        var numberint = parseInt(dir_move);\n        if (numberint >= 1 && numberint <= 4) {\n            this.socket.emit(\"changeDir\", numberint);\n        }\n    },\n\n    addTouchListenEvent: function addTouchListenEvent() {\n\n        this.touchListen = cc.eventManager.addListener({ event: cc.EventListener.TOUCH_ONE_BY_ONE, swallowTouches: true,\n            onTouchBegan: (function (touch, event) {\n                //cc.log(\"-----------asdasdasdasdkhkasjdbkajsdsakjdhaskdhaskjdhakjsdhask------------\");\n\n                //this.isFire=true;\n                //this.beginPos = this.node.convertToNodeSpace(touch.getLocation());\n\n                var pos = this.node.convertToNodeSpace(touch.getLocation());\n                pos.x = pos.x - cc.winSize.width / 2;\n                pos.y = pos.y - cc.winSize.height / 2;\n                var vfire = cc.pNormalize(cc.v2(pos.x, pos.y));\n                var angle = cc.pToAngle(vfire);\n                angle = angle * 180 / 3.14;\n                if (angle < 0) {\n                    angle = 360 + angle;\n                }\n                if (angle > 360) {\n                    // se khong bao gio xay ra truong hop nay vi cocos2d-js luon tra ve 1 goc tu -180,180\n                    angle = angle - 360;\n                }\n                //this.lbStatus.string=\"GOC false AAA=\"+angle;\n                this.socket.emit(\"fireTarget\", angle);\n\n                return true;\n            }).bind(this)\n\n        }, this.node);\n    },\n\n    actionListenKeyPress: function actionListenKeyPress() {\n        var self = this;\n        //add keyboard input listener to jump, turnLeft and turnRight\n        this.keyEventListen = cc.eventManager.addListener({\n            event: cc.EventListener.KEYBOARD,\n            // set a flag when key pressed\n            onKeyPressed: function onKeyPressed(keyCode, event) {\n                var movestt = 0;\n                switch (keyCode) {\n                    case cc.KEY.d:\n                        movestt = 1;\n                        break;\n                    case cc.KEY.w:\n                        movestt = 2;\n                        break;\n                    case cc.KEY.a:\n                        movestt = 3;\n                        break;\n                    case cc.KEY.s:\n                        movestt = 4;\n                        break;\n                }\n                // if(this.last_movestt==movestt){\n                //     return;\n                // }\n                this.last_movestt = movestt;\n                if (movestt > 0 && movestt < 5) {\n                    self.socket.emit(\"changeDir\", movestt);\n                }\n            }\n        }, self.node);\n    },\n\n    actionLoadGameBegin: function actionLoadGameBegin() {\n\n        this.hub = cc.instantiate(this.hub_prefab);\n        this.node.addChild(this.hub);\n\n        var self = this;\n        require('socket.io');\n        var urlconnect = \"192.168.1.41:2020\";\n        var config = {\n            'forceNew': true,\n            'reconnection': false,\n            'reconnectionDelay': 200,\n            'reconnectionDelayMax': 1000,\n            'reconnectionAttempts': 1\n        };\n        this.socket = io.connect(urlconnect, config); // phiên bản js này hỗ trợ trực tiếp ipv6, ipv4\n        console.log(\"url connect: %s\", urlconnect);\n        this.socket.on('connect', function () {\n            Utils.log(\"ket noi thanh cong\");\n            self.hub.destroy();\n            self.hub = null;\n            var str_info = Utils.loadUserInfo();\n            self.socket.emit(\"MyInfo\", str_info);\n        });\n\n        this.socket.on('RequestValidate', function (message) {\n            var msgReceive = message;\n            if (typeof message == \"string\") {\n                msgReceive = JSON.parse(message);\n            }\n            self.mapScript.TANKID = parseInt(msgReceive.id);\n            var keydecode = Utils.deCode(msgReceive.key);\n            self.socket.emit(\"MyValidate\", keydecode);\n            ///cham mau trang nhap nhay lien tuc\n            var actionRP = cc.repeatForever(cc.blink(2, 3));\n            self.tinyPlayer.stopAllActions();\n            self.tinyPlayer.runAction(actionRP);\n        });\n        this.socket.on('UpdatePosition', function (message) {\n            var msgReceive = message;\n            if (typeof message == \"string\") {\n                msgReceive = JSON.parse(message);\n            }\n            self.mapScript.updateFrameStep(msgReceive);\n            self.updateTinyMapGame();\n        });\n\n        this.socket.on('error', function (message) {\n            //cc.log(\"dddddddd----------eror:%s\",message);\n            Utils.messageconnect = message;\n            cc.director.loadScene(\"HomeScene\");\n        });\n        this.socket.on('disconnect', function (message) {\n            cc.director.loadScene(\"HomeScene\");\n        });\n    },\n\n    updateTinyMapGame: function updateTinyMapGame() {\n        if (this.mapScript.MYPLAYER.isActiveSC) {\n\n            var xpos = this.mapScript.MYPLAYER.x / 1500;\n            var ypos = this.mapScript.MYPLAYER.y / 1000;\n            this.tinyPlayer.x = xpos * 70;\n            this.tinyPlayer.y = ypos * 50;\n\n            var obj_info = this.mapScript.MYPLAYER.activeInfo;\n\n            var myLevel = obj_info.level;\n\n            var myMaxAmmo = parseInt(140 + (myLevel - 1) * 20);\n            var myMaxHealth = parseInt(80 + (myLevel - 1) * 15);\n\n            this.panelInfoScript.prAmmo.scaleX = parseInt(obj_info.ammo) / myMaxAmmo;\n            this.panelInfoScript.prHP.scaleX = parseInt(obj_info.hp) / myMaxHealth;\n\n            this.panelInfoScript.lbCountAmmo.string = parseInt(obj_info.ammo) + \"/\" + myMaxAmmo;\n            this.panelInfoScript.lbCountHp.string = parseInt(obj_info.hp) + \"/\" + myMaxHealth;\n            this.panelInfoScript.lbLevel.string = \"LEVEL:\" + parseInt(myLevel);\n            this.lbscore.string = obj_info.score;\n\n            this.panelInfoScript.lbSpeed.string = \"Speed:\" + Number(obj_info.sp).toFixed(1);\n        }\n    }\n\n});\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, 'f1a18l9eclHML7T7jQnaiOz', 'HomeScript');\n// Script/Gamescript/HomeScript.js\n\nvar Utils = require('../LIB/Utils');\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        nodeWeb: cc.Node,\n        nodeMobile: cc.Node,\n        txtUserName: cc.EditBox\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        if (cc.sys.isNative) {\n            // this.lbOS.string=\"isNative-iOS+Android:\"+cc.sys.os;\n            this.nodeWeb.active = false;\n            this.nodeMobile.active = true;\n        } else {\n            //this.lbOS.string=\"isBrowser:\"+cc.sys.os;\n            this.nodeWeb.active = true;\n            this.nodeMobile.active = false;\n        }\n        var strx = cc.sys.localStorage.getItem(\"usr\");\n        if (strx != null) {\n            if (typeof strx === \"undefined\") {\n                this.txtUserName.string = \"\";\n            } else {\n                this.txtUserName.string = strx;\n            }\n        }\n        this.AdsManager();\n    },\n\n    AdsManager: function AdsManager() {\n        if (cc.sys.os == cc.sys.OS_IOS) {\n            // hien thi quang cao\n            jsb.reflection.callStaticMethod(\"BridgeIOS\", \"ShowAdsBanerWithAdnimation\");\n\n            jsb.reflection.callStaticMethod(\"BridgeIOS\", \"ShowFullScreen\");\n\n            // hien thi loi thong bao khi khong ket not duoc mang\n            if (typeof Utils.messageconnect != \"undefined\") {\n                var msg = Utils.messageconnect + \"\";\n                if (msg.length > 4) {\n                    jsb.reflection.callStaticMethod(\"BridgeIOS\", \"callNativeUIWithTitle:andContent:\", \"Message\", msg);\n                    Utils.messageconnect = \"\";\n                }\n            }\n        } else if (cc.sys.os == cc.sys.OS_ANDROID) {} else {// phien ban web\n\n        }\n    },\n\n    acRate: function acRate() {\n        /**\n         *  NHỮNG API NÀY ĐƯỢC GỌI ĐI GỌI LẠI VÀ NÓ LÀ CƠ BẢN TẤT CẢ CÁC GAME ĐỀU CẦN CÓ NHƯ LÀ INAPP-PURCHASE,ADS,GAMECENTER,SHARE..., \n         *  NÊN SAU GAME NÀY MÌNH VIẾT NÓ THÀNH 1 CLASS RIÊNG ĐỂ DỄ TÁI SỬ DỤNG VÀ DỄ QUẢN LÝ, CÒN GIỜ CỨ VIẾT TẠM HẾT TRONG ĐÂY \n         * */\n        var urlRateApp = \"\";\n        if (cc.sys.os == cc.sys.OS_IOS) {\n            urlRateApp = \"itms-apps://itunes.apple.com/WebObjects/MZStore.woa/wa/viewContentsUserReviews?id=1132819298&onlyLatestVersion=true&pageNumber=0&sortOrdering=1&type=Purple+Software\";\n        } else {\n            // la android\n            urlRateApp = \"https://play.google.com/store/apps/details?id=pack_name\";\n        }\n        cc.sys.openURL(urlRateApp);\n    },\n    acHighScore: function acHighScore() {\n        // action highscore goi den native iOS, android de hien thi leaderboard\n        var ret = jsb.reflection.callStaticMethod(\"BridgeIOS\", \"callNativeUIWithTitle:andContent:\", \"cocos2d-js gui du lieu \", \"Yes! you call a Native UI from Reflection\");\n        console.log(\"return value form Object: %s\", ret);\n    },\n    acSetting: function acSetting() {},\n    acShare: function acShare() {},\n\n    actionWebLoadAppstore: function actionWebLoadAppstore() {\n        cc.sys.openURL(\"https://itunes.apple.com/app/id1132819298\");\n    },\n    actionWebLoadAppPlayStore: function actionWebLoadAppPlayStore() {\n        cc.sys.openURL(\"https://itunes.apple.com/app/id1132819298\");\n    },\n\n    acFacebookPage: function acFacebookPage() {\n        cc.sys.openURL(\"https://www.facebook.com/gameio.live\");\n    },\n    acTwitterPage: function acTwitterPage() {\n        cc.sys.openURL(\"https://twitter.com/GameioL\");\n    },\n    actionLoadGaamePlayer: function actionLoadGaamePlayer() {\n        Utils.playerName = this.txtUserName.string.trim();\n        cc.sys.localStorage.setItem(\"usr\", Utils.playerName);\n        cc.director.loadScene(\"GamePlay\");\n    }\n});\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, 'b7a59GsOBlEEID+Kx7MZBIu', 'PadController');\n// Script/LIB/PadController.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        hubcontrol: cc.Node\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        //this.addTouchListenEvent();\n\n        if (cc.sys.isBrowser) {\n            this.node.active = false;\n        } else {\n            var size = cc.director.getVisibleSize();\n\n            var yclose = -225;\n            var y_explain = -145;\n\n            var xclose = -size.width / 2 + 113;\n            var x_explain = -size.width / 2 + 200;\n\n            this.closePos = cc.p(xclose, yclose);\n            this.ex_pos = cc.p(x_explain, y_explain);\n\n            this.PadDir = 1;\n\n            this.closeAllButton();\n            this.changeframe = true;\n        }\n    },\n    onDisable: function onDisable() {\n        this.mainscript = null;\n    },\n    updatePadDir: function updatePadDir() {\n        var bt0 = this.node.children[0];\n\n        var allchild = this.node.children;\n        for (var ix = 0; ix < allchild.length; ix++) {\n            var bt1 = allchild[ix];\n            bt1.setLocalZOrder(1);\n        }\n        if (this.PadDir == 1) {\n            bt0.rotation = 180;\n            bt0 = this.node.children[2];\n            bt0.setLocalZOrder(3);\n        }\n        if (this.PadDir == 3) {\n            bt0.rotation = 0;\n            bt0 = this.node.children[3];\n            bt0.setLocalZOrder(3);\n        }\n        if (this.PadDir == 4) {\n            bt0.rotation = -90;\n            bt0 = this.node.children[1];\n            bt0.setLocalZOrder(3);\n        }\n        if (this.PadDir == 2) {\n            bt0.rotation = 90;\n            bt0 = this.node.children[4];\n            bt0.setLocalZOrder(3);\n        }\n    },\n    closeAllButton: function closeAllButton() {\n        var allchild = this.node.children;\n        for (var ix = 0; ix < allchild.length; ix++) {\n            var bt1 = allchild[ix];\n            bt1.x = 0;\n            bt1.y = 0;\n            if (ix == 0) {\n                bt1.active = true;\n            } else {\n                bt1.active = false;\n            }\n        }\n\n        this.node.setPosition(this.closePos);\n        this.hubcontrol.active = true;\n    },\n    objectMovePos: function objectMovePos(obj_node, pos) {\n        obj_node.stopAllActions();\n        var actionmv = cc.moveTo(0.2, pos);\n        obj_node.runAction(actionmv);\n    },\n    objectMoveCenter: function objectMoveCenter(obj_node, pos) {\n        obj_node.stopAllActions();\n        var actionmv = cc.moveTo(0.2, pos);\n        obj_node.runAction(actionmv);\n    },\n    explainAllButton: function explainAllButton() {\n        var allchild = this.node.children;\n\n        var bt1 = allchild[0];\n        bt1.x = 0;\n        bt1.y = 0;\n        bt1.active = false;\n\n        bt1 = allchild[1];\n        bt1.active = true;\n        this.objectMovePos(bt1, cc.p(0, -90));\n\n        bt1 = allchild[2];\n        bt1.active = true;\n        this.objectMovePos(bt1, cc.p(90, 0));\n\n        bt1 = allchild[3];\n        bt1.active = true;\n        this.objectMovePos(bt1, cc.p(-90, 0));\n\n        bt1 = allchild[4];\n        bt1.active = true;\n        this.objectMovePos(bt1, cc.p(0, 90));\n\n        this.node.stopAllActions();\n        var actionmv = cc.moveTo(0.2, this.ex_pos);\n        this.node.runAction(actionmv);\n        //this.node.setPosition(this.ex_pos);\n    },\n\n    moveAndCloseAllButton: function moveAndCloseAllButton() {\n        cc.log(\"asdas askkkkkkkkkkkdk\");\n\n        this.mainscript.updateMoveController(this.PadDir);\n        var moveCenter = cc.callFunc(this.moveToCenter, this);\n        var delaytime = cc.delayTime(0.15);\n        var moveRootPos = cc.callFunc(this.moveToClosepos, this);\n        var actionsc = cc.sequence(moveCenter, delaytime, moveRootPos);\n        this.node.stopAllActions();\n        this.node.runAction(actionsc);\n    },\n    moveToClosepos: function moveToClosepos(objsc) {\n        var allchild = this.node.children;\n        for (var ix = 0; ix < allchild.length; ix++) {\n            var bt1 = allchild[ix];\n            bt1.x = 0;\n            bt1.y = 0;\n            if (ix == 0) {\n                bt1.active = true;\n            } else {\n                bt1.active = false;\n            }\n        }\n        // this.node.stopAllActions();\n        var actionmv = cc.moveTo(0.18, this.closePos);\n        this.node.runAction(actionmv);\n    },\n    moveToCenter: function moveToCenter(objsc) {\n        cc.log(\"----------kkkkkk \");\n        var allchild = this.node.children;\n\n        // var bt1=allchild[0];\n        // bt1.active = true;\n        // bt1.opacity=0;\n        this.updatePadDir();\n\n        var bt1 = allchild[1];\n        bt1.active = true;\n        this.objectMoveCenter(bt1, cc.p(0, 0));\n\n        bt1 = allchild[2];\n        bt1.active = true;\n        this.objectMoveCenter(bt1, cc.p(0, 0));\n\n        bt1 = allchild[3];\n        bt1.active = true;\n        this.objectMoveCenter(bt1, cc.p(0, 0));\n\n        bt1 = allchild[4];\n        bt1.active = true;\n        this.objectMoveCenter(bt1, cc.p(0, 0));\n    },\n\n    actionMoveUp: function actionMoveUp() {\n        this.PadDir = 2;\n        this.moveAndCloseAllButton();\n        //this.closeAllButton();\n    },\n    actionMoveLeft: function actionMoveLeft() {\n        this.PadDir = 3;\n        this.moveAndCloseAllButton();\n    },\n    actionMoveRight: function actionMoveRight() {\n        cc.log(\"move actionMoveRight\");\n        this.PadDir = 1;\n        this.moveAndCloseAllButton();\n    },\n    actionMoveDown: function actionMoveDown() {\n        cc.log(\"move actionMoveDown\");\n        this.PadDir = 4;\n        this.moveAndCloseAllButton();\n    },\n    actionEX: function actionEX() {\n        cc.log(\"move actionEX\");\n        var bt0 = this.node.children[0];\n        if (this.changeframe) {\n            this.changeframe = false;\n            this.hubcontrol.removeFromParent(true);\n            this.hubcontrol = null;\n        }\n\n        this.explainAllButton();\n        //this.node.setPosition(this.ex_pos);\n    }\n\n});\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, '270b1oXWlhLDLgiBzvW9bIb', 'PanelUserInfo');\n// Script/Gamescript/PanelUserInfo.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        lbCountAmmo: cc.Label,\n        lbCountHp: cc.Label,\n        lbLevel: cc.Label,\n        lbSpeed: cc.Label,\n        prAmmo: cc.Node,\n        prHP: cc.Node\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {}\n\n});\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, '46277qbPR1ACI2Z3o4oUHBd', 'TestConnect');\n// Script/TestScript/TestConnect.js\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        label_status: {\n            type: cc.Label,\n            'default': null\n        }\n\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {},\n\n    actionConnect: function actionConnect() {\n        var self = this;\n        require('socket.io');\n        this.socket = io.connect('localhost:2020');\n        this.socket.on('connect', function (msgSend) {\n            cc.log(\"connection------>\");\n            self.label_status.string = \"ALKHKJHKD\";\n        });\n    }\n\n});\n// called every frame, uncomment this function to activate update callback\n// update: function (dt) {\n\n// },\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, 'ad9c3pgcn9OQrzRetEocmJc', 'TestEffect');\n// Script/TestScript/TestEffect.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        spBullet: cc.Node,\n        msTexture: cc.Texture2D,\n        spX1: cc.Node,\n        spX2: cc.Node,\n        frameAlts: cc.SpriteAtlas\n\n    },\n\n    //sp_particle:cc.Node\n    // use this for initialization\n    onLoad: function onLoad() {\n        var xcolcolor = new cc.Color(255, 255, 0);\n\n        //this.spX1.setLocalZOrder(3);\n        // this.spX2.setGlobalZOrder(2);\n\n        // this.spX2.globalZOrder=-1;\n        // this.spX2.color=new cc.Color(255,255,0);\n\n        this.spX2.setLocalZOrder(-4);\n        var sprite = this.spX2.getComponent(\"cc.Sprite\");\n        sprite.spriteFrame = this.frameAlts.getSpriteFrame(\"tankCharacters-t0-b\");\n\n        // cc.log(\"node_add:name= %s\",node_add.name);\n\n        // this.node_fire=new cc.Node(\"nodeParticleSystem\");\n        // this.ms=this.node_fire.addComponent(cc.ParticleSystem);\n        // this.ms.file=\"\";\n\n        // this.node.addChild(this.node_fire);\n\n        //cc.log(\"this.sp_particle.name: %s count allchild:\",this.sp_particle.name,this.node.children.length);\n        //cc.director.getScheduler().schedule(function() { this.testMovexx(); }, this, 0.1, !this._isRunning);\n        // this.testMovexx();\n    },\n\n    testMovexx: function testMovexx(dt) {\n        var self = this;\n        this.schedule(function (dt) {\n            self.spBullet.x = self.spBullet.x + dt * 100;\n        }, 0.001);\n    },\n\n    actionCheckEffect: function actionCheckEffect() {\n        this.unscheduleAllCallbacks();\n        // cc.log(\"this.node.children.length: %s\",this.node.children.length);\n        // cc.log(\"this.sp_particle.name: %s\",this.sp_particle.name);\n        // if (cc.isValid(sp_particle)) {\n        //     cc.log(\"is activate\");\n        // }else{\n        //     cc.log(\"is Remove \");\n        // }\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function update(dt) {}\n});\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, 'cf27a34VC5DU6079AfbfS0X', 'TestParticleSystemPos');\n// Script/TestScript/TestParticleSystemPos.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.logMyPosition();\n    },\n\n    logMyPosition: function logMyPosition() {\n        var self = this;\n        this.countStep = 0;\n        var TIME_FRAME_SERVER = 0.08;\n        this.schedule(function (dt) {\n\n            cc.log(\"-----------%s-----------Pos: %s %s\", this.node.children.length, this.node.x, this.node.y);\n        }, 0.001);\n    }\n});\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, 'ea1a5zc1kBBsJphlGGHjojW', 'Utils');\n// Script/LIB/Utils.js\n\n\n\nvar Utils = {\n    log: function log(msgobject) {\n        console.log(\"-GAMEIOLIVE-:%s\", msgobject);\n    },\n\n    loadUserInfo: function loadUserInfo() {\n        var strRT = '{\"platform\":10,\"version\":1.1,\"usr\":\"UserName\"}'; // theo quy ước thì 9 là iOS,10 là web mobile, 11 là android\n        strRT = strRT.replace(\"UserName\", Utils.playerName);\n        cc.log(\"strRT: %s\", strRT);\n        return strRT;\n    },\n    deCode: function deCode(keyCode) {\n        var end = keyCode.length * 0.6;\n        var begin = keyCode.length * 0.1;\n        var newkey = keyCode.substring(begin, end);\n        return newkey;\n    },\n\n    decodePackTank: function decodePackTank(objectEndcode) {\n        var psend = objectEndcode.p;\n        var x_tmp = psend / 100000.0;\n        var xp = x_tmp / 10.0;\n        xp = xp - 2000;\n        var y_tmp = psend % 100000;\n        var yp = y_tmp / 10.0;\n        yp = yp - 2000;\n\n        var e_g_r_d = objectEndcode.r;\n        var dir = 0;\n        if (e_g_r_d >= 1000000) {\n            dir = parseInt(e_g_r_d / 1000000);\n            e_g_r_d = e_g_r_d - dir * 1000000;\n        }\n        var tank_angle = e_g_r_d / 1000;\n        var gun_angle = e_g_r_d % 1000;\n\n        var e_x = objectEndcode.e;\n        var hp = parseInt(e_x / 10000.0);\n        var ammo = e_x % 10000;\n\n        var level_score = objectEndcode.s;\n        var level_s = level_score / 1000000.0;\n        var score_s = level_score % 1000000;\n\n        var t_ID = objectEndcode.i;\n        var spped = objectEndcode.m;\n\n        var tankName = \"\";\n        var nameserver = objectEndcode.n;\n        if (typeof nameserver === \"undefined\") {\n            tankName = \"\";\n        } else {\n            tankName = objectEndcode.n;\n        }\n\n        var objectDecode = {\n            x: xp,\n            y: yp,\n            id: t_ID,\n            r: tank_angle,\n            level: level_s,\n            score: score_s,\n            hp: hp,\n            dir: dir,\n            ammo: ammo,\n            sp: spped,\n            name: tankName,\n            gR: gun_angle\n        };\n        return objectDecode;\n    },\n\n    decodePackObs: function decodePackObs(objectEndcode) {\n        var psend = objectEndcode.p;\n        var x_tmp = psend / 100000.0;\n        var xp = x_tmp / 10.0;\n        xp = xp - 2000;\n        var y_tmp = psend % 100000;\n        var yp = y_tmp / 10.0;\n        yp = yp - 2000;\n\n        var numinfo = objectEndcode.o;\n        var idObj = parseInt(numinfo / 1000000.0);\n\n        var sodu = numinfo % 1000000;\n        var wd = sodu / 1000;\n        var hd = sodu % 1000;\n\n        var objDecode = {\n            x: xp,\n            y: yp,\n            w: wd,\n            h: hd,\n            id: idObj\n        };\n        return objDecode;\n    },\n\n    decodePackBullet: function decodePackBullet(objectEndcode) {\n        var psend = objectEndcode.p;\n        var x_tmp = psend / 100000.0;\n        var xp = x_tmp / 10.0;\n        xp = xp - 2000;\n        var y_tmp = psend % 100000;\n        var yp = y_tmp / 10.0;\n        yp = yp - 2000;\n\n        var number_info = objectEndcode.i;\n        var bullet_angle = parseInt(number_info / 100000);\n        var bullet_id = number_info % 100000;\n\n        var objDecode = {\n            x: xp,\n            y: yp,\n            ag: bullet_angle,\n            id: bullet_id\n        };\n        return objDecode;\n    },\n\n    decodePackExplosion: function decodePackExplosion(objectEndcode) {\n        var psend = objectEndcode.p;\n        var x_tmp = psend / 100000.0;\n        var xp = x_tmp / 10.0;\n        xp = xp - 2000;\n        var y_tmp = psend % 100000;\n        var yp = y_tmp / 10.0;\n        yp = yp - 2000;\n\n        var tid = objectEndcode.t;\n\n        var objDecode = {\n            x: xp,\n            y: yp,\n            tid: tid,\n            stt: objectEndcode.e,\n            tank_angle: 0,\n            gun_angle: 0\n        };\n        return objDecode;\n    },\n\n    decodePackItem: function decodePackItem(objectEndcode) {\n        var psend = objectEndcode.p;\n        var x_tmp = psend / 100000.0;\n        var xp = x_tmp / 10.0;\n        xp = xp - 2000;\n        var y_tmp = psend % 100000;\n        var yp = y_tmp / 10.0;\n        yp = yp - 2000;\n\n        var numberinfo = objectEndcode.i;\n        var iditem = numberinfo % 100000;\n        var typeitem = parseInt(numberinfo / 100000);\n        var objDecode = {\n            id: iditem,\n            x: xp,\n            y: yp,\n            type: typeitem\n        };\n        return objDecode;\n    }\n\n};\nmodule.exports = Utils;\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, 'c71e1vAlDFHkrt/N/U8jdgs', 'bulletScript');\n// Script/Gamescript/bulletScript.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        msTexture: cc.Texture2D\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        // this.node_add_efect=new cc.Node(\"effect\");\n        // var ms=this.node_add_efect.addComponent(cc.MotionStreak);\n        // ms.fadeTime=0.08;\n        // ms.minSeg=0.2;\n        // ms.stroke=5;\n        // ms.texture=this.msTexture;\n        // this.node.parent.addChild(this.node_add_efect);\n        // this.angleMove=0;\n\n        this.nextFrameMove = 0;\n    },\n    clearBulletEffect: function clearBulletEffect() {\n        // this.node_add_efect.removeFromParent(true);\n        // this.node_add_efect=null;\n    },\n    updateFrame: function updateFrame(tmp_info) {\n        var x_p = Number(tmp_info.x);\n        var y_p = Number(tmp_info.y);\n        this.node.setPosition(cc.p(x_p, y_p));\n        this.node.isActiveSC = true;\n\n        this.angleMove = parseInt(tmp_info.ag);\n        var tail_effect = this.node.children[0];\n        var t_r = this.angleMove;\n        if (t_r > 180) {\n            t_r = t_r - 360;\n        }\n        t_r = -t_r;\n        this.nextFrameMove = 0;\n        this.node.rotation = t_r;\n\n        //this.updateEffectPosition();\n    },\n    updateEffectPosition: function updateEffectPosition() {\n        //this.node_add_efect.setPosition(cc.p(this.node.x,this.node.y));\n    }\n\n});\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, 'e5139Jon21IKYOc4KRV7pV7', 'explosionScript');\n// Script/Gamescript/explosionScript.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {},\n\n    onLoad: function onLoad() {}\n\n});\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, 'a3930v3Gm1Du6LBz+Yn/6me', 'itemScript');\n// Script/Gamescript/itemScript.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {},\n\n    onLoad: function onLoad() {\n        var childx_effect = this.node.children[0];\n        var ac1 = cc.fadeTo(cc.random0To1() * 3 + 0.5, 0); // tham so dau tien la duration , time so thu 2 la opacity\n        var ac2 = cc.fadeTo(cc.random0To1() * 2 + 0.5, 255); // tham so dau tien la duration , time so thu 2 la opacity\n\n        this.repeat = cc.repeatForever(cc.sequence(ac1, ac2));\n\n        childx_effect.runAction(this.repeat);\n    },\n    beginClean: function beginClean() {\n        var childx_effect = this.node.children[0];\n        childx_effect.stopAllActions();\n    },\n    initDisplay: function initDisplay(tmp_info) {\n        var x_p = Number(tmp_info.x);\n        var y_p = Number(tmp_info.y);\n        this.node.setPosition(cc.p(x_p, y_p));\n    }\n\n});\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, 'c3b1dKAqAdFBp0ilxwWwXxX', 'obsScript');\n// Script/Gamescript/obsScript.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    initDisplay: function initDisplay(tmp_info) {\n        var x_p = Number(tmp_info.x);\n        var y_p = Number(tmp_info.y);\n        this.node.setPosition(cc.p(x_p, y_p));\n        var ww = Number(tmp_info.w);\n        var hh = Number(tmp_info.h);\n        this.node.scaleX = ww / 100;\n        this.node.scaleY = hh / 100;\n\n        this.Opos = cc.p(x_p, y_p);\n        this.min_x = x_p - ww / 2;\n        this.max_x = x_p + ww / 2;\n\n        this.min_y = y_p - hh / 2;\n        this.max_y = y_p + hh / 2;\n    }\n\n});\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, '553f6EpdwZG5LbBbiTVZDSa', 'socket.io');\n// Script/LIB/socket.io.js\n\nif (!cc.sys.isNative) {\n\n  (function (f) {\n    if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n      module.exports = f();\n    } else if (typeof define === \"function\" && define.amd) {\n      define([], f);\n    } else {\n      var g;if (typeof window !== \"undefined\") {\n        g = window;\n      } else if (typeof global !== \"undefined\") {\n        g = global;\n      } else if (typeof self !== \"undefined\") {\n        g = self;\n      } else {\n        g = this;\n      }g.io = f();\n    }\n  })(function () {\n    var define, module, exports;return (function e(t, n, r) {\n      function s(o, u) {\n        if (!n[o]) {\n          if (!t[o]) {\n            var a = typeof require == \"function\" && require;if (!u && a) return a(o, !0);if (i) return i(o, !0);var f = new Error(\"Cannot find module '\" + o + \"'\");throw (f.code = \"MODULE_NOT_FOUND\", f);\n          }var l = n[o] = { exports: {} };t[o][0].call(l.exports, function (e) {\n            var n = t[o][1][e];return s(n ? n : e);\n          }, l, l.exports, e, t, n, r);\n        }return n[o].exports;\n      }var i = typeof require == \"function\" && require;for (var o = 0; o < r.length; o++) s(r[o]);return s;\n    })({ 1: [function (_dereq_, module, exports) {\n\n        module.exports = _dereq_('./lib/');\n      }, { \"./lib/\": 2 }], 2: [function (_dereq_, module, exports) {\n\n        module.exports = _dereq_('./socket');\n\n        /**\n         * Exports parser\n         *\n         * @api public\n         *\n         */\n        module.exports.parser = _dereq_('engine.io-parser');\n      }, { \"./socket\": 3, \"engine.io-parser\": 19 }], 3: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module dependencies.\n           */\n\n          var transports = _dereq_('./transports');\n          var Emitter = _dereq_('component-emitter');\n          var debug = _dereq_('debug')('engine.io-client:socket');\n          var index = _dereq_('indexof');\n          var parser = _dereq_('engine.io-parser');\n          var parseuri = _dereq_('parseuri');\n          var parsejson = _dereq_('parsejson');\n          var parseqs = _dereq_('parseqs');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = Socket;\n\n          /**\n           * Noop function.\n           *\n           * @api private\n           */\n\n          function noop() {}\n\n          /**\n           * Socket constructor.\n           *\n           * @param {String|Object} uri or options\n           * @param {Object} options\n           * @api public\n           */\n\n          function Socket(uri, opts) {\n            if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n            opts = opts || {};\n\n            if (uri && 'object' == typeof uri) {\n              opts = uri;\n              uri = null;\n            }\n\n            if (uri) {\n              uri = parseuri(uri);\n              opts.hostname = uri.host;\n              opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';\n              opts.port = uri.port;\n              if (uri.query) opts.query = uri.query;\n            } else if (opts.host) {\n              opts.hostname = parseuri(opts.host).host;\n            }\n\n            this.secure = null != opts.secure ? opts.secure : global.location && 'https:' == location.protocol;\n\n            if (opts.hostname && !opts.port) {\n              // if no port is specified manually, use the protocol default\n              opts.port = this.secure ? '443' : '80';\n            }\n\n            this.agent = opts.agent || false;\n            this.hostname = opts.hostname || (global.location ? location.hostname : 'localhost');\n            this.port = opts.port || (global.location && location.port ? location.port : this.secure ? 443 : 80);\n            this.query = opts.query || {};\n            if ('string' == typeof this.query) this.query = parseqs.decode(this.query);\n            this.upgrade = false !== opts.upgrade;\n            this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n            this.forceJSONP = !!opts.forceJSONP;\n            this.jsonp = false !== opts.jsonp;\n            this.forceBase64 = !!opts.forceBase64;\n            this.enablesXDR = !!opts.enablesXDR;\n            this.timestampParam = opts.timestampParam || 't';\n            this.timestampRequests = opts.timestampRequests;\n            this.transports = opts.transports || ['polling', 'websocket'];\n            this.readyState = '';\n            this.writeBuffer = [];\n            this.policyPort = opts.policyPort || 843;\n            this.rememberUpgrade = opts.rememberUpgrade || false;\n            this.binaryType = null;\n            this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n            this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;\n\n            if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n            if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n              this.perMessageDeflate.threshold = 1024;\n            }\n\n            // SSL options for Node.js client\n            this.pfx = opts.pfx || null;\n            this.key = opts.key || null;\n            this.passphrase = opts.passphrase || null;\n            this.cert = opts.cert || null;\n            this.ca = opts.ca || null;\n            this.ciphers = opts.ciphers || null;\n            this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? null : opts.rejectUnauthorized;\n\n            // other options for Node.js client\n            var freeGlobal = typeof global == 'object' && global;\n            if (freeGlobal.global === freeGlobal) {\n              if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n                this.extraHeaders = opts.extraHeaders;\n              }\n            }\n\n            this.open();\n          }\n\n          Socket.priorWebsocketSuccess = false;\n\n          /**\n           * Mix in `Emitter`.\n           */\n\n          Emitter(Socket.prototype);\n\n          /**\n           * Protocol version.\n           *\n           * @api public\n           */\n\n          Socket.protocol = parser.protocol; // this is an int\n\n          /**\n           * Expose deps for legacy compatibility\n           * and standalone browser access.\n           */\n\n          Socket.Socket = Socket;\n          Socket.Transport = _dereq_('./transport');\n          Socket.transports = _dereq_('./transports');\n          Socket.parser = _dereq_('engine.io-parser');\n\n          /**\n           * Creates transport of the given type.\n           *\n           * @param {String} transport name\n           * @return {Transport}\n           * @api private\n           */\n\n          Socket.prototype.createTransport = function (name) {\n            debug('creating transport \"%s\"', name);\n            var query = clone(this.query);\n\n            // append engine.io protocol identifier\n            query.EIO = parser.protocol;\n\n            // transport name\n            query.transport = name;\n\n            // session id if we already have one\n            if (this.id) query.sid = this.id;\n\n            var transport = new transports[name]({\n              agent: this.agent,\n              hostname: this.hostname,\n              port: this.port,\n              secure: this.secure,\n              path: this.path,\n              query: query,\n              forceJSONP: this.forceJSONP,\n              jsonp: this.jsonp,\n              forceBase64: this.forceBase64,\n              enablesXDR: this.enablesXDR,\n              timestampRequests: this.timestampRequests,\n              timestampParam: this.timestampParam,\n              policyPort: this.policyPort,\n              socket: this,\n              pfx: this.pfx,\n              key: this.key,\n              passphrase: this.passphrase,\n              cert: this.cert,\n              ca: this.ca,\n              ciphers: this.ciphers,\n              rejectUnauthorized: this.rejectUnauthorized,\n              perMessageDeflate: this.perMessageDeflate,\n              extraHeaders: this.extraHeaders\n            });\n\n            return transport;\n          };\n\n          function clone(obj) {\n            var o = {};\n            for (var i in obj) {\n              if (obj.hasOwnProperty(i)) {\n                o[i] = obj[i];\n              }\n            }\n            return o;\n          }\n\n          /**\n           * Initializes transport to use and starts probe.\n           *\n           * @api private\n           */\n          Socket.prototype.open = function () {\n            var transport;\n            if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {\n              transport = 'websocket';\n            } else if (0 === this.transports.length) {\n              // Emit error on next tick so it can be listened to\n              var self = this;\n              setTimeout(function () {\n                self.emit('error', 'No transports available');\n              }, 0);\n              return;\n            } else {\n              transport = this.transports[0];\n            }\n            this.readyState = 'opening';\n\n            // Retry with the next transport if the transport is disabled (jsonp: false)\n            try {\n              transport = this.createTransport(transport);\n            } catch (e) {\n              this.transports.shift();\n              this.open();\n              return;\n            }\n\n            transport.open();\n            this.setTransport(transport);\n          };\n\n          /**\n           * Sets the current transport. Disables the existing one (if any).\n           *\n           * @api private\n           */\n\n          Socket.prototype.setTransport = function (transport) {\n            debug('setting transport %s', transport.name);\n            var self = this;\n\n            if (this.transport) {\n              debug('clearing existing transport %s', this.transport.name);\n              this.transport.removeAllListeners();\n            }\n\n            // set up transport\n            this.transport = transport;\n\n            // set up transport listeners\n            transport.on('drain', function () {\n              self.onDrain();\n            }).on('packet', function (packet) {\n              self.onPacket(packet);\n            }).on('error', function (e) {\n              self.onError(e);\n            }).on('close', function () {\n              self.onClose('transport close');\n            });\n          };\n\n          /**\n           * Probes a transport.\n           *\n           * @param {String} transport name\n           * @api private\n           */\n\n          Socket.prototype.probe = function (name) {\n            debug('probing transport \"%s\"', name);\n            var transport = this.createTransport(name, { probe: 1 }),\n                failed = false,\n                self = this;\n\n            Socket.priorWebsocketSuccess = false;\n\n            function onTransportOpen() {\n              if (self.onlyBinaryUpgrades) {\n                var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n                failed = failed || upgradeLosesBinary;\n              }\n              if (failed) return;\n\n              debug('probe transport \"%s\" opened', name);\n              transport.send([{ type: 'ping', data: 'probe' }]);\n              transport.once('packet', function (msg) {\n                if (failed) return;\n                if ('pong' == msg.type && 'probe' == msg.data) {\n                  debug('probe transport \"%s\" pong', name);\n                  self.upgrading = true;\n                  self.emit('upgrading', transport);\n                  if (!transport) return;\n                  Socket.priorWebsocketSuccess = 'websocket' == transport.name;\n\n                  debug('pausing current transport \"%s\"', self.transport.name);\n                  self.transport.pause(function () {\n                    if (failed) return;\n                    if ('closed' == self.readyState) return;\n                    debug('changing transport and sending upgrade packet');\n\n                    cleanup();\n\n                    self.setTransport(transport);\n                    transport.send([{ type: 'upgrade' }]);\n                    self.emit('upgrade', transport);\n                    transport = null;\n                    self.upgrading = false;\n                    self.flush();\n                  });\n                } else {\n                  debug('probe transport \"%s\" failed', name);\n                  var err = new Error('probe error');\n                  err.transport = transport.name;\n                  self.emit('upgradeError', err);\n                }\n              });\n            }\n\n            function freezeTransport() {\n              if (failed) return;\n\n              // Any callback called by transport should be ignored since now\n              failed = true;\n\n              cleanup();\n\n              transport.close();\n              transport = null;\n            }\n\n            //Handle any error that happens while probing\n            function onerror(err) {\n              var error = new Error('probe error: ' + err);\n              error.transport = transport.name;\n\n              freezeTransport();\n\n              debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n              self.emit('upgradeError', error);\n            }\n\n            function onTransportClose() {\n              onerror(\"transport closed\");\n            }\n\n            //When the socket is closed while we're probing\n            function onclose() {\n              onerror(\"socket closed\");\n            }\n\n            //When the socket is upgraded while we're probing\n            function onupgrade(to) {\n              if (transport && to.name != transport.name) {\n                debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n                freezeTransport();\n              }\n            }\n\n            //Remove all listeners on the transport and on self\n            function cleanup() {\n              transport.removeListener('open', onTransportOpen);\n              transport.removeListener('error', onerror);\n              transport.removeListener('close', onTransportClose);\n              self.removeListener('close', onclose);\n              self.removeListener('upgrading', onupgrade);\n            }\n\n            transport.once('open', onTransportOpen);\n            transport.once('error', onerror);\n            transport.once('close', onTransportClose);\n\n            this.once('close', onclose);\n            this.once('upgrading', onupgrade);\n\n            transport.open();\n          };\n\n          /**\n           * Called when connection is deemed open.\n           *\n           * @api public\n           */\n\n          Socket.prototype.onOpen = function () {\n            debug('socket open');\n            this.readyState = 'open';\n            Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;\n            this.emit('open');\n            this.flush();\n\n            // we check for `readyState` in case an `open`\n            // listener already closed the socket\n            if ('open' == this.readyState && this.upgrade && this.transport.pause) {\n              debug('starting upgrade probes');\n              for (var i = 0, l = this.upgrades.length; i < l; i++) {\n                this.probe(this.upgrades[i]);\n              }\n            }\n          };\n\n          /**\n           * Handles a packet.\n           *\n           * @api private\n           */\n\n          Socket.prototype.onPacket = function (packet) {\n            if ('opening' == this.readyState || 'open' == this.readyState) {\n              debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n              this.emit('packet', packet);\n\n              // Socket is live - any packet counts\n              this.emit('heartbeat');\n\n              switch (packet.type) {\n                case 'open':\n                  this.onHandshake(parsejson(packet.data));\n                  break;\n\n                case 'pong':\n                  this.setPing();\n                  this.emit('pong');\n                  break;\n\n                case 'error':\n                  var err = new Error('server error');\n                  err.code = packet.data;\n                  this.onError(err);\n                  break;\n\n                case 'message':\n                  this.emit('data', packet.data);\n                  this.emit('message', packet.data);\n                  break;\n              }\n            } else {\n              debug('packet received with socket readyState \"%s\"', this.readyState);\n            }\n          };\n\n          /**\n           * Called upon handshake completion.\n           *\n           * @param {Object} handshake obj\n           * @api private\n           */\n\n          Socket.prototype.onHandshake = function (data) {\n            this.emit('handshake', data);\n            this.id = data.sid;\n            this.transport.query.sid = data.sid;\n            this.upgrades = this.filterUpgrades(data.upgrades);\n            this.pingInterval = data.pingInterval;\n            this.pingTimeout = data.pingTimeout;\n            this.onOpen();\n            // In case open handler closes socket\n            if ('closed' == this.readyState) return;\n            this.setPing();\n\n            // Prolong liveness of socket on heartbeat\n            this.removeListener('heartbeat', this.onHeartbeat);\n            this.on('heartbeat', this.onHeartbeat);\n          };\n\n          /**\n           * Resets ping timeout.\n           *\n           * @api private\n           */\n\n          Socket.prototype.onHeartbeat = function (timeout) {\n            clearTimeout(this.pingTimeoutTimer);\n            var self = this;\n            self.pingTimeoutTimer = setTimeout(function () {\n              if ('closed' == self.readyState) return;\n              self.onClose('ping timeout');\n            }, timeout || self.pingInterval + self.pingTimeout);\n          };\n\n          /**\n           * Pings server every `this.pingInterval` and expects response\n           * within `this.pingTimeout` or closes connection.\n           *\n           * @api private\n           */\n\n          Socket.prototype.setPing = function () {\n            var self = this;\n            clearTimeout(self.pingIntervalTimer);\n            self.pingIntervalTimer = setTimeout(function () {\n              debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n              self.ping();\n              self.onHeartbeat(self.pingTimeout);\n            }, self.pingInterval);\n          };\n\n          /**\n          * Sends a ping packet.\n          *\n          * @api private\n          */\n\n          Socket.prototype.ping = function () {\n            var self = this;\n            this.sendPacket('ping', function () {\n              self.emit('ping');\n            });\n          };\n\n          /**\n           * Called on `drain` event\n           *\n           * @api private\n           */\n\n          Socket.prototype.onDrain = function () {\n            this.writeBuffer.splice(0, this.prevBufferLen);\n\n            // setting prevBufferLen = 0 is very important\n            // for example, when upgrading, upgrade packet is sent over,\n            // and a nonzero prevBufferLen could cause problems on `drain`\n            this.prevBufferLen = 0;\n\n            if (0 === this.writeBuffer.length) {\n              this.emit('drain');\n            } else {\n              this.flush();\n            }\n          };\n\n          /**\n           * Flush write buffers.\n           *\n           * @api private\n           */\n\n          Socket.prototype.flush = function () {\n            if ('closed' != this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n              debug('flushing %d packets in socket', this.writeBuffer.length);\n              this.transport.send(this.writeBuffer);\n              // keep track of current length of writeBuffer\n              // splice writeBuffer and callbackBuffer on `drain`\n              this.prevBufferLen = this.writeBuffer.length;\n              this.emit('flush');\n            }\n          };\n\n          /**\n           * Sends a message.\n           *\n           * @param {String} message.\n           * @param {Function} callback function.\n           * @param {Object} options.\n           * @return {Socket} for chaining.\n           * @api public\n           */\n\n          Socket.prototype.write = Socket.prototype.send = function (msg, options, fn) {\n            this.sendPacket('message', msg, options, fn);\n            return this;\n          };\n\n          /**\n           * Sends a packet.\n           *\n           * @param {String} packet type.\n           * @param {String} data.\n           * @param {Object} options.\n           * @param {Function} callback function.\n           * @api private\n           */\n\n          Socket.prototype.sendPacket = function (type, data, options, fn) {\n            if ('function' == typeof data) {\n              fn = data;\n              data = undefined;\n            }\n\n            if ('function' == typeof options) {\n              fn = options;\n              options = null;\n            }\n\n            if ('closing' == this.readyState || 'closed' == this.readyState) {\n              return;\n            }\n\n            options = options || {};\n            options.compress = false !== options.compress;\n\n            var packet = {\n              type: type,\n              data: data,\n              options: options\n            };\n            this.emit('packetCreate', packet);\n            this.writeBuffer.push(packet);\n            if (fn) this.once('flush', fn);\n            this.flush();\n          };\n\n          /**\n           * Closes the connection.\n           *\n           * @api private\n           */\n\n          Socket.prototype.close = function () {\n            if ('opening' == this.readyState || 'open' == this.readyState) {\n              this.readyState = 'closing';\n\n              var self = this;\n\n              if (this.writeBuffer.length) {\n                this.once('drain', function () {\n                  if (this.upgrading) {\n                    waitForUpgrade();\n                  } else {\n                    close();\n                  }\n                });\n              } else if (this.upgrading) {\n                waitForUpgrade();\n              } else {\n                close();\n              }\n            }\n\n            function close() {\n              self.onClose('forced close');\n              debug('socket closing - telling transport to close');\n              self.transport.close();\n            }\n\n            function cleanupAndClose() {\n              self.removeListener('upgrade', cleanupAndClose);\n              self.removeListener('upgradeError', cleanupAndClose);\n              close();\n            }\n\n            function waitForUpgrade() {\n              // wait for upgrade to finish since we can't send packets while pausing a transport\n              self.once('upgrade', cleanupAndClose);\n              self.once('upgradeError', cleanupAndClose);\n            }\n\n            return this;\n          };\n\n          /**\n           * Called upon transport error\n           *\n           * @api private\n           */\n\n          Socket.prototype.onError = function (err) {\n            debug('socket error %j', err);\n            Socket.priorWebsocketSuccess = false;\n            this.emit('error', err);\n            this.onClose('transport error', err);\n          };\n\n          /**\n           * Called upon transport close.\n           *\n           * @api private\n           */\n\n          Socket.prototype.onClose = function (reason, desc) {\n            if ('opening' == this.readyState || 'open' == this.readyState || 'closing' == this.readyState) {\n              debug('socket close with reason: \"%s\"', reason);\n              var self = this;\n\n              // clear timers\n              clearTimeout(this.pingIntervalTimer);\n              clearTimeout(this.pingTimeoutTimer);\n\n              // stop event from firing again for transport\n              this.transport.removeAllListeners('close');\n\n              // ensure transport won't stay open\n              this.transport.close();\n\n              // ignore further transport communication\n              this.transport.removeAllListeners();\n\n              // set ready state\n              this.readyState = 'closed';\n\n              // clear session id\n              this.id = null;\n\n              // emit close event\n              this.emit('close', reason, desc);\n\n              // clean buffers after, so users can still\n              // grab the buffers on `close` event\n              self.writeBuffer = [];\n              self.prevBufferLen = 0;\n            }\n          };\n\n          /**\n           * Filters upgrades, returning only those matching client transports.\n           *\n           * @param {Array} server upgrades\n           * @api private\n           *\n           */\n\n          Socket.prototype.filterUpgrades = function (upgrades) {\n            var filteredUpgrades = [];\n            for (var i = 0, j = upgrades.length; i < j; i++) {\n              if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n            }\n            return filteredUpgrades;\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./transport\": 4, \"./transports\": 5, \"component-emitter\": 15, \"debug\": 17, \"engine.io-parser\": 19, \"indexof\": 23, \"parsejson\": 26, \"parseqs\": 27, \"parseuri\": 28 }], 4: [function (_dereq_, module, exports) {\n        /**\n         * Module dependencies.\n         */\n\n        var parser = _dereq_('engine.io-parser');\n        var Emitter = _dereq_('component-emitter');\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = Transport;\n\n        /**\n         * Transport abstract constructor.\n         *\n         * @param {Object} options.\n         * @api private\n         */\n\n        function Transport(opts) {\n          this.path = opts.path;\n          this.hostname = opts.hostname;\n          this.port = opts.port;\n          this.secure = opts.secure;\n          this.query = opts.query;\n          this.timestampParam = opts.timestampParam;\n          this.timestampRequests = opts.timestampRequests;\n          this.readyState = '';\n          this.agent = opts.agent || false;\n          this.socket = opts.socket;\n          this.enablesXDR = opts.enablesXDR;\n\n          // SSL options for Node.js client\n          this.pfx = opts.pfx;\n          this.key = opts.key;\n          this.passphrase = opts.passphrase;\n          this.cert = opts.cert;\n          this.ca = opts.ca;\n          this.ciphers = opts.ciphers;\n          this.rejectUnauthorized = opts.rejectUnauthorized;\n\n          // other options for Node.js client\n          this.extraHeaders = opts.extraHeaders;\n        }\n\n        /**\n         * Mix in `Emitter`.\n         */\n\n        Emitter(Transport.prototype);\n\n        /**\n         * Emits an error.\n         *\n         * @param {String} str\n         * @return {Transport} for chaining\n         * @api public\n         */\n\n        Transport.prototype.onError = function (msg, desc) {\n          var err = new Error(msg);\n          err.type = 'TransportError';\n          err.description = desc;\n          this.emit('error', err);\n          return this;\n        };\n\n        /**\n         * Opens the transport.\n         *\n         * @api public\n         */\n\n        Transport.prototype.open = function () {\n          if ('closed' == this.readyState || '' == this.readyState) {\n            this.readyState = 'opening';\n            this.doOpen();\n          }\n\n          return this;\n        };\n\n        /**\n         * Closes the transport.\n         *\n         * @api private\n         */\n\n        Transport.prototype.close = function () {\n          if ('opening' == this.readyState || 'open' == this.readyState) {\n            this.doClose();\n            this.onClose();\n          }\n\n          return this;\n        };\n\n        /**\n         * Sends multiple packets.\n         *\n         * @param {Array} packets\n         * @api private\n         */\n\n        Transport.prototype.send = function (packets) {\n          if ('open' == this.readyState) {\n            this.write(packets);\n          } else {\n            throw new Error('Transport not open');\n          }\n        };\n\n        /**\n         * Called upon open\n         *\n         * @api private\n         */\n\n        Transport.prototype.onOpen = function () {\n          this.readyState = 'open';\n          this.writable = true;\n          this.emit('open');\n        };\n\n        /**\n         * Called with data.\n         *\n         * @param {String} data\n         * @api private\n         */\n\n        Transport.prototype.onData = function (data) {\n          var packet = parser.decodePacket(data, this.socket.binaryType);\n          this.onPacket(packet);\n        };\n\n        /**\n         * Called with a decoded packet.\n         */\n\n        Transport.prototype.onPacket = function (packet) {\n          this.emit('packet', packet);\n        };\n\n        /**\n         * Called upon close.\n         *\n         * @api private\n         */\n\n        Transport.prototype.onClose = function () {\n          this.readyState = 'closed';\n          this.emit('close');\n        };\n      }, { \"component-emitter\": 15, \"engine.io-parser\": 19 }], 5: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module dependencies\n           */\n\n          var XMLHttpRequest = _dereq_('xmlhttprequest-ssl');\n          var XHR = _dereq_('./polling-xhr');\n          var JSONP = _dereq_('./polling-jsonp');\n          var websocket = _dereq_('./websocket');\n\n          /**\n           * Export transports.\n           */\n\n          exports.polling = polling;\n          exports.websocket = websocket;\n\n          /**\n           * Polling transport polymorphic constructor.\n           * Decides on xhr vs jsonp based on feature detection.\n           *\n           * @api private\n           */\n\n          function polling(opts) {\n            var xhr;\n            var xd = false;\n            var xs = false;\n            var jsonp = false !== opts.jsonp;\n\n            if (global.location) {\n              var isSSL = 'https:' == location.protocol;\n              var port = location.port;\n\n              // some user agents have empty `location.port`\n              if (!port) {\n                port = isSSL ? 443 : 80;\n              }\n\n              xd = opts.hostname != location.hostname || port != opts.port;\n              xs = opts.secure != isSSL;\n            }\n\n            opts.xdomain = xd;\n            opts.xscheme = xs;\n            xhr = new XMLHttpRequest(opts);\n\n            if ('open' in xhr && !opts.forceJSONP) {\n              return new XHR(opts);\n            } else {\n              if (!jsonp) throw new Error('JSONP disabled');\n              return new JSONP(opts);\n            }\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./polling-jsonp\": 6, \"./polling-xhr\": 7, \"./websocket\": 9, \"xmlhttprequest-ssl\": 10 }], 6: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          /**\n           * Module requirements.\n           */\n\n          var Polling = _dereq_('./polling');\n          var inherit = _dereq_('component-inherit');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = JSONPPolling;\n\n          /**\n           * Cached regular expressions.\n           */\n\n          var rNewline = /\\n/g;\n          var rEscapedNewline = /\\\\n/g;\n\n          /**\n           * Global JSONP callbacks.\n           */\n\n          var callbacks;\n\n          /**\n           * Callbacks count.\n           */\n\n          var index = 0;\n\n          /**\n           * Noop.\n           */\n\n          function empty() {}\n\n          /**\n           * JSONP Polling constructor.\n           *\n           * @param {Object} opts.\n           * @api public\n           */\n\n          function JSONPPolling(opts) {\n            Polling.call(this, opts);\n\n            this.query = this.query || {};\n\n            // define global callbacks array if not present\n            // we do this here (lazily) to avoid unneeded global pollution\n            if (!callbacks) {\n              // we need to consider multiple engines in the same page\n              if (!global.___eio) global.___eio = [];\n              callbacks = global.___eio;\n            }\n\n            // callback identifier\n            this.index = callbacks.length;\n\n            // add callback to jsonp global\n            var self = this;\n            callbacks.push(function (msg) {\n              self.onData(msg);\n            });\n\n            // append to query string\n            this.query.j = this.index;\n\n            // prevent spurious errors from being emitted when the window is unloaded\n            if (global.document && global.addEventListener) {\n              global.addEventListener('beforeunload', function () {\n                if (self.script) self.script.onerror = empty;\n              }, false);\n            }\n          }\n\n          /**\n           * Inherits from Polling.\n           */\n\n          inherit(JSONPPolling, Polling);\n\n          /*\n           * JSONP only supports binary as base64 encoded strings\n           */\n\n          JSONPPolling.prototype.supportsBinary = false;\n\n          /**\n           * Closes the socket.\n           *\n           * @api private\n           */\n\n          JSONPPolling.prototype.doClose = function () {\n            if (this.script) {\n              this.script.parentNode.removeChild(this.script);\n              this.script = null;\n            }\n\n            if (this.form) {\n              this.form.parentNode.removeChild(this.form);\n              this.form = null;\n              this.iframe = null;\n            }\n\n            Polling.prototype.doClose.call(this);\n          };\n\n          /**\n           * Starts a poll cycle.\n           *\n           * @api private\n           */\n\n          JSONPPolling.prototype.doPoll = function () {\n            var self = this;\n            var script = document.createElement('script');\n\n            if (this.script) {\n              this.script.parentNode.removeChild(this.script);\n              this.script = null;\n            }\n\n            script.async = true;\n            script.src = this.uri();\n            script.onerror = function (e) {\n              self.onError('jsonp poll error', e);\n            };\n\n            var insertAt = document.getElementsByTagName('script')[0];\n            if (insertAt) {\n              insertAt.parentNode.insertBefore(script, insertAt);\n            } else {\n              (document.head || document.body).appendChild(script);\n            }\n            this.script = script;\n\n            var isUAgecko = 'undefined' != typeof navigator && /gecko/i.test(navigator.userAgent);\n\n            if (isUAgecko) {\n              setTimeout(function () {\n                var iframe = document.createElement('iframe');\n                document.body.appendChild(iframe);\n                document.body.removeChild(iframe);\n              }, 100);\n            }\n          };\n\n          /**\n           * Writes with a hidden iframe.\n           *\n           * @param {String} data to send\n           * @param {Function} called upon flush.\n           * @api private\n           */\n\n          JSONPPolling.prototype.doWrite = function (data, fn) {\n            var self = this;\n\n            if (!this.form) {\n              var form = document.createElement('form');\n              var area = document.createElement('textarea');\n              var id = this.iframeId = 'eio_iframe_' + this.index;\n              var iframe;\n\n              form.className = 'socketio';\n              form.style.position = 'absolute';\n              form.style.top = '-1000px';\n              form.style.left = '-1000px';\n              form.target = id;\n              form.method = 'POST';\n              form.setAttribute('accept-charset', 'utf-8');\n              area.name = 'd';\n              form.appendChild(area);\n              document.body.appendChild(form);\n\n              this.form = form;\n              this.area = area;\n            }\n\n            this.form.action = this.uri();\n\n            function complete() {\n              initIframe();\n              fn();\n            }\n\n            function initIframe() {\n              if (self.iframe) {\n                try {\n                  self.form.removeChild(self.iframe);\n                } catch (e) {\n                  self.onError('jsonp polling iframe removal error', e);\n                }\n              }\n\n              try {\n                // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n                var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n                iframe = document.createElement(html);\n              } catch (e) {\n                iframe = document.createElement('iframe');\n                iframe.name = self.iframeId;\n                iframe.src = 'javascript:0';\n              }\n\n              iframe.id = self.iframeId;\n\n              self.form.appendChild(iframe);\n              self.iframe = iframe;\n            }\n\n            initIframe();\n\n            // escape \\n to prevent it from being converted into \\r\\n by some UAs\n            // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n            data = data.replace(rEscapedNewline, '\\\\\\n');\n            this.area.value = data.replace(rNewline, '\\\\n');\n\n            try {\n              this.form.submit();\n            } catch (e) {}\n\n            if (this.iframe.attachEvent) {\n              this.iframe.onreadystatechange = function () {\n                if (self.iframe.readyState == 'complete') {\n                  complete();\n                }\n              };\n            } else {\n              this.iframe.onload = complete;\n            }\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./polling\": 8, \"component-inherit\": 16 }], 7: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module requirements.\n           */\n\n          var XMLHttpRequest = _dereq_('xmlhttprequest-ssl');\n          var Polling = _dereq_('./polling');\n          var Emitter = _dereq_('component-emitter');\n          var inherit = _dereq_('component-inherit');\n          var debug = _dereq_('debug')('engine.io-client:polling-xhr');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = XHR;\n          module.exports.Request = Request;\n\n          /**\n           * Empty function\n           */\n\n          function empty() {}\n\n          /**\n           * XHR Polling constructor.\n           *\n           * @param {Object} opts\n           * @api public\n           */\n\n          function XHR(opts) {\n            Polling.call(this, opts);\n\n            if (global.location) {\n              var isSSL = 'https:' == location.protocol;\n              var port = location.port;\n\n              // some user agents have empty `location.port`\n              if (!port) {\n                port = isSSL ? 443 : 80;\n              }\n\n              this.xd = opts.hostname != global.location.hostname || port != opts.port;\n              this.xs = opts.secure != isSSL;\n            } else {\n              this.extraHeaders = opts.extraHeaders;\n            }\n          }\n\n          /**\n           * Inherits from Polling.\n           */\n\n          inherit(XHR, Polling);\n\n          /**\n           * XHR supports binary\n           */\n\n          XHR.prototype.supportsBinary = true;\n\n          /**\n           * Creates a request.\n           *\n           * @param {String} method\n           * @api private\n           */\n\n          XHR.prototype.request = function (opts) {\n            opts = opts || {};\n            opts.uri = this.uri();\n            opts.xd = this.xd;\n            opts.xs = this.xs;\n            opts.agent = this.agent || false;\n            opts.supportsBinary = this.supportsBinary;\n            opts.enablesXDR = this.enablesXDR;\n\n            // SSL options for Node.js client\n            opts.pfx = this.pfx;\n            opts.key = this.key;\n            opts.passphrase = this.passphrase;\n            opts.cert = this.cert;\n            opts.ca = this.ca;\n            opts.ciphers = this.ciphers;\n            opts.rejectUnauthorized = this.rejectUnauthorized;\n\n            // other options for Node.js client\n            opts.extraHeaders = this.extraHeaders;\n\n            return new Request(opts);\n          };\n\n          /**\n           * Sends data.\n           *\n           * @param {String} data to send.\n           * @param {Function} called upon flush.\n           * @api private\n           */\n\n          XHR.prototype.doWrite = function (data, fn) {\n            var isBinary = typeof data !== 'string' && data !== undefined;\n            var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n            var self = this;\n            req.on('success', fn);\n            req.on('error', function (err) {\n              self.onError('xhr post error', err);\n            });\n            this.sendXhr = req;\n          };\n\n          /**\n           * Starts a poll cycle.\n           *\n           * @api private\n           */\n\n          XHR.prototype.doPoll = function () {\n            debug('xhr poll');\n            var req = this.request();\n            var self = this;\n            req.on('data', function (data) {\n              self.onData(data);\n            });\n            req.on('error', function (err) {\n              self.onError('xhr poll error', err);\n            });\n            this.pollXhr = req;\n          };\n\n          /**\n           * Request constructor\n           *\n           * @param {Object} options\n           * @api public\n           */\n\n          function Request(opts) {\n            this.method = opts.method || 'GET';\n            this.uri = opts.uri;\n            this.xd = !!opts.xd;\n            this.xs = !!opts.xs;\n            this.async = false !== opts.async;\n            this.data = undefined != opts.data ? opts.data : null;\n            this.agent = opts.agent;\n            this.isBinary = opts.isBinary;\n            this.supportsBinary = opts.supportsBinary;\n            this.enablesXDR = opts.enablesXDR;\n\n            // SSL options for Node.js client\n            this.pfx = opts.pfx;\n            this.key = opts.key;\n            this.passphrase = opts.passphrase;\n            this.cert = opts.cert;\n            this.ca = opts.ca;\n            this.ciphers = opts.ciphers;\n            this.rejectUnauthorized = opts.rejectUnauthorized;\n\n            // other options for Node.js client\n            this.extraHeaders = opts.extraHeaders;\n\n            this.create();\n          }\n\n          /**\n           * Mix in `Emitter`.\n           */\n\n          Emitter(Request.prototype);\n\n          /**\n           * Creates the XHR object and sends the request.\n           *\n           * @api private\n           */\n\n          Request.prototype.create = function () {\n            var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n            // SSL options for Node.js client\n            opts.pfx = this.pfx;\n            opts.key = this.key;\n            opts.passphrase = this.passphrase;\n            opts.cert = this.cert;\n            opts.ca = this.ca;\n            opts.ciphers = this.ciphers;\n            opts.rejectUnauthorized = this.rejectUnauthorized;\n\n            var xhr = this.xhr = new XMLHttpRequest(opts);\n            var self = this;\n\n            try {\n              debug('xhr open %s: %s', this.method, this.uri);\n              xhr.open(this.method, this.uri, this.async);\n              try {\n                if (this.extraHeaders) {\n                  xhr.setDisableHeaderCheck(true);\n                  for (var i in this.extraHeaders) {\n                    if (this.extraHeaders.hasOwnProperty(i)) {\n                      xhr.setRequestHeader(i, this.extraHeaders[i]);\n                    }\n                  }\n                }\n              } catch (e) {}\n              if (this.supportsBinary) {\n                // This has to be done after open because Firefox is stupid\n                // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n                xhr.responseType = 'arraybuffer';\n              }\n\n              if ('POST' == this.method) {\n                try {\n                  if (this.isBinary) {\n                    xhr.setRequestHeader('Content-type', 'application/octet-stream');\n                  } else {\n                    xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n                  }\n                } catch (e) {}\n              }\n\n              // ie6 check\n              if ('withCredentials' in xhr) {\n                xhr.withCredentials = true;\n              }\n\n              if (this.hasXDR()) {\n                xhr.onload = function () {\n                  self.onLoad();\n                };\n                xhr.onerror = function () {\n                  self.onError(xhr.responseText);\n                };\n              } else {\n                xhr.onreadystatechange = function () {\n                  if (4 != xhr.readyState) return;\n                  if (200 == xhr.status || 1223 == xhr.status) {\n                    self.onLoad();\n                  } else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    setTimeout(function () {\n                      self.onError(xhr.status);\n                    }, 0);\n                  }\n                };\n              }\n\n              debug('xhr data %s', this.data);\n              xhr.send(this.data);\n            } catch (e) {\n              // Need to defer since .create() is called directly fhrom the constructor\n              // and thus the 'error' event can only be only bound *after* this exception\n              // occurs.  Therefore, also, we cannot throw here at all.\n              setTimeout(function () {\n                self.onError(e);\n              }, 0);\n              return;\n            }\n\n            if (global.document) {\n              this.index = Request.requestsCount++;\n              Request.requests[this.index] = this;\n            }\n          };\n\n          /**\n           * Called upon successful response.\n           *\n           * @api private\n           */\n\n          Request.prototype.onSuccess = function () {\n            this.emit('success');\n            this.cleanup();\n          };\n\n          /**\n           * Called if we have data.\n           *\n           * @api private\n           */\n\n          Request.prototype.onData = function (data) {\n            this.emit('data', data);\n            this.onSuccess();\n          };\n\n          /**\n           * Called upon error.\n           *\n           * @api private\n           */\n\n          Request.prototype.onError = function (err) {\n            this.emit('error', err);\n            this.cleanup(true);\n          };\n\n          /**\n           * Cleans up house.\n           *\n           * @api private\n           */\n\n          Request.prototype.cleanup = function (fromError) {\n            if ('undefined' == typeof this.xhr || null === this.xhr) {\n              return;\n            }\n            // xmlhttprequest\n            if (this.hasXDR()) {\n              this.xhr.onload = this.xhr.onerror = empty;\n            } else {\n              this.xhr.onreadystatechange = empty;\n            }\n\n            if (fromError) {\n              try {\n                this.xhr.abort();\n              } catch (e) {}\n            }\n\n            if (global.document) {\n              delete Request.requests[this.index];\n            }\n\n            this.xhr = null;\n          };\n\n          /**\n           * Called upon load.\n           *\n           * @api private\n           */\n\n          Request.prototype.onLoad = function () {\n            var data;\n            try {\n              var contentType;\n              try {\n                contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n              } catch (e) {}\n              if (contentType === 'application/octet-stream') {\n                data = this.xhr.response;\n              } else {\n                if (!this.supportsBinary) {\n                  data = this.xhr.responseText;\n                } else {\n                  try {\n                    data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n                  } catch (e) {\n                    var ui8Arr = new Uint8Array(this.xhr.response);\n                    var dataArray = [];\n                    for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n                      dataArray.push(ui8Arr[idx]);\n                    }\n\n                    data = String.fromCharCode.apply(null, dataArray);\n                  }\n                }\n              }\n            } catch (e) {\n              this.onError(e);\n            }\n            if (null != data) {\n              this.onData(data);\n            }\n          };\n\n          /**\n           * Check if it has XDomainRequest.\n           *\n           * @api private\n           */\n\n          Request.prototype.hasXDR = function () {\n            return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n          };\n\n          /**\n           * Aborts the request.\n           *\n           * @api public\n           */\n\n          Request.prototype.abort = function () {\n            this.cleanup();\n          };\n\n          /**\n           * Aborts pending requests when unloading the window. This is needed to prevent\n           * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n           * emitted.\n           */\n\n          if (global.document) {\n            Request.requestsCount = 0;\n            Request.requests = {};\n            if (global.attachEvent) {\n              global.attachEvent('onunload', unloadHandler);\n            } else if (global.addEventListener) {\n              global.addEventListener('beforeunload', unloadHandler, false);\n            }\n          }\n\n          function unloadHandler() {\n            for (var i in Request.requests) {\n              if (Request.requests.hasOwnProperty(i)) {\n                Request.requests[i].abort();\n              }\n            }\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./polling\": 8, \"component-emitter\": 15, \"component-inherit\": 16, \"debug\": 17, \"xmlhttprequest-ssl\": 10 }], 8: [function (_dereq_, module, exports) {\n        /**\n         * Module dependencies.\n         */\n\n        var Transport = _dereq_('../transport');\n        var parseqs = _dereq_('parseqs');\n        var parser = _dereq_('engine.io-parser');\n        var inherit = _dereq_('component-inherit');\n        var yeast = _dereq_('yeast');\n        var debug = _dereq_('debug')('engine.io-client:polling');\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = Polling;\n\n        /**\n         * Is XHR2 supported?\n         */\n\n        var hasXHR2 = (function () {\n          var XMLHttpRequest = _dereq_('xmlhttprequest-ssl');\n          var xhr = new XMLHttpRequest({ xdomain: false });\n          return null != xhr.responseType;\n        })();\n\n        /**\n         * Polling interface.\n         *\n         * @param {Object} opts\n         * @api private\n         */\n\n        function Polling(opts) {\n          var forceBase64 = opts && opts.forceBase64;\n          if (!hasXHR2 || forceBase64) {\n            this.supportsBinary = false;\n          }\n          Transport.call(this, opts);\n        }\n\n        /**\n         * Inherits from Transport.\n         */\n\n        inherit(Polling, Transport);\n\n        /**\n         * Transport name.\n         */\n\n        Polling.prototype.name = 'polling';\n\n        /**\n         * Opens the socket (triggers polling). We write a PING message to determine\n         * when the transport is open.\n         *\n         * @api private\n         */\n\n        Polling.prototype.doOpen = function () {\n          this.poll();\n        };\n\n        /**\n         * Pauses polling.\n         *\n         * @param {Function} callback upon buffers are flushed and transport is paused\n         * @api private\n         */\n\n        Polling.prototype.pause = function (onPause) {\n          var pending = 0;\n          var self = this;\n\n          this.readyState = 'pausing';\n\n          function pause() {\n            debug('paused');\n            self.readyState = 'paused';\n            onPause();\n          }\n\n          if (this.polling || !this.writable) {\n            var total = 0;\n\n            if (this.polling) {\n              debug('we are currently polling - waiting to pause');\n              total++;\n              this.once('pollComplete', function () {\n                debug('pre-pause polling complete');\n                --total || pause();\n              });\n            }\n\n            if (!this.writable) {\n              debug('we are currently writing - waiting to pause');\n              total++;\n              this.once('drain', function () {\n                debug('pre-pause writing complete');\n                --total || pause();\n              });\n            }\n          } else {\n            pause();\n          }\n        };\n\n        /**\n         * Starts polling cycle.\n         *\n         * @api public\n         */\n\n        Polling.prototype.poll = function () {\n          debug('polling');\n          this.polling = true;\n          this.doPoll();\n          this.emit('poll');\n        };\n\n        /**\n         * Overloads onData to detect payloads.\n         *\n         * @api private\n         */\n\n        Polling.prototype.onData = function (data) {\n          var self = this;\n          debug('polling got data %s', data);\n          var callback = function callback(packet, index, total) {\n            // if its the first message we consider the transport open\n            if ('opening' == self.readyState) {\n              self.onOpen();\n            }\n\n            // if its a close packet, we close the ongoing requests\n            if ('close' == packet.type) {\n              self.onClose();\n              return false;\n            }\n\n            // otherwise bypass onData and handle the message\n            self.onPacket(packet);\n          };\n\n          // decode payload\n          parser.decodePayload(data, this.socket.binaryType, callback);\n\n          // if an event did not trigger closing\n          if ('closed' != this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit('pollComplete');\n\n            if ('open' == this.readyState) {\n              this.poll();\n            } else {\n              debug('ignoring poll - transport state \"%s\"', this.readyState);\n            }\n          }\n        };\n\n        /**\n         * For polling, send a close packet.\n         *\n         * @api private\n         */\n\n        Polling.prototype.doClose = function () {\n          var self = this;\n\n          function close() {\n            debug('writing close packet');\n            self.write([{ type: 'close' }]);\n          }\n\n          if ('open' == this.readyState) {\n            debug('transport open - closing');\n            close();\n          } else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            debug('transport not open - deferring close');\n            this.once('open', close);\n          }\n        };\n\n        /**\n         * Writes a packets payload.\n         *\n         * @param {Array} data packets\n         * @param {Function} drain callback\n         * @api private\n         */\n\n        Polling.prototype.write = function (packets) {\n          var self = this;\n          this.writable = false;\n          var callbackfn = function callbackfn() {\n            self.writable = true;\n            self.emit('drain');\n          };\n\n          var self = this;\n          parser.encodePayload(packets, this.supportsBinary, function (data) {\n            self.doWrite(data, callbackfn);\n          });\n        };\n\n        /**\n         * Generates uri for connection.\n         *\n         * @api private\n         */\n\n        Polling.prototype.uri = function () {\n          var query = this.query || {};\n          var schema = this.secure ? 'https' : 'http';\n          var port = '';\n\n          // cache busting is forced\n          if (false !== this.timestampRequests) {\n            query[this.timestampParam] = yeast();\n          }\n\n          if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n          }\n\n          query = parseqs.encode(query);\n\n          // avoid port if default for schema\n          if (this.port && ('https' == schema && this.port != 443 || 'http' == schema && this.port != 80)) {\n            port = ':' + this.port;\n          }\n\n          // prepend ? to query\n          if (query.length) {\n            query = '?' + query;\n          }\n\n          var ipv6 = this.hostname.indexOf(':') !== -1;\n          return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n        };\n      }, { \"../transport\": 4, \"component-inherit\": 16, \"debug\": 17, \"engine.io-parser\": 19, \"parseqs\": 27, \"xmlhttprequest-ssl\": 10, \"yeast\": 30 }], 9: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module dependencies.\n           */\n\n          var Transport = _dereq_('../transport');\n          var parser = _dereq_('engine.io-parser');\n          var parseqs = _dereq_('parseqs');\n          var inherit = _dereq_('component-inherit');\n          var yeast = _dereq_('yeast');\n          var debug = _dereq_('debug')('engine.io-client:websocket');\n          var BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\n          /**\n           * Get either the `WebSocket` or `MozWebSocket` globals\n           * in the browser or the WebSocket-compatible interface\n           * exposed by `ws` for Node environment.\n           */\n\n          var WebSocket = BrowserWebSocket || (typeof window !== 'undefined' ? null : _dereq_('ws'));\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = WS;\n\n          /**\n           * WebSocket transport constructor.\n           *\n           * @api {Object} connection options\n           * @api public\n           */\n\n          function WS(opts) {\n            var forceBase64 = opts && opts.forceBase64;\n            if (forceBase64) {\n              this.supportsBinary = false;\n            }\n            this.perMessageDeflate = opts.perMessageDeflate;\n            Transport.call(this, opts);\n          }\n\n          /**\n           * Inherits from Transport.\n           */\n\n          inherit(WS, Transport);\n\n          /**\n           * Transport name.\n           *\n           * @api public\n           */\n\n          WS.prototype.name = 'websocket';\n\n          /*\n           * WebSockets support binary\n           */\n\n          WS.prototype.supportsBinary = true;\n\n          /**\n           * Opens socket.\n           *\n           * @api private\n           */\n\n          WS.prototype.doOpen = function () {\n            if (!this.check()) {\n              // let probe timeout\n              return;\n            }\n\n            var self = this;\n            var uri = this.uri();\n            var protocols = void 0;\n            var opts = {\n              agent: this.agent,\n              perMessageDeflate: this.perMessageDeflate\n            };\n\n            // SSL options for Node.js client\n            opts.pfx = this.pfx;\n            opts.key = this.key;\n            opts.passphrase = this.passphrase;\n            opts.cert = this.cert;\n            opts.ca = this.ca;\n            opts.ciphers = this.ciphers;\n            opts.rejectUnauthorized = this.rejectUnauthorized;\n            if (this.extraHeaders) {\n              opts.headers = this.extraHeaders;\n            }\n\n            this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n\n            if (this.ws.binaryType === undefined) {\n              this.supportsBinary = false;\n            }\n\n            if (this.ws.supports && this.ws.supports.binary) {\n              this.supportsBinary = true;\n              this.ws.binaryType = 'buffer';\n            } else {\n              this.ws.binaryType = 'arraybuffer';\n            }\n\n            this.addEventListeners();\n          };\n\n          /**\n           * Adds event listeners to the socket\n           *\n           * @api private\n           */\n\n          WS.prototype.addEventListeners = function () {\n            var self = this;\n\n            this.ws.onopen = function () {\n              self.onOpen();\n            };\n            this.ws.onclose = function () {\n              self.onClose();\n            };\n            this.ws.onmessage = function (ev) {\n              self.onData(ev.data);\n            };\n            this.ws.onerror = function (e) {\n              self.onError('websocket error', e);\n            };\n          };\n\n          /**\n           * Override `onData` to use a timer on iOS.\n           * See: https://gist.github.com/mloughran/2052006\n           *\n           * @api private\n           */\n\n          if ('undefined' != typeof navigator && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {\n            WS.prototype.onData = function (data) {\n              var self = this;\n              setTimeout(function () {\n                Transport.prototype.onData.call(self, data);\n              }, 0);\n            };\n          }\n\n          /**\n           * Writes data to socket.\n           *\n           * @param {Array} array of packets.\n           * @api private\n           */\n\n          WS.prototype.write = function (packets) {\n            var self = this;\n            this.writable = false;\n\n            // encodePacket efficient as it uses WS framing\n            // no need for encodePayload\n            var total = packets.length;\n            for (var i = 0, l = total; i < l; i++) {\n              (function (packet) {\n                parser.encodePacket(packet, self.supportsBinary, function (data) {\n                  if (!BrowserWebSocket) {\n                    // always create a new object (GH-437)\n                    var opts = {};\n                    if (packet.options) {\n                      opts.compress = packet.options.compress;\n                    }\n\n                    if (self.perMessageDeflate) {\n                      var len = 'string' == typeof data ? global.Buffer.byteLength(data) : data.length;\n                      if (len < self.perMessageDeflate.threshold) {\n                        opts.compress = false;\n                      }\n                    }\n                  }\n\n                  //Sometimes the websocket has already been closed but the browser didn't\n                  //have a chance of informing us about it yet, in that case send will\n                  //throw an error\n                  try {\n                    if (BrowserWebSocket) {\n                      // TypeError is thrown when passing the second argument on Safari\n                      self.ws.send(data);\n                    } else {\n                      self.ws.send(data, opts);\n                    }\n                  } catch (e) {\n                    debug('websocket closed before onclose event');\n                  }\n\n                  --total || done();\n                });\n              })(packets[i]);\n            }\n\n            function done() {\n              self.emit('flush');\n\n              // fake drain\n              // defer to next tick to allow Socket to clear writeBuffer\n              setTimeout(function () {\n                self.writable = true;\n                self.emit('drain');\n              }, 0);\n            }\n          };\n\n          /**\n           * Called upon close\n           *\n           * @api private\n           */\n\n          WS.prototype.onClose = function () {\n            Transport.prototype.onClose.call(this);\n          };\n\n          /**\n           * Closes socket.\n           *\n           * @api private\n           */\n\n          WS.prototype.doClose = function () {\n            if (typeof this.ws !== 'undefined') {\n              this.ws.close();\n            }\n          };\n\n          /**\n           * Generates uri for connection.\n           *\n           * @api private\n           */\n\n          WS.prototype.uri = function () {\n            var query = this.query || {};\n            var schema = this.secure ? 'wss' : 'ws';\n            var port = '';\n\n            // avoid port if default for schema\n            if (this.port && ('wss' == schema && this.port != 443 || 'ws' == schema && this.port != 80)) {\n              port = ':' + this.port;\n            }\n\n            // append timestamp to URI\n            if (this.timestampRequests) {\n              query[this.timestampParam] = yeast();\n            }\n\n            // communicate binary support capabilities\n            if (!this.supportsBinary) {\n              query.b64 = 1;\n            }\n\n            query = parseqs.encode(query);\n\n            // prepend ? to query\n            if (query.length) {\n              query = '?' + query;\n            }\n\n            var ipv6 = this.hostname.indexOf(':') !== -1;\n            return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n          };\n\n          /**\n           * Feature detection for WebSocket.\n           *\n           * @return {Boolean} whether this transport is available.\n           * @api public\n           */\n\n          WS.prototype.check = function () {\n            return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"../transport\": 4, \"component-inherit\": 16, \"debug\": 17, \"engine.io-parser\": 19, \"parseqs\": 27, \"ws\": undefined, \"yeast\": 30 }], 10: [function (_dereq_, module, exports) {\n        // browser shim for xmlhttprequest module\n        var hasCORS = _dereq_('has-cors');\n\n        module.exports = function (opts) {\n          var xdomain = opts.xdomain;\n\n          // scheme must be same when usign XDomainRequest\n          // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n          var xscheme = opts.xscheme;\n\n          // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n          // https://github.com/Automattic/engine.io-client/pull/217\n          var enablesXDR = opts.enablesXDR;\n\n          // XMLHttpRequest can be disabled on IE\n          try {\n            if ('undefined' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n              return new XMLHttpRequest();\n            }\n          } catch (e) {}\n\n          // Use XDomainRequest for IE8 if enablesXDR is true\n          // because loading bar keeps flashing when using jsonp-polling\n          // https://github.com/yujiosaka/socke.io-ie8-loading-example\n          try {\n            if ('undefined' != typeof XDomainRequest && !xscheme && enablesXDR) {\n              return new XDomainRequest();\n            }\n          } catch (e) {}\n\n          if (!xdomain) {\n            try {\n              return new ActiveXObject('Microsoft.XMLHTTP');\n            } catch (e) {}\n          }\n        };\n      }, { \"has-cors\": 22 }], 11: [function (_dereq_, module, exports) {\n        module.exports = after;\n\n        function after(count, callback, err_cb) {\n          var bail = false;\n          err_cb = err_cb || noop;\n          proxy.count = count;\n\n          return count === 0 ? callback() : proxy;\n\n          function proxy(err, result) {\n            if (proxy.count <= 0) {\n              throw new Error('after called too many times');\n            }\n            --proxy.count;\n\n            // after first error, rest are passed to err_cb\n            if (err) {\n              bail = true;\n              callback(err);\n              // future error callbacks will go to error handler\n              callback = err_cb;\n            } else if (proxy.count === 0 && !bail) {\n              callback(null, result);\n            }\n          }\n        }\n\n        function noop() {}\n      }, {}], 12: [function (_dereq_, module, exports) {\n        /**\n         * An abstraction for slicing an arraybuffer even when\n         * ArrayBuffer.prototype.slice is not supported\n         *\n         * @api public\n         */\n\n        module.exports = function (arraybuffer, start, end) {\n          var bytes = arraybuffer.byteLength;\n          start = start || 0;\n          end = end || bytes;\n\n          if (arraybuffer.slice) {\n            return arraybuffer.slice(start, end);\n          }\n\n          if (start < 0) {\n            start += bytes;\n          }\n          if (end < 0) {\n            end += bytes;\n          }\n          if (end > bytes) {\n            end = bytes;\n          }\n\n          if (start >= bytes || start >= end || bytes === 0) {\n            return new ArrayBuffer(0);\n          }\n\n          var abv = new Uint8Array(arraybuffer);\n          var result = new Uint8Array(end - start);\n          for (var i = start, ii = 0; i < end; i++, ii++) {\n            result[ii] = abv[i];\n          }\n          return result.buffer;\n        };\n      }, {}], 13: [function (_dereq_, module, exports) {\n        /*\n         * base64-arraybuffer\n         * https://github.com/niklasvh/base64-arraybuffer\n         *\n         * Copyright (c) 2012 Niklas von Hertzen\n         * Licensed under the MIT license.\n         */\n        (function (chars) {\n          \"use strict\";\n\n          exports.encode = function (arraybuffer) {\n            var bytes = new Uint8Array(arraybuffer),\n                i,\n                len = bytes.length,\n                base64 = \"\";\n\n            for (i = 0; i < len; i += 3) {\n              base64 += chars[bytes[i] >> 2];\n              base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n              base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n              base64 += chars[bytes[i + 2] & 63];\n            }\n\n            if (len % 3 === 2) {\n              base64 = base64.substring(0, base64.length - 1) + \"=\";\n            } else if (len % 3 === 1) {\n              base64 = base64.substring(0, base64.length - 2) + \"==\";\n            }\n\n            return base64;\n          };\n\n          exports.decode = function (base64) {\n            var bufferLength = base64.length * 0.75,\n                len = base64.length,\n                i,\n                p = 0,\n                encoded1,\n                encoded2,\n                encoded3,\n                encoded4;\n\n            if (base64[base64.length - 1] === \"=\") {\n              bufferLength--;\n              if (base64[base64.length - 2] === \"=\") {\n                bufferLength--;\n              }\n            }\n\n            var arraybuffer = new ArrayBuffer(bufferLength),\n                bytes = new Uint8Array(arraybuffer);\n\n            for (i = 0; i < len; i += 4) {\n              encoded1 = chars.indexOf(base64[i]);\n              encoded2 = chars.indexOf(base64[i + 1]);\n              encoded3 = chars.indexOf(base64[i + 2]);\n              encoded4 = chars.indexOf(base64[i + 3]);\n\n              bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n              bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n              bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n            }\n\n            return arraybuffer;\n          };\n        })(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n      }, {}], 14: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Create a blob builder even when vendor prefixes exist\n           */\n\n          var BlobBuilder = global.BlobBuilder || global.WebKitBlobBuilder || global.MSBlobBuilder || global.MozBlobBuilder;\n\n          /**\n           * Check if Blob constructor is supported\n           */\n\n          var blobSupported = (function () {\n            try {\n              var a = new Blob(['hi']);\n              return a.size === 2;\n            } catch (e) {\n              return false;\n            }\n          })();\n\n          /**\n           * Check if Blob constructor supports ArrayBufferViews\n           * Fails in Safari 6, so we need to map to ArrayBuffers there.\n           */\n\n          var blobSupportsArrayBufferView = blobSupported && (function () {\n            try {\n              var b = new Blob([new Uint8Array([1, 2])]);\n              return b.size === 2;\n            } catch (e) {\n              return false;\n            }\n          })();\n\n          /**\n           * Check if BlobBuilder is supported\n           */\n\n          var blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;\n\n          /**\n           * Helper function that maps ArrayBufferViews to ArrayBuffers\n           * Used by BlobBuilder constructor and old browsers that didn't\n           * support it in the Blob constructor.\n           */\n\n          function mapArrayBufferViews(ary) {\n            for (var i = 0; i < ary.length; i++) {\n              var chunk = ary[i];\n              if (chunk.buffer instanceof ArrayBuffer) {\n                var buf = chunk.buffer;\n\n                // if this is a subarray, make a copy so we only\n                // include the subarray region from the underlying buffer\n                if (chunk.byteLength !== buf.byteLength) {\n                  var copy = new Uint8Array(chunk.byteLength);\n                  copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n                  buf = copy.buffer;\n                }\n\n                ary[i] = buf;\n              }\n            }\n          }\n\n          function BlobBuilderConstructor(ary, options) {\n            options = options || {};\n\n            var bb = new BlobBuilder();\n            mapArrayBufferViews(ary);\n\n            for (var i = 0; i < ary.length; i++) {\n              bb.append(ary[i]);\n            }\n\n            return options.type ? bb.getBlob(options.type) : bb.getBlob();\n          };\n\n          function BlobConstructor(ary, options) {\n            mapArrayBufferViews(ary);\n            return new Blob(ary, options || {});\n          };\n\n          module.exports = (function () {\n            if (blobSupported) {\n              return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n            } else if (blobBuilderSupported) {\n              return BlobBuilderConstructor;\n            } else {\n              return undefined;\n            }\n          })();\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 15: [function (_dereq_, module, exports) {\n\n        /**\n         * Expose `Emitter`.\n         */\n\n        module.exports = Emitter;\n\n        /**\n         * Initialize a new `Emitter`.\n         *\n         * @api public\n         */\n\n        function Emitter(obj) {\n          if (obj) return mixin(obj);\n        };\n\n        /**\n         * Mixin the emitter properties.\n         *\n         * @param {Object} obj\n         * @return {Object}\n         * @api private\n         */\n\n        function mixin(obj) {\n          for (var key in Emitter.prototype) {\n            obj[key] = Emitter.prototype[key];\n          }\n          return obj;\n        }\n\n        /**\n         * Listen on the given `event` with `fn`.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n          this._callbacks = this._callbacks || {};\n          (this._callbacks[event] = this._callbacks[event] || []).push(fn);\n          return this;\n        };\n\n        /**\n         * Adds an `event` listener that will be invoked a single\n         * time then automatically removed.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.once = function (event, fn) {\n          var self = this;\n          this._callbacks = this._callbacks || {};\n\n          function on() {\n            self.off(event, on);\n            fn.apply(this, arguments);\n          }\n\n          on.fn = fn;\n          this.on(event, on);\n          return this;\n        };\n\n        /**\n         * Remove the given callback for `event` or all\n         * registered callbacks.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n          this._callbacks = this._callbacks || {};\n\n          // all\n          if (0 == arguments.length) {\n            this._callbacks = {};\n            return this;\n          }\n\n          // specific event\n          var callbacks = this._callbacks[event];\n          if (!callbacks) return this;\n\n          // remove all handlers\n          if (1 == arguments.length) {\n            delete this._callbacks[event];\n            return this;\n          }\n\n          // remove specific handler\n          var cb;\n          for (var i = 0; i < callbacks.length; i++) {\n            cb = callbacks[i];\n            if (cb === fn || cb.fn === fn) {\n              callbacks.splice(i, 1);\n              break;\n            }\n          }\n          return this;\n        };\n\n        /**\n         * Emit `event` with the given args.\n         *\n         * @param {String} event\n         * @param {Mixed} ...\n         * @return {Emitter}\n         */\n\n        Emitter.prototype.emit = function (event) {\n          this._callbacks = this._callbacks || {};\n          var args = [].slice.call(arguments, 1),\n              callbacks = this._callbacks[event];\n\n          if (callbacks) {\n            callbacks = callbacks.slice(0);\n            for (var i = 0, len = callbacks.length; i < len; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n\n          return this;\n        };\n\n        /**\n         * Return array of callbacks for `event`.\n         *\n         * @param {String} event\n         * @return {Array}\n         * @api public\n         */\n\n        Emitter.prototype.listeners = function (event) {\n          this._callbacks = this._callbacks || {};\n          return this._callbacks[event] || [];\n        };\n\n        /**\n         * Check if this emitter has `event` handlers.\n         *\n         * @param {String} event\n         * @return {Boolean}\n         * @api public\n         */\n\n        Emitter.prototype.hasListeners = function (event) {\n          return !!this.listeners(event).length;\n        };\n      }, {}], 16: [function (_dereq_, module, exports) {\n\n        module.exports = function (a, b) {\n          var fn = function fn() {};\n          fn.prototype = b.prototype;\n          a.prototype = new fn();\n          a.prototype.constructor = a;\n        };\n      }, {}], 17: [function (_dereq_, module, exports) {\n\n        /**\n         * This is the web browser implementation of `debug()`.\n         *\n         * Expose `debug()` as the module.\n         */\n\n        exports = module.exports = _dereq_('./debug');\n        exports.log = log;\n        exports.formatArgs = formatArgs;\n        exports.save = save;\n        exports.load = load;\n        exports.useColors = useColors;\n        exports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n\n        /**\n         * Colors.\n         */\n\n        exports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];\n\n        /**\n         * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n         * and the Firebug extension (any Firefox version) are known\n         * to support \"%c\" CSS customizations.\n         *\n         * TODO: add a `localStorage` variable to explicitly enable/disable colors\n         */\n\n        function useColors() {\n          // is webkit? http://stackoverflow.com/a/16459606/376773\n          return 'WebkitAppearance' in document.documentElement.style ||\n          // is firebug? http://stackoverflow.com/a/398120/376773\n          window.console && (console.firebug || console.exception && console.table) ||\n          // is firefox >= v31?\n          // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n          navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31;\n        }\n\n        /**\n         * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n         */\n\n        exports.formatters.j = function (v) {\n          return JSON.stringify(v);\n        };\n\n        /**\n         * Colorize log arguments if enabled.\n         *\n         * @api public\n         */\n\n        function formatArgs() {\n          var args = arguments;\n          var useColors = this.useColors;\n\n          args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n\n          if (!useColors) return args;\n\n          var c = 'color: ' + this.color;\n          args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n          // the final \"%c\" is somewhat tricky, because there could be other\n          // arguments passed either before or after the %c, so we need to\n          // figure out the correct index to insert the CSS into\n          var index = 0;\n          var lastC = 0;\n          args[0].replace(/%[a-z%]/g, function (match) {\n            if ('%%' === match) return;\n            index++;\n            if ('%c' === match) {\n              // we only are interested in the *last* %c\n              // (the user may have provided their own)\n              lastC = index;\n            }\n          });\n\n          args.splice(lastC, 0, c);\n          return args;\n        }\n\n        /**\n         * Invokes `console.log()` when available.\n         * No-op when `console.log` is not a \"function\".\n         *\n         * @api public\n         */\n\n        function log() {\n          // this hackery is required for IE8/9, where\n          // the `console.log` function doesn't have 'apply'\n\n          return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n        }\n\n        /**\n         * Save `namespaces`.\n         *\n         * @param {String} namespaces\n         * @api private\n         */\n\n        function save(namespaces) {\n          try {\n            if (null == namespaces) {\n              exports.storage.removeItem('debug');\n            } else {\n              exports.storage.debug = namespaces;\n            }\n          } catch (e) {}\n        }\n\n        /**\n         * Load `namespaces`.\n         *\n         * @return {String} returns the previously persisted debug modes\n         * @api private\n         */\n\n        function load() {\n          var r;\n          try {\n            r = exports.storage.debug;\n          } catch (e) {}\n          return r;\n        }\n\n        /**\n         * Enable namespaces listed in `localStorage.debug` initially.\n         */\n\n        exports.enable(load());\n\n        /**\n         * Localstorage attempts to return the localstorage.\n         *\n         * This is necessary because safari throws\n         * when a user disables cookies/localstorage\n         * and you attempt to access it.\n         *\n         * @return {LocalStorage}\n         * @api private\n         */\n\n        function localstorage() {\n          try {\n            return window.localStorage;\n          } catch (e) {}\n        }\n      }, { \"./debug\": 18 }], 18: [function (_dereq_, module, exports) {\n\n        /**\n         * This is the common logic for both the Node.js and web browser\n         * implementations of `debug()`.\n         *\n         * Expose `debug()` as the module.\n         */\n\n        exports = module.exports = debug;\n        exports.coerce = coerce;\n        exports.disable = disable;\n        exports.enable = enable;\n        exports.enabled = enabled;\n        exports.humanize = _dereq_('ms');\n\n        /**\n         * The currently active debug mode names, and names to skip.\n         */\n\n        exports.names = [];\n        exports.skips = [];\n\n        /**\n         * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n         *\n         * Valid key names are a single, lowercased letter, i.e. \"n\".\n         */\n\n        exports.formatters = {};\n\n        /**\n         * Previously assigned color.\n         */\n\n        var prevColor = 0;\n\n        /**\n         * Previous log timestamp.\n         */\n\n        var prevTime;\n\n        /**\n         * Select a color.\n         *\n         * @return {Number}\n         * @api private\n         */\n\n        function selectColor() {\n          return exports.colors[prevColor++ % exports.colors.length];\n        }\n\n        /**\n         * Create a debugger with the given `namespace`.\n         *\n         * @param {String} namespace\n         * @return {Function}\n         * @api public\n         */\n\n        function debug(namespace) {\n\n          // define the `disabled` version\n          function disabled() {}\n          disabled.enabled = false;\n\n          // define the `enabled` version\n          function enabled() {\n\n            var self = enabled;\n\n            // set `diff` timestamp\n            var curr = +new Date();\n            var ms = curr - (prevTime || curr);\n            self.diff = ms;\n            self.prev = prevTime;\n            self.curr = curr;\n            prevTime = curr;\n\n            // add the `color` if not set\n            if (null == self.useColors) self.useColors = exports.useColors();\n            if (null == self.color && self.useColors) self.color = selectColor();\n\n            var args = Array.prototype.slice.call(arguments);\n\n            args[0] = exports.coerce(args[0]);\n\n            if ('string' !== typeof args[0]) {\n              // anything else let's inspect with %o\n              args = ['%o'].concat(args);\n            }\n\n            // apply any `formatters` transformations\n            var index = 0;\n            args[0] = args[0].replace(/%([a-z%])/g, function (match, format) {\n              // if we encounter an escaped % then don't increase the array index\n              if (match === '%%') return match;\n              index++;\n              var formatter = exports.formatters[format];\n              if ('function' === typeof formatter) {\n                var val = args[index];\n                match = formatter.call(self, val);\n\n                // now we need to remove `args[index]` since it's inlined in the `format`\n                args.splice(index, 1);\n                index--;\n              }\n              return match;\n            });\n\n            if ('function' === typeof exports.formatArgs) {\n              args = exports.formatArgs.apply(self, args);\n            }\n            var logFn = enabled.log || exports.log || console.log.bind(console);\n            logFn.apply(self, args);\n          }\n          enabled.enabled = true;\n\n          var fn = exports.enabled(namespace) ? enabled : disabled;\n\n          fn.namespace = namespace;\n\n          return fn;\n        }\n\n        /**\n         * Enables a debug mode by namespaces. This can include modes\n         * separated by a colon and wildcards.\n         *\n         * @param {String} namespaces\n         * @api public\n         */\n\n        function enable(namespaces) {\n          exports.save(namespaces);\n\n          var split = (namespaces || '').split(/[\\s,]+/);\n          var len = split.length;\n\n          for (var i = 0; i < len; i++) {\n            if (!split[i]) continue; // ignore empty strings\n            namespaces = split[i].replace(/\\*/g, '.*?');\n            if (namespaces[0] === '-') {\n              exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n            } else {\n              exports.names.push(new RegExp('^' + namespaces + '$'));\n            }\n          }\n        }\n\n        /**\n         * Disable debug output.\n         *\n         * @api public\n         */\n\n        function disable() {\n          exports.enable('');\n        }\n\n        /**\n         * Returns true if the given mode name is enabled, false otherwise.\n         *\n         * @param {String} name\n         * @return {Boolean}\n         * @api public\n         */\n\n        function enabled(name) {\n          var i, len;\n          for (i = 0, len = exports.skips.length; i < len; i++) {\n            if (exports.skips[i].test(name)) {\n              return false;\n            }\n          }\n          for (i = 0, len = exports.names.length; i < len; i++) {\n            if (exports.names[i].test(name)) {\n              return true;\n            }\n          }\n          return false;\n        }\n\n        /**\n         * Coerce `val`.\n         *\n         * @param {Mixed} val\n         * @return {Mixed}\n         * @api private\n         */\n\n        function coerce(val) {\n          if (val instanceof Error) return val.stack || val.message;\n          return val;\n        }\n      }, { \"ms\": 25 }], 19: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module dependencies.\n           */\n\n          var keys = _dereq_('./keys');\n          var hasBinary = _dereq_('has-binary');\n          var sliceBuffer = _dereq_('arraybuffer.slice');\n          var base64encoder = _dereq_('base64-arraybuffer');\n          var after = _dereq_('after');\n          var utf8 = _dereq_('utf8');\n\n          /**\n           * Check if we are running an android browser. That requires us to use\n           * ArrayBuffer with polling transports...\n           *\n           * http://ghinda.net/jpeg-blob-ajax-android/\n           */\n\n          var isAndroid = navigator.userAgent.match(/Android/i);\n\n          /**\n           * Check if we are running in PhantomJS.\n           * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n           * https://github.com/ariya/phantomjs/issues/11395\n           * @type boolean\n           */\n          var isPhantomJS = /PhantomJS/i.test(navigator.userAgent);\n\n          /**\n           * When true, avoids using Blobs to encode payloads.\n           * @type boolean\n           */\n          var dontSendBlobs = isAndroid || isPhantomJS;\n\n          /**\n           * Current protocol version.\n           */\n\n          exports.protocol = 3;\n\n          /**\n           * Packet types.\n           */\n\n          var packets = exports.packets = {\n            open: 0, // non-ws\n            close: 1, // non-ws\n            ping: 2,\n            pong: 3,\n            message: 4,\n            upgrade: 5,\n            noop: 6\n          };\n\n          var packetslist = keys(packets);\n\n          /**\n           * Premade error packet.\n           */\n\n          var err = { type: 'error', data: 'parser error' };\n\n          /**\n           * Create a blob api even for blob builder when vendor prefixes exist\n           */\n\n          var Blob = _dereq_('blob');\n\n          /**\n           * Encodes a packet.\n           *\n           *     <packet type id> [ <data> ]\n           *\n           * Example:\n           *\n           *     5hello world\n           *     3\n           *     4\n           *\n           * Binary is encoded in an identical principle\n           *\n           * @api private\n           */\n\n          exports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n            if ('function' == typeof supportsBinary) {\n              callback = supportsBinary;\n              supportsBinary = false;\n            }\n\n            if ('function' == typeof utf8encode) {\n              callback = utf8encode;\n              utf8encode = null;\n            }\n\n            var data = packet.data === undefined ? undefined : packet.data.buffer || packet.data;\n\n            if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n              return encodeArrayBuffer(packet, supportsBinary, callback);\n            } else if (Blob && data instanceof global.Blob) {\n              return encodeBlob(packet, supportsBinary, callback);\n            }\n\n            // might be an object with { base64: true, data: dataAsBase64String }\n            if (data && data.base64) {\n              return encodeBase64Object(packet, callback);\n            }\n\n            // Sending data as a utf-8 string\n            var encoded = packets[packet.type];\n\n            // data fragment is optional\n            if (undefined !== packet.data) {\n              encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n            }\n\n            return callback('' + encoded);\n          };\n\n          function encodeBase64Object(packet, callback) {\n            // packet data is an object { base64: true, data: dataAsBase64String }\n            var message = 'b' + exports.packets[packet.type] + packet.data.data;\n            return callback(message);\n          }\n\n          /**\n           * Encode packet helpers for binary types\n           */\n\n          function encodeArrayBuffer(packet, supportsBinary, callback) {\n            if (!supportsBinary) {\n              return exports.encodeBase64Packet(packet, callback);\n            }\n\n            var data = packet.data;\n            var contentArray = new Uint8Array(data);\n            var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n            resultBuffer[0] = packets[packet.type];\n            for (var i = 0; i < contentArray.length; i++) {\n              resultBuffer[i + 1] = contentArray[i];\n            }\n\n            return callback(resultBuffer.buffer);\n          }\n\n          function encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n            if (!supportsBinary) {\n              return exports.encodeBase64Packet(packet, callback);\n            }\n\n            var fr = new FileReader();\n            fr.onload = function () {\n              packet.data = fr.result;\n              exports.encodePacket(packet, supportsBinary, true, callback);\n            };\n            return fr.readAsArrayBuffer(packet.data);\n          }\n\n          function encodeBlob(packet, supportsBinary, callback) {\n            if (!supportsBinary) {\n              return exports.encodeBase64Packet(packet, callback);\n            }\n\n            if (dontSendBlobs) {\n              return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n            }\n\n            var length = new Uint8Array(1);\n            length[0] = packets[packet.type];\n            var blob = new Blob([length.buffer, packet.data]);\n\n            return callback(blob);\n          }\n\n          /**\n           * Encodes a packet with binary data in a base64 string\n           *\n           * @param {Object} packet, has `type` and `data`\n           * @return {String} base64 encoded message\n           */\n\n          exports.encodeBase64Packet = function (packet, callback) {\n            var message = 'b' + exports.packets[packet.type];\n            if (Blob && packet.data instanceof global.Blob) {\n              var fr = new FileReader();\n              fr.onload = function () {\n                var b64 = fr.result.split(',')[1];\n                callback(message + b64);\n              };\n              return fr.readAsDataURL(packet.data);\n            }\n\n            var b64data;\n            try {\n              b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n            } catch (e) {\n              // iPhone Safari doesn't let you apply with typed arrays\n              var typed = new Uint8Array(packet.data);\n              var basic = new Array(typed.length);\n              for (var i = 0; i < typed.length; i++) {\n                basic[i] = typed[i];\n              }\n              b64data = String.fromCharCode.apply(null, basic);\n            }\n            message += global.btoa(b64data);\n            return callback(message);\n          };\n\n          /**\n           * Decodes a packet. Changes format to Blob if requested.\n           *\n           * @return {Object} with `type` and `data` (if any)\n           * @api private\n           */\n\n          exports.decodePacket = function (data, binaryType, utf8decode) {\n            // String data\n            if (typeof data == 'string' || data === undefined) {\n              if (data.charAt(0) == 'b') {\n                return exports.decodeBase64Packet(data.substr(1), binaryType);\n              }\n\n              if (utf8decode) {\n                try {\n                  data = utf8.decode(data);\n                } catch (e) {\n                  return err;\n                }\n              }\n              var type = data.charAt(0);\n\n              if (Number(type) != type || !packetslist[type]) {\n                return err;\n              }\n\n              if (data.length > 1) {\n                return { type: packetslist[type], data: data.substring(1) };\n              } else {\n                return { type: packetslist[type] };\n              }\n            }\n\n            var asArray = new Uint8Array(data);\n            var type = asArray[0];\n            var rest = sliceBuffer(data, 1);\n            if (Blob && binaryType === 'blob') {\n              rest = new Blob([rest]);\n            }\n            return { type: packetslist[type], data: rest };\n          };\n\n          /**\n           * Decodes a packet encoded in a base64 string\n           *\n           * @param {String} base64 encoded message\n           * @return {Object} with `type` and `data` (if any)\n           */\n\n          exports.decodeBase64Packet = function (msg, binaryType) {\n            var type = packetslist[msg.charAt(0)];\n            if (!global.ArrayBuffer) {\n              return { type: type, data: { base64: true, data: msg.substr(1) } };\n            }\n\n            var data = base64encoder.decode(msg.substr(1));\n\n            if (binaryType === 'blob' && Blob) {\n              data = new Blob([data]);\n            }\n\n            return { type: type, data: data };\n          };\n\n          /**\n           * Encodes multiple messages (payload).\n           *\n           *     <length>:data\n           *\n           * Example:\n           *\n           *     11:hello world2:hi\n           *\n           * If any contents are binary, they will be encoded as base64 strings. Base64\n           * encoded strings are marked with a b before the length specifier\n           *\n           * @param {Array} packets\n           * @api private\n           */\n\n          exports.encodePayload = function (packets, supportsBinary, callback) {\n            if (typeof supportsBinary == 'function') {\n              callback = supportsBinary;\n              supportsBinary = null;\n            }\n\n            var isBinary = hasBinary(packets);\n\n            if (supportsBinary && isBinary) {\n              if (Blob && !dontSendBlobs) {\n                return exports.encodePayloadAsBlob(packets, callback);\n              }\n\n              return exports.encodePayloadAsArrayBuffer(packets, callback);\n            }\n\n            if (!packets.length) {\n              return callback('0:');\n            }\n\n            function setLengthHeader(message) {\n              return message.length + ':' + message;\n            }\n\n            function encodeOne(packet, doneCallback) {\n              exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function (message) {\n                doneCallback(null, setLengthHeader(message));\n              });\n            }\n\n            map(packets, encodeOne, function (err, results) {\n              return callback(results.join(''));\n            });\n          };\n\n          /**\n           * Async array map using after\n           */\n\n          function map(ary, each, done) {\n            var result = new Array(ary.length);\n            var next = after(ary.length, done);\n\n            var eachWithIndex = function eachWithIndex(i, el, cb) {\n              each(el, function (error, msg) {\n                result[i] = msg;\n                cb(error, result);\n              });\n            };\n\n            for (var i = 0; i < ary.length; i++) {\n              eachWithIndex(i, ary[i], next);\n            }\n          }\n\n          /*\n           * Decodes data when a payload is maybe expected. Possible binary contents are\n           * decoded from their base64 representation\n           *\n           * @param {String} data, callback method\n           * @api public\n           */\n\n          exports.decodePayload = function (data, binaryType, callback) {\n            if (typeof data != 'string') {\n              return exports.decodePayloadAsBinary(data, binaryType, callback);\n            }\n\n            if (typeof binaryType === 'function') {\n              callback = binaryType;\n              binaryType = null;\n            }\n\n            var packet;\n            if (data == '') {\n              // parser error - ignoring payload\n              return callback(err, 0, 1);\n            }\n\n            var length = '',\n                n,\n                msg;\n\n            for (var i = 0, l = data.length; i < l; i++) {\n              var chr = data.charAt(i);\n\n              if (':' != chr) {\n                length += chr;\n              } else {\n                if ('' == length || length != (n = Number(length))) {\n                  // parser error - ignoring payload\n                  return callback(err, 0, 1);\n                }\n\n                msg = data.substr(i + 1, n);\n\n                if (length != msg.length) {\n                  // parser error - ignoring payload\n                  return callback(err, 0, 1);\n                }\n\n                if (msg.length) {\n                  packet = exports.decodePacket(msg, binaryType, true);\n\n                  if (err.type == packet.type && err.data == packet.data) {\n                    // parser error in individual packet - ignoring payload\n                    return callback(err, 0, 1);\n                  }\n\n                  var ret = callback(packet, i + n, l);\n                  if (false === ret) return;\n                }\n\n                // advance cursor\n                i += n;\n                length = '';\n              }\n            }\n\n            if (length != '') {\n              // parser error - ignoring payload\n              return callback(err, 0, 1);\n            }\n          };\n\n          /**\n           * Encodes multiple messages (payload) as binary.\n           *\n           * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n           * 255><data>\n           *\n           * Example:\n           * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n           *\n           * @param {Array} packets\n           * @return {ArrayBuffer} encoded payload\n           * @api private\n           */\n\n          exports.encodePayloadAsArrayBuffer = function (packets, callback) {\n            if (!packets.length) {\n              return callback(new ArrayBuffer(0));\n            }\n\n            function encodeOne(packet, doneCallback) {\n              exports.encodePacket(packet, true, true, function (data) {\n                return doneCallback(null, data);\n              });\n            }\n\n            map(packets, encodeOne, function (err, encodedPackets) {\n              var totalLength = encodedPackets.reduce(function (acc, p) {\n                var len;\n                if (typeof p === 'string') {\n                  len = p.length;\n                } else {\n                  len = p.byteLength;\n                }\n                return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n              }, 0);\n\n              var resultArray = new Uint8Array(totalLength);\n\n              var bufferIndex = 0;\n              encodedPackets.forEach(function (p) {\n                var isString = typeof p === 'string';\n                var ab = p;\n                if (isString) {\n                  var view = new Uint8Array(p.length);\n                  for (var i = 0; i < p.length; i++) {\n                    view[i] = p.charCodeAt(i);\n                  }\n                  ab = view.buffer;\n                }\n\n                if (isString) {\n                  // not true binary\n                  resultArray[bufferIndex++] = 0;\n                } else {\n                  // true binary\n                  resultArray[bufferIndex++] = 1;\n                }\n\n                var lenStr = ab.byteLength.toString();\n                for (var i = 0; i < lenStr.length; i++) {\n                  resultArray[bufferIndex++] = parseInt(lenStr[i]);\n                }\n                resultArray[bufferIndex++] = 255;\n\n                var view = new Uint8Array(ab);\n                for (var i = 0; i < view.length; i++) {\n                  resultArray[bufferIndex++] = view[i];\n                }\n              });\n\n              return callback(resultArray.buffer);\n            });\n          };\n\n          /**\n           * Encode as Blob\n           */\n\n          exports.encodePayloadAsBlob = function (packets, callback) {\n            function encodeOne(packet, doneCallback) {\n              exports.encodePacket(packet, true, true, function (encoded) {\n                var binaryIdentifier = new Uint8Array(1);\n                binaryIdentifier[0] = 1;\n                if (typeof encoded === 'string') {\n                  var view = new Uint8Array(encoded.length);\n                  for (var i = 0; i < encoded.length; i++) {\n                    view[i] = encoded.charCodeAt(i);\n                  }\n                  encoded = view.buffer;\n                  binaryIdentifier[0] = 0;\n                }\n\n                var len = encoded instanceof ArrayBuffer ? encoded.byteLength : encoded.size;\n\n                var lenStr = len.toString();\n                var lengthAry = new Uint8Array(lenStr.length + 1);\n                for (var i = 0; i < lenStr.length; i++) {\n                  lengthAry[i] = parseInt(lenStr[i]);\n                }\n                lengthAry[lenStr.length] = 255;\n\n                if (Blob) {\n                  var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n                  doneCallback(null, blob);\n                }\n              });\n            }\n\n            map(packets, encodeOne, function (err, results) {\n              return callback(new Blob(results));\n            });\n          };\n\n          /*\n           * Decodes data when a payload is maybe expected. Strings are decoded by\n           * interpreting each byte as a key code for entries marked to start with 0. See\n           * description of encodePayloadAsBinary\n           *\n           * @param {ArrayBuffer} data, callback method\n           * @api public\n           */\n\n          exports.decodePayloadAsBinary = function (data, binaryType, callback) {\n            if (typeof binaryType === 'function') {\n              callback = binaryType;\n              binaryType = null;\n            }\n\n            var bufferTail = data;\n            var buffers = [];\n\n            var numberTooLong = false;\n            while (bufferTail.byteLength > 0) {\n              var tailArray = new Uint8Array(bufferTail);\n              var isString = tailArray[0] === 0;\n              var msgLength = '';\n\n              for (var i = 1;; i++) {\n                if (tailArray[i] == 255) break;\n\n                if (msgLength.length > 310) {\n                  numberTooLong = true;\n                  break;\n                }\n\n                msgLength += tailArray[i];\n              }\n\n              if (numberTooLong) return callback(err, 0, 1);\n\n              bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n              msgLength = parseInt(msgLength);\n\n              var msg = sliceBuffer(bufferTail, 0, msgLength);\n              if (isString) {\n                try {\n                  msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n                } catch (e) {\n                  // iPhone Safari doesn't let you apply to typed arrays\n                  var typed = new Uint8Array(msg);\n                  msg = '';\n                  for (var i = 0; i < typed.length; i++) {\n                    msg += String.fromCharCode(typed[i]);\n                  }\n                }\n              }\n\n              buffers.push(msg);\n              bufferTail = sliceBuffer(bufferTail, msgLength);\n            }\n\n            var total = buffers.length;\n            buffers.forEach(function (buffer, i) {\n              callback(exports.decodePacket(buffer, binaryType, true), i, total);\n            });\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./keys\": 20, \"after\": 11, \"arraybuffer.slice\": 12, \"base64-arraybuffer\": 13, \"blob\": 14, \"has-binary\": 21, \"utf8\": 29 }], 20: [function (_dereq_, module, exports) {\n\n        /**\n         * Gets the keys for an object.\n         *\n         * @return {Array} keys\n         * @api private\n         */\n\n        module.exports = Object.keys || function keys(obj) {\n          var arr = [];\n          var has = Object.prototype.hasOwnProperty;\n\n          for (var i in obj) {\n            if (has.call(obj, i)) {\n              arr.push(i);\n            }\n          }\n          return arr;\n        };\n      }, {}], 21: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          /*\n           * Module requirements.\n           */\n\n          var isArray = _dereq_('isarray');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = hasBinary;\n\n          /**\n           * Checks for binary data.\n           *\n           * Right now only Buffer and ArrayBuffer are supported..\n           *\n           * @param {Object} anything\n           * @api public\n           */\n\n          function hasBinary(data) {\n\n            function _hasBinary(obj) {\n              if (!obj) return false;\n\n              if (global.Buffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer || global.Blob && obj instanceof Blob || global.File && obj instanceof File) {\n                return true;\n              }\n\n              if (isArray(obj)) {\n                for (var i = 0; i < obj.length; i++) {\n                  if (_hasBinary(obj[i])) {\n                    return true;\n                  }\n                }\n              } else if (obj && 'object' == typeof obj) {\n                if (obj.toJSON) {\n                  obj = obj.toJSON();\n                }\n\n                for (var key in obj) {\n                  if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n                    return true;\n                  }\n                }\n              }\n\n              return false;\n            }\n\n            return _hasBinary(data);\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"isarray\": 24 }], 22: [function (_dereq_, module, exports) {\n\n        /**\n         * Module exports.\n         *\n         * Logic borrowed from Modernizr:\n         *\n         *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n         */\n\n        try {\n          module.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();\n        } catch (err) {\n          // if XMLHttp support is disabled in IE then it will throw\n          // when trying to create\n          module.exports = false;\n        }\n      }, {}], 23: [function (_dereq_, module, exports) {\n\n        var indexOf = [].indexOf;\n\n        module.exports = function (arr, obj) {\n          if (indexOf) return arr.indexOf(obj);\n          for (var i = 0; i < arr.length; ++i) {\n            if (arr[i] === obj) return i;\n          }\n          return -1;\n        };\n      }, {}], 24: [function (_dereq_, module, exports) {\n        module.exports = Array.isArray || function (arr) {\n          return Object.prototype.toString.call(arr) == '[object Array]';\n        };\n      }, {}], 25: [function (_dereq_, module, exports) {\n        /**\n         * Helpers.\n         */\n\n        var s = 1000;\n        var m = s * 60;\n        var h = m * 60;\n        var d = h * 24;\n        var y = d * 365.25;\n\n        /**\n         * Parse or format the given `val`.\n         *\n         * Options:\n         *\n         *  - `long` verbose formatting [false]\n         *\n         * @param {String|Number} val\n         * @param {Object} options\n         * @return {String|Number}\n         * @api public\n         */\n\n        module.exports = function (val, options) {\n          options = options || {};\n          if ('string' == typeof val) return parse(val);\n          return options.long ? long(val) : short(val);\n        };\n\n        /**\n         * Parse the given `str` and return milliseconds.\n         *\n         * @param {String} str\n         * @return {Number}\n         * @api private\n         */\n\n        function parse(str) {\n          str = '' + str;\n          if (str.length > 10000) return;\n          var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n          if (!match) return;\n          var n = parseFloat(match[1]);\n          var type = (match[2] || 'ms').toLowerCase();\n          switch (type) {\n            case 'years':\n            case 'year':\n            case 'yrs':\n            case 'yr':\n            case 'y':\n              return n * y;\n            case 'days':\n            case 'day':\n            case 'd':\n              return n * d;\n            case 'hours':\n            case 'hour':\n            case 'hrs':\n            case 'hr':\n            case 'h':\n              return n * h;\n            case 'minutes':\n            case 'minute':\n            case 'mins':\n            case 'min':\n            case 'm':\n              return n * m;\n            case 'seconds':\n            case 'second':\n            case 'secs':\n            case 'sec':\n            case 's':\n              return n * s;\n            case 'milliseconds':\n            case 'millisecond':\n            case 'msecs':\n            case 'msec':\n            case 'ms':\n              return n;\n          }\n        }\n\n        /**\n         * Short format for `ms`.\n         *\n         * @param {Number} ms\n         * @return {String}\n         * @api private\n         */\n\n        function short(ms) {\n          if (ms >= d) return Math.round(ms / d) + 'd';\n          if (ms >= h) return Math.round(ms / h) + 'h';\n          if (ms >= m) return Math.round(ms / m) + 'm';\n          if (ms >= s) return Math.round(ms / s) + 's';\n          return ms + 'ms';\n        }\n\n        /**\n         * Long format for `ms`.\n         *\n         * @param {Number} ms\n         * @return {String}\n         * @api private\n         */\n\n        function long(ms) {\n          return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n        }\n\n        /**\n         * Pluralization helper.\n         */\n\n        function plural(ms, n, name) {\n          if (ms < n) return;\n          if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n          return Math.ceil(ms / n) + ' ' + name + 's';\n        }\n      }, {}], 26: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * JSON parse.\n           *\n           * @see Based on jQuery#parseJSON (MIT) and JSON2\n           * @api private\n           */\n\n          var rvalidchars = /^[\\],:{}\\s]*$/;\n          var rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n          var rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n          var rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\n          var rtrimLeft = /^\\s+/;\n          var rtrimRight = /\\s+$/;\n\n          module.exports = function parsejson(data) {\n            if ('string' != typeof data || !data) {\n              return null;\n            }\n\n            data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\n            // Attempt to parse using the native JSON parser first\n            if (global.JSON && JSON.parse) {\n              return JSON.parse(data);\n            }\n\n            if (rvalidchars.test(data.replace(rvalidescape, '@').replace(rvalidtokens, ']').replace(rvalidbraces, ''))) {\n              return new Function('return ' + data)();\n            }\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 27: [function (_dereq_, module, exports) {\n        /**\n         * Compiles a querystring\n         * Returns string representation of the object\n         *\n         * @param {Object}\n         * @api private\n         */\n\n        exports.encode = function (obj) {\n          var str = '';\n\n          for (var i in obj) {\n            if (obj.hasOwnProperty(i)) {\n              if (str.length) str += '&';\n              str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n            }\n          }\n\n          return str;\n        };\n\n        /**\n         * Parses a simple querystring into an object\n         *\n         * @param {String} qs\n         * @api private\n         */\n\n        exports.decode = function (qs) {\n          var qry = {};\n          var pairs = qs.split('&');\n          for (var i = 0, l = pairs.length; i < l; i++) {\n            var pair = pairs[i].split('=');\n            qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n          }\n          return qry;\n        };\n      }, {}], 28: [function (_dereq_, module, exports) {\n        /**\n         * Parses an URI\n         *\n         * @author Steven Levithan <stevenlevithan.com> (MIT license)\n         * @api private\n         */\n\n        var re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\n        var parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];\n\n        module.exports = function parseuri(str) {\n          var src = str,\n              b = str.indexOf('['),\n              e = str.indexOf(']');\n\n          if (b != -1 && e != -1) {\n            str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n          }\n\n          var m = re.exec(str || ''),\n              uri = {},\n              i = 14;\n\n          while (i--) {\n            uri[parts[i]] = m[i] || '';\n          }\n\n          if (b != -1 && e != -1) {\n            uri.source = src;\n            uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n            uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n            uri.ipv6uri = true;\n          }\n\n          return uri;\n        };\n      }, {}], 29: [function (_dereq_, module, exports) {\n        (function (global) {\n          /*! https://mths.be/utf8js v2.0.0 by @mathias */\n          ;(function (root) {\n\n            // Detect free variables `exports`\n            var freeExports = typeof exports == 'object' && exports;\n\n            // Detect free variable `module`\n            var freeModule = typeof module == 'object' && module && module.exports == freeExports && module;\n\n            // Detect free variable `global`, from Node.js or Browserified code,\n            // and use it as `root`\n            var freeGlobal = typeof global == 'object' && global;\n            if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n              root = freeGlobal;\n            }\n\n            /*--------------------------------------------------------------------------*/\n\n            var stringFromCharCode = String.fromCharCode;\n\n            // Taken from https://mths.be/punycode\n            function ucs2decode(string) {\n              var output = [];\n              var counter = 0;\n              var length = string.length;\n              var value;\n              var extra;\n              while (counter < length) {\n                value = string.charCodeAt(counter++);\n                if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n                  // high surrogate, and there is a next character\n                  extra = string.charCodeAt(counter++);\n                  if ((extra & 0xFC00) == 0xDC00) {\n                    // low surrogate\n                    output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n                  } else {\n                    // unmatched surrogate; only append this code unit, in case the next\n                    // code unit is the high surrogate of a surrogate pair\n                    output.push(value);\n                    counter--;\n                  }\n                } else {\n                  output.push(value);\n                }\n              }\n              return output;\n            }\n\n            // Taken from https://mths.be/punycode\n            function ucs2encode(array) {\n              var length = array.length;\n              var index = -1;\n              var value;\n              var output = '';\n              while (++index < length) {\n                value = array[index];\n                if (value > 0xFFFF) {\n                  value -= 0x10000;\n                  output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n                  value = 0xDC00 | value & 0x3FF;\n                }\n                output += stringFromCharCode(value);\n              }\n              return output;\n            }\n\n            function checkScalarValue(codePoint) {\n              if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n                throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() + ' is not a scalar value');\n              }\n            }\n            /*--------------------------------------------------------------------------*/\n\n            function createByte(codePoint, shift) {\n              return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);\n            }\n\n            function encodeCodePoint(codePoint) {\n              if ((codePoint & 0xFFFFFF80) == 0) {\n                // 1-byte sequence\n                return stringFromCharCode(codePoint);\n              }\n              var symbol = '';\n              if ((codePoint & 0xFFFFF800) == 0) {\n                // 2-byte sequence\n                symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);\n              } else if ((codePoint & 0xFFFF0000) == 0) {\n                // 3-byte sequence\n                checkScalarValue(codePoint);\n                symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);\n                symbol += createByte(codePoint, 6);\n              } else if ((codePoint & 0xFFE00000) == 0) {\n                // 4-byte sequence\n                symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);\n                symbol += createByte(codePoint, 12);\n                symbol += createByte(codePoint, 6);\n              }\n              symbol += stringFromCharCode(codePoint & 0x3F | 0x80);\n              return symbol;\n            }\n\n            function utf8encode(string) {\n              var codePoints = ucs2decode(string);\n              var length = codePoints.length;\n              var index = -1;\n              var codePoint;\n              var byteString = '';\n              while (++index < length) {\n                codePoint = codePoints[index];\n                byteString += encodeCodePoint(codePoint);\n              }\n              return byteString;\n            }\n\n            /*--------------------------------------------------------------------------*/\n\n            function readContinuationByte() {\n              if (byteIndex >= byteCount) {\n                throw Error('Invalid byte index');\n              }\n\n              var continuationByte = byteArray[byteIndex] & 0xFF;\n              byteIndex++;\n\n              if ((continuationByte & 0xC0) == 0x80) {\n                return continuationByte & 0x3F;\n              }\n\n              // If we end up here, it’s not a continuation byte\n              throw Error('Invalid continuation byte');\n            }\n\n            function decodeSymbol() {\n              var byte1;\n              var byte2;\n              var byte3;\n              var byte4;\n              var codePoint;\n\n              if (byteIndex > byteCount) {\n                throw Error('Invalid byte index');\n              }\n\n              if (byteIndex == byteCount) {\n                return false;\n              }\n\n              // Read first byte\n              byte1 = byteArray[byteIndex] & 0xFF;\n              byteIndex++;\n\n              // 1-byte sequence (no continuation bytes)\n              if ((byte1 & 0x80) == 0) {\n                return byte1;\n              }\n\n              // 2-byte sequence\n              if ((byte1 & 0xE0) == 0xC0) {\n                var byte2 = readContinuationByte();\n                codePoint = (byte1 & 0x1F) << 6 | byte2;\n                if (codePoint >= 0x80) {\n                  return codePoint;\n                } else {\n                  throw Error('Invalid continuation byte');\n                }\n              }\n\n              // 3-byte sequence (may include unpaired surrogates)\n              if ((byte1 & 0xF0) == 0xE0) {\n                byte2 = readContinuationByte();\n                byte3 = readContinuationByte();\n                codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;\n                if (codePoint >= 0x0800) {\n                  checkScalarValue(codePoint);\n                  return codePoint;\n                } else {\n                  throw Error('Invalid continuation byte');\n                }\n              }\n\n              // 4-byte sequence\n              if ((byte1 & 0xF8) == 0xF0) {\n                byte2 = readContinuationByte();\n                byte3 = readContinuationByte();\n                byte4 = readContinuationByte();\n                codePoint = (byte1 & 0x0F) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;\n                if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n                  return codePoint;\n                }\n              }\n\n              throw Error('Invalid UTF-8 detected');\n            }\n\n            var byteArray;\n            var byteCount;\n            var byteIndex;\n            function utf8decode(byteString) {\n              byteArray = ucs2decode(byteString);\n              byteCount = byteArray.length;\n              byteIndex = 0;\n              var codePoints = [];\n              var tmp;\n              while ((tmp = decodeSymbol()) !== false) {\n                codePoints.push(tmp);\n              }\n              return ucs2encode(codePoints);\n            }\n\n            /*--------------------------------------------------------------------------*/\n\n            var utf8 = {\n              'version': '2.0.0',\n              'encode': utf8encode,\n              'decode': utf8decode\n            };\n\n            // Some AMD build optimizers, like r.js, check for specific condition patterns\n            // like the following:\n            if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n              define(function () {\n                return utf8;\n              });\n            } else if (freeExports && !freeExports.nodeType) {\n              if (freeModule) {\n                // in Node.js or RingoJS v0.8.0+\n                freeModule.exports = utf8;\n              } else {\n                // in Narwhal or RingoJS v0.7.0-\n                var object = {};\n                var hasOwnProperty = object.hasOwnProperty;\n                for (var key in utf8) {\n                  hasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n                }\n              }\n            } else {\n              // in Rhino or a web browser\n              root.utf8 = utf8;\n            }\n          })(this);\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 30: [function (_dereq_, module, exports) {\n        'use strict';\n\n        var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),\n            length = 64,\n            map = {},\n            seed = 0,\n            i = 0,\n            prev;\n\n        /**\n         * Return a string representing the specified number.\n         *\n         * @param {Number} num The number to convert.\n         * @returns {String} The string representation of the number.\n         * @api public\n         */\n        function encode(num) {\n          var encoded = '';\n\n          do {\n            encoded = alphabet[num % length] + encoded;\n            num = Math.floor(num / length);\n          } while (num > 0);\n\n          return encoded;\n        }\n\n        /**\n         * Return the integer value specified by the given string.\n         *\n         * @param {String} str The string to convert.\n         * @returns {Number} The integer value represented by the string.\n         * @api public\n         */\n        function decode(str) {\n          var decoded = 0;\n\n          for (i = 0; i < str.length; i++) {\n            decoded = decoded * length + map[str.charAt(i)];\n          }\n\n          return decoded;\n        }\n\n        /**\n         * Yeast: A tiny growing id generator.\n         *\n         * @returns {String} A unique id.\n         * @api public\n         */\n        function yeast() {\n          var now = encode(+new Date());\n\n          if (now !== prev) return seed = 0, prev = now;\n          return now + '.' + encode(seed++);\n        }\n\n        //\n        // Map each character to its index.\n        //\n        for (; i < length; i++) map[alphabet[i]] = i;\n\n        //\n        // Expose the `yeast`, `encode` and `decode` functions.\n        //\n        yeast.encode = encode;\n        yeast.decode = decode;\n        module.exports = yeast;\n      }, {}], 31: [function (_dereq_, module, exports) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var url = _dereq_('./url');\n        var parser = _dereq_('socket.io-parser');\n        var Manager = _dereq_('./manager');\n        var debug = _dereq_('debug')('socket.io-client');\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = exports = lookup;\n\n        /**\n         * Managers cache.\n         */\n\n        var cache = exports.managers = {};\n\n        /**\n         * Looks up an existing `Manager` for multiplexing.\n         * If the user summons:\n         *\n         *   `io('http://localhost/a');`\n         *   `io('http://localhost/b');`\n         *\n         * We reuse the existing instance based on same scheme/port/host,\n         * and we initialize sockets for each namespace.\n         *\n         * @api public\n         */\n\n        function lookup(uri, opts) {\n          if (typeof uri == 'object') {\n            opts = uri;\n            uri = undefined;\n          }\n\n          opts = opts || {};\n\n          var parsed = url(uri);\n          var source = parsed.source;\n          var id = parsed.id;\n          var path = parsed.path;\n          var sameNamespace = cache[id] && path in cache[id].nsps;\n          var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;\n\n          var io;\n\n          if (newConnection) {\n            debug('ignoring socket cache for %s', source);\n            io = Manager(source, opts);\n          } else {\n            if (!cache[id]) {\n              debug('new io instance for %s', source);\n              cache[id] = Manager(source, opts);\n            }\n            io = cache[id];\n          }\n\n          return io.socket(parsed.path);\n        }\n\n        /**\n         * Protocol version.\n         *\n         * @api public\n         */\n\n        exports.protocol = parser.protocol;\n\n        /**\n         * `connect`.\n         *\n         * @param {String} uri\n         * @api public\n         */\n\n        exports.connect = lookup;\n\n        /**\n         * Expose constructors for standalone build.\n         *\n         * @api public\n         */\n\n        exports.Manager = _dereq_('./manager');\n        exports.Socket = _dereq_('./socket');\n      }, { \"./manager\": 32, \"./socket\": 34, \"./url\": 35, \"debug\": 39, \"socket.io-parser\": 47 }], 32: [function (_dereq_, module, exports) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var eio = _dereq_('engine.io-client');\n        var Socket = _dereq_('./socket');\n        var Emitter = _dereq_('component-emitter');\n        var parser = _dereq_('socket.io-parser');\n        var on = _dereq_('./on');\n        var bind = _dereq_('component-bind');\n        var debug = _dereq_('debug')('socket.io-client:manager');\n        var indexOf = _dereq_('indexof');\n        var Backoff = _dereq_('backo2');\n\n        /**\n         * IE6+ hasOwnProperty\n         */\n\n        var has = Object.prototype.hasOwnProperty;\n\n        /**\n         * Module exports\n         */\n\n        module.exports = Manager;\n\n        /**\n         * `Manager` constructor.\n         *\n         * @param {String} engine instance or engine uri/opts\n         * @param {Object} options\n         * @api public\n         */\n\n        function Manager(uri, opts) {\n          if (!(this instanceof Manager)) return new Manager(uri, opts);\n          if (uri && 'object' == typeof uri) {\n            opts = uri;\n            uri = undefined;\n          }\n          opts = opts || {};\n\n          opts.path = opts.path || '/socket.io';\n          this.nsps = {};\n          this.subs = [];\n          this.opts = opts;\n          this.reconnection(opts.reconnection !== false);\n          this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n          this.reconnectionDelay(opts.reconnectionDelay || 1000);\n          this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n          this.randomizationFactor(opts.randomizationFactor || 0.5);\n          this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor()\n          });\n          this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n          this.readyState = 'closed';\n          this.uri = uri;\n          this.connecting = [];\n          this.lastPing = null;\n          this.encoding = false;\n          this.packetBuffer = [];\n          this.encoder = new parser.Encoder();\n          this.decoder = new parser.Decoder();\n          this.autoConnect = opts.autoConnect !== false;\n          if (this.autoConnect) this.open();\n        }\n\n        /**\n         * Propagate given event to sockets and emit on `this`\n         *\n         * @api private\n         */\n\n        Manager.prototype.emitAll = function () {\n          this.emit.apply(this, arguments);\n          for (var nsp in this.nsps) {\n            if (has.call(this.nsps, nsp)) {\n              this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n            }\n          }\n        };\n\n        /**\n         * Update `socket.id` of all sockets\n         *\n         * @api private\n         */\n\n        Manager.prototype.updateSocketIds = function () {\n          for (var nsp in this.nsps) {\n            if (has.call(this.nsps, nsp)) {\n              this.nsps[nsp].id = this.engine.id;\n            }\n          }\n        };\n\n        /**\n         * Mix in `Emitter`.\n         */\n\n        Emitter(Manager.prototype);\n\n        /**\n         * Sets the `reconnection` config.\n         *\n         * @param {Boolean} true/false if it should automatically reconnect\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.reconnection = function (v) {\n          if (!arguments.length) return this._reconnection;\n          this._reconnection = !!v;\n          return this;\n        };\n\n        /**\n         * Sets the reconnection attempts config.\n         *\n         * @param {Number} max reconnection attempts before giving up\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.reconnectionAttempts = function (v) {\n          if (!arguments.length) return this._reconnectionAttempts;\n          this._reconnectionAttempts = v;\n          return this;\n        };\n\n        /**\n         * Sets the delay between reconnections.\n         *\n         * @param {Number} delay\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.reconnectionDelay = function (v) {\n          if (!arguments.length) return this._reconnectionDelay;\n          this._reconnectionDelay = v;\n          this.backoff && this.backoff.setMin(v);\n          return this;\n        };\n\n        Manager.prototype.randomizationFactor = function (v) {\n          if (!arguments.length) return this._randomizationFactor;\n          this._randomizationFactor = v;\n          this.backoff && this.backoff.setJitter(v);\n          return this;\n        };\n\n        /**\n         * Sets the maximum delay between reconnections.\n         *\n         * @param {Number} delay\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.reconnectionDelayMax = function (v) {\n          if (!arguments.length) return this._reconnectionDelayMax;\n          this._reconnectionDelayMax = v;\n          this.backoff && this.backoff.setMax(v);\n          return this;\n        };\n\n        /**\n         * Sets the connection timeout. `false` to disable\n         *\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.timeout = function (v) {\n          if (!arguments.length) return this._timeout;\n          this._timeout = v;\n          return this;\n        };\n\n        /**\n         * Starts trying to reconnect if reconnection is enabled and we have not\n         * started reconnecting yet\n         *\n         * @api private\n         */\n\n        Manager.prototype.maybeReconnectOnOpen = function () {\n          // Only try to reconnect if it's the first time we're connecting\n          if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n          }\n        };\n\n        /**\n         * Sets the current transport `socket`.\n         *\n         * @param {Function} optional, callback\n         * @return {Manager} self\n         * @api public\n         */\n\n        Manager.prototype.open = Manager.prototype.connect = function (fn) {\n          debug('readyState %s', this.readyState);\n          if (~this.readyState.indexOf('open')) return this;\n\n          debug('opening %s', this.uri);\n          this.engine = eio(this.uri, this.opts);\n          var socket = this.engine;\n          var self = this;\n          this.readyState = 'opening';\n          this.skipReconnect = false;\n\n          // emit `open`\n          var openSub = on(socket, 'open', function () {\n            self.onopen();\n            fn && fn();\n          });\n\n          // emit `connect_error`\n          var errorSub = on(socket, 'error', function (data) {\n            debug('connect_error');\n            self.cleanup();\n            self.readyState = 'closed';\n            self.emitAll('connect_error', data);\n            if (fn) {\n              var err = new Error('Connection error');\n              err.data = data;\n              fn(err);\n            } else {\n              // Only do this if there is no fn to handle the error\n              self.maybeReconnectOnOpen();\n            }\n          });\n\n          // emit `connect_timeout`\n          if (false !== this._timeout) {\n            var timeout = this._timeout;\n            debug('connect attempt will timeout after %d', timeout);\n\n            // set timer\n            var timer = setTimeout(function () {\n              debug('connect attempt timed out after %d', timeout);\n              openSub.destroy();\n              socket.close();\n              socket.emit('error', 'timeout');\n              self.emitAll('connect_timeout', timeout);\n            }, timeout);\n\n            this.subs.push({\n              destroy: function destroy() {\n                clearTimeout(timer);\n              }\n            });\n          }\n\n          this.subs.push(openSub);\n          this.subs.push(errorSub);\n\n          return this;\n        };\n\n        /**\n         * Called upon transport open.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onopen = function () {\n          debug('open');\n\n          // clear old subs\n          this.cleanup();\n\n          // mark as open\n          this.readyState = 'open';\n          this.emit('open');\n\n          // add new subs\n          var socket = this.engine;\n          this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n          this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n          this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n          this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n          this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n          this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n        };\n\n        /**\n         * Called upon a ping.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onping = function () {\n          this.lastPing = new Date();\n          this.emitAll('ping');\n        };\n\n        /**\n         * Called upon a packet.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onpong = function () {\n          this.emitAll('pong', new Date() - this.lastPing);\n        };\n\n        /**\n         * Called with data.\n         *\n         * @api private\n         */\n\n        Manager.prototype.ondata = function (data) {\n          this.decoder.add(data);\n        };\n\n        /**\n         * Called when parser fully decodes a packet.\n         *\n         * @api private\n         */\n\n        Manager.prototype.ondecoded = function (packet) {\n          this.emit('packet', packet);\n        };\n\n        /**\n         * Called upon socket error.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onerror = function (err) {\n          debug('error', err);\n          this.emitAll('error', err);\n        };\n\n        /**\n         * Creates a new socket for the given `nsp`.\n         *\n         * @return {Socket}\n         * @api public\n         */\n\n        Manager.prototype.socket = function (nsp) {\n          var socket = this.nsps[nsp];\n          if (!socket) {\n            socket = new Socket(this, nsp);\n            this.nsps[nsp] = socket;\n            var self = this;\n            socket.on('connecting', onConnecting);\n            socket.on('connect', function () {\n              socket.id = self.engine.id;\n            });\n\n            if (this.autoConnect) {\n              // manually call here since connecting evnet is fired before listening\n              onConnecting();\n            }\n          }\n\n          function onConnecting() {\n            if (! ~indexOf(self.connecting, socket)) {\n              self.connecting.push(socket);\n            }\n          }\n\n          return socket;\n        };\n\n        /**\n         * Called upon a socket close.\n         *\n         * @param {Socket} socket\n         */\n\n        Manager.prototype.destroy = function (socket) {\n          var index = indexOf(this.connecting, socket);\n          if (~index) this.connecting.splice(index, 1);\n          if (this.connecting.length) return;\n\n          this.close();\n        };\n\n        /**\n         * Writes a packet.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Manager.prototype.packet = function (packet) {\n          debug('writing packet %j', packet);\n          var self = this;\n\n          if (!self.encoding) {\n            // encode, then write to engine with result\n            self.encoding = true;\n            this.encoder.encode(packet, function (encodedPackets) {\n              for (var i = 0; i < encodedPackets.length; i++) {\n                self.engine.write(encodedPackets[i], packet.options);\n              }\n              self.encoding = false;\n              self.processPacketQueue();\n            });\n          } else {\n            // add packet to the queue\n            self.packetBuffer.push(packet);\n          }\n        };\n\n        /**\n         * If packet buffer is non-empty, begins encoding the\n         * next packet in line.\n         *\n         * @api private\n         */\n\n        Manager.prototype.processPacketQueue = function () {\n          if (this.packetBuffer.length > 0 && !this.encoding) {\n            var pack = this.packetBuffer.shift();\n            this.packet(pack);\n          }\n        };\n\n        /**\n         * Clean up transport subscriptions and packet buffer.\n         *\n         * @api private\n         */\n\n        Manager.prototype.cleanup = function () {\n          debug('cleanup');\n\n          var sub;\n          while (sub = this.subs.shift()) sub.destroy();\n\n          this.packetBuffer = [];\n          this.encoding = false;\n          this.lastPing = null;\n\n          this.decoder.destroy();\n        };\n\n        /**\n         * Close the current socket.\n         *\n         * @api private\n         */\n\n        Manager.prototype.close = Manager.prototype.disconnect = function () {\n          debug('disconnect');\n          this.skipReconnect = true;\n          this.reconnecting = false;\n          if ('opening' == this.readyState) {\n            // `onclose` will not fire because\n            // an open event never happened\n            this.cleanup();\n          }\n          this.backoff.reset();\n          this.readyState = 'closed';\n          if (this.engine) this.engine.close();\n        };\n\n        /**\n         * Called upon engine close.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onclose = function (reason) {\n          debug('onclose');\n\n          this.cleanup();\n          this.backoff.reset();\n          this.readyState = 'closed';\n          this.emit('close', reason);\n\n          if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n          }\n        };\n\n        /**\n         * Attempt a reconnection.\n         *\n         * @api private\n         */\n\n        Manager.prototype.reconnect = function () {\n          if (this.reconnecting || this.skipReconnect) return this;\n\n          var self = this;\n\n          if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug('reconnect failed');\n            this.backoff.reset();\n            this.emitAll('reconnect_failed');\n            this.reconnecting = false;\n          } else {\n            var delay = this.backoff.duration();\n            debug('will wait %dms before reconnect attempt', delay);\n\n            this.reconnecting = true;\n            var timer = setTimeout(function () {\n              if (self.skipReconnect) return;\n\n              debug('attempting reconnect');\n              self.emitAll('reconnect_attempt', self.backoff.attempts);\n              self.emitAll('reconnecting', self.backoff.attempts);\n\n              // check again for the case socket closed in above events\n              if (self.skipReconnect) return;\n\n              self.open(function (err) {\n                if (err) {\n                  debug('reconnect attempt error');\n                  self.reconnecting = false;\n                  self.reconnect();\n                  self.emitAll('reconnect_error', err.data);\n                } else {\n                  debug('reconnect success');\n                  self.onreconnect();\n                }\n              });\n            }, delay);\n\n            this.subs.push({\n              destroy: function destroy() {\n                clearTimeout(timer);\n              }\n            });\n          }\n        };\n\n        /**\n         * Called upon successful reconnect.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onreconnect = function () {\n          var attempt = this.backoff.attempts;\n          this.reconnecting = false;\n          this.backoff.reset();\n          this.updateSocketIds();\n          this.emitAll('reconnect', attempt);\n        };\n      }, { \"./on\": 33, \"./socket\": 34, \"backo2\": 36, \"component-bind\": 37, \"component-emitter\": 38, \"debug\": 39, \"engine.io-client\": 1, \"indexof\": 42, \"socket.io-parser\": 47 }], 33: [function (_dereq_, module, exports) {\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = on;\n\n        /**\n         * Helper for subscriptions.\n         *\n         * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n         * @param {String} event name\n         * @param {Function} callback\n         * @api public\n         */\n\n        function on(obj, ev, fn) {\n          obj.on(ev, fn);\n          return {\n            destroy: function destroy() {\n              obj.removeListener(ev, fn);\n            }\n          };\n        }\n      }, {}], 34: [function (_dereq_, module, exports) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var parser = _dereq_('socket.io-parser');\n        var Emitter = _dereq_('component-emitter');\n        var toArray = _dereq_('to-array');\n        var on = _dereq_('./on');\n        var bind = _dereq_('component-bind');\n        var debug = _dereq_('debug')('socket.io-client:socket');\n        var hasBin = _dereq_('has-binary');\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = exports = Socket;\n\n        /**\n         * Internal events (blacklisted).\n         * These events can't be emitted by the user.\n         *\n         * @api private\n         */\n\n        var events = {\n          connect: 1,\n          connect_error: 1,\n          connect_timeout: 1,\n          connecting: 1,\n          disconnect: 1,\n          error: 1,\n          reconnect: 1,\n          reconnect_attempt: 1,\n          reconnect_failed: 1,\n          reconnect_error: 1,\n          reconnecting: 1,\n          ping: 1,\n          pong: 1\n        };\n\n        /**\n         * Shortcut to `Emitter#emit`.\n         */\n\n        var emit = Emitter.prototype.emit;\n\n        /**\n         * `Socket` constructor.\n         *\n         * @api public\n         */\n\n        function Socket(io, nsp) {\n          this.io = io;\n          this.nsp = nsp;\n          this.json = this; // compat\n          this.ids = 0;\n          this.acks = {};\n          this.receiveBuffer = [];\n          this.sendBuffer = [];\n          this.connected = false;\n          this.disconnected = true;\n          if (this.io.autoConnect) this.open();\n        }\n\n        /**\n         * Mix in `Emitter`.\n         */\n\n        Emitter(Socket.prototype);\n\n        /**\n         * Subscribe to open, close and packet events\n         *\n         * @api private\n         */\n\n        Socket.prototype.subEvents = function () {\n          if (this.subs) return;\n\n          var io = this.io;\n          this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n        };\n\n        /**\n         * \"Opens\" the socket.\n         *\n         * @api public\n         */\n\n        Socket.prototype.open = Socket.prototype.connect = function () {\n          if (this.connected) return this;\n\n          this.subEvents();\n          this.io.open(); // ensure open\n          if ('open' == this.io.readyState) this.onopen();\n          this.emit('connecting');\n          return this;\n        };\n\n        /**\n         * Sends a `message` event.\n         *\n         * @return {Socket} self\n         * @api public\n         */\n\n        Socket.prototype.send = function () {\n          var args = toArray(arguments);\n          args.unshift('message');\n          this.emit.apply(this, args);\n          return this;\n        };\n\n        /**\n         * Override `emit`.\n         * If the event is in `events`, it's emitted normally.\n         *\n         * @param {String} event name\n         * @return {Socket} self\n         * @api public\n         */\n\n        Socket.prototype.emit = function (ev) {\n          if (events.hasOwnProperty(ev)) {\n            emit.apply(this, arguments);\n            return this;\n          }\n\n          var args = toArray(arguments);\n          var parserType = parser.EVENT; // default\n          if (hasBin(args)) {\n            parserType = parser.BINARY_EVENT;\n          } // binary\n          var packet = { type: parserType, data: args };\n\n          packet.options = {};\n          packet.options.compress = !this.flags || false !== this.flags.compress;\n\n          // event ack callback\n          if ('function' == typeof args[args.length - 1]) {\n            debug('emitting packet with ack id %d', this.ids);\n            this.acks[this.ids] = args.pop();\n            packet.id = this.ids++;\n          }\n\n          if (this.connected) {\n            this.packet(packet);\n          } else {\n            this.sendBuffer.push(packet);\n          }\n\n          delete this.flags;\n\n          return this;\n        };\n\n        /**\n         * Sends a packet.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Socket.prototype.packet = function (packet) {\n          packet.nsp = this.nsp;\n          this.io.packet(packet);\n        };\n\n        /**\n         * Called upon engine `open`.\n         *\n         * @api private\n         */\n\n        Socket.prototype.onopen = function () {\n          debug('transport is open - connecting');\n\n          // write connect packet if necessary\n          if ('/' != this.nsp) {\n            this.packet({ type: parser.CONNECT });\n          }\n        };\n\n        /**\n         * Called upon engine `close`.\n         *\n         * @param {String} reason\n         * @api private\n         */\n\n        Socket.prototype.onclose = function (reason) {\n          debug('close (%s)', reason);\n          this.connected = false;\n          this.disconnected = true;\n          delete this.id;\n          this.emit('disconnect', reason);\n        };\n\n        /**\n         * Called with socket packet.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Socket.prototype.onpacket = function (packet) {\n          if (packet.nsp != this.nsp) return;\n\n          switch (packet.type) {\n            case parser.CONNECT:\n              this.onconnect();\n              break;\n\n            case parser.EVENT:\n              this.onevent(packet);\n              break;\n\n            case parser.BINARY_EVENT:\n              this.onevent(packet);\n              break;\n\n            case parser.ACK:\n              this.onack(packet);\n              break;\n\n            case parser.BINARY_ACK:\n              this.onack(packet);\n              break;\n\n            case parser.DISCONNECT:\n              this.ondisconnect();\n              break;\n\n            case parser.ERROR:\n              this.emit('error', packet.data);\n              break;\n          }\n        };\n\n        /**\n         * Called upon a server event.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Socket.prototype.onevent = function (packet) {\n          var args = packet.data || [];\n          debug('emitting event %j', args);\n\n          if (null != packet.id) {\n            debug('attaching ack callback to event');\n            args.push(this.ack(packet.id));\n          }\n\n          if (this.connected) {\n            emit.apply(this, args);\n          } else {\n            this.receiveBuffer.push(args);\n          }\n        };\n\n        /**\n         * Produces an ack callback to emit with an event.\n         *\n         * @api private\n         */\n\n        Socket.prototype.ack = function (id) {\n          var self = this;\n          var sent = false;\n          return function () {\n            // prevent double callbacks\n            if (sent) return;\n            sent = true;\n            var args = toArray(arguments);\n            debug('sending ack %j', args);\n\n            var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n            self.packet({\n              type: type,\n              id: id,\n              data: args\n            });\n          };\n        };\n\n        /**\n         * Called upon a server acknowlegement.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Socket.prototype.onack = function (packet) {\n          var ack = this.acks[packet.id];\n          if ('function' == typeof ack) {\n            debug('calling ack %s with %j', packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n          } else {\n            debug('bad ack %s', packet.id);\n          }\n        };\n\n        /**\n         * Called upon server connect.\n         *\n         * @api private\n         */\n\n        Socket.prototype.onconnect = function () {\n          this.connected = true;\n          this.disconnected = false;\n          this.emit('connect');\n          this.emitBuffered();\n        };\n\n        /**\n         * Emit buffered events (received and emitted).\n         *\n         * @api private\n         */\n\n        Socket.prototype.emitBuffered = function () {\n          var i;\n          for (i = 0; i < this.receiveBuffer.length; i++) {\n            emit.apply(this, this.receiveBuffer[i]);\n          }\n          this.receiveBuffer = [];\n\n          for (i = 0; i < this.sendBuffer.length; i++) {\n            this.packet(this.sendBuffer[i]);\n          }\n          this.sendBuffer = [];\n        };\n\n        /**\n         * Called upon server disconnect.\n         *\n         * @api private\n         */\n\n        Socket.prototype.ondisconnect = function () {\n          debug('server disconnect (%s)', this.nsp);\n          this.destroy();\n          this.onclose('io server disconnect');\n        };\n\n        /**\n         * Called upon forced client/server side disconnections,\n         * this method ensures the manager stops tracking us and\n         * that reconnections don't get triggered for this.\n         *\n         * @api private.\n         */\n\n        Socket.prototype.destroy = function () {\n          if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            for (var i = 0; i < this.subs.length; i++) {\n              this.subs[i].destroy();\n            }\n            this.subs = null;\n          }\n\n          this.io.destroy(this);\n        };\n\n        /**\n         * Disconnects the socket manually.\n         *\n         * @return {Socket} self\n         * @api public\n         */\n\n        Socket.prototype.close = Socket.prototype.disconnect = function () {\n          if (this.connected) {\n            debug('performing disconnect (%s)', this.nsp);\n            this.packet({ type: parser.DISCONNECT });\n          }\n\n          // remove socket from pool\n          this.destroy();\n\n          if (this.connected) {\n            // fire events\n            this.onclose('io client disconnect');\n          }\n          return this;\n        };\n\n        /**\n         * Sets the compress flag.\n         *\n         * @param {Boolean} if `true`, compresses the sending data\n         * @return {Socket} self\n         * @api public\n         */\n\n        Socket.prototype.compress = function (compress) {\n          this.flags = this.flags || {};\n          this.flags.compress = compress;\n          return this;\n        };\n      }, { \"./on\": 33, \"component-bind\": 37, \"component-emitter\": 38, \"debug\": 39, \"has-binary\": 41, \"socket.io-parser\": 47, \"to-array\": 51 }], 35: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          /**\n           * Module dependencies.\n           */\n\n          var parseuri = _dereq_('parseuri');\n          var debug = _dereq_('debug')('socket.io-client:url');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = url;\n\n          /**\n           * URL parser.\n           *\n           * @param {String} url\n           * @param {Object} An object meant to mimic window.location.\n           *                 Defaults to window.location.\n           * @api public\n           */\n\n          function url(uri, loc) {\n            var obj = uri;\n\n            // default to window.location\n            var loc = loc || global.location;\n            if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n            // relative path support\n            if ('string' == typeof uri) {\n              if ('/' == uri.charAt(0)) {\n                if ('/' == uri.charAt(1)) {\n                  uri = loc.protocol + uri;\n                } else {\n                  uri = loc.host + uri;\n                }\n              }\n\n              if (!/^(https?|wss?):\\/\\//.test(uri)) {\n                debug('protocol-less url %s', uri);\n                if ('undefined' != typeof loc) {\n                  uri = loc.protocol + '//' + uri;\n                } else {\n                  uri = 'https://' + uri;\n                }\n              }\n\n              // parse\n              debug('parse %s', uri);\n              obj = parseuri(uri);\n            }\n\n            // make sure we treat `localhost:80` and `localhost` equally\n            if (!obj.port) {\n              if (/^(http|ws)$/.test(obj.protocol)) {\n                obj.port = '80';\n              } else if (/^(http|ws)s$/.test(obj.protocol)) {\n                obj.port = '443';\n              }\n            }\n\n            obj.path = obj.path || '/';\n\n            var ipv6 = obj.host.indexOf(':') !== -1;\n            var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n            // define unique id\n            obj.id = obj.protocol + '://' + host + ':' + obj.port;\n            // define href\n            obj.href = obj.protocol + '://' + host + (loc && loc.port == obj.port ? '' : ':' + obj.port);\n\n            return obj;\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"debug\": 39, \"parseuri\": 45 }], 36: [function (_dereq_, module, exports) {\n\n        /**\n         * Expose `Backoff`.\n         */\n\n        module.exports = Backoff;\n\n        /**\n         * Initialize backoff timer with `opts`.\n         *\n         * - `min` initial timeout in milliseconds [100]\n         * - `max` max timeout [10000]\n         * - `jitter` [0]\n         * - `factor` [2]\n         *\n         * @param {Object} opts\n         * @api public\n         */\n\n        function Backoff(opts) {\n          opts = opts || {};\n          this.ms = opts.min || 100;\n          this.max = opts.max || 10000;\n          this.factor = opts.factor || 2;\n          this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n          this.attempts = 0;\n        }\n\n        /**\n         * Return the backoff duration.\n         *\n         * @return {Number}\n         * @api public\n         */\n\n        Backoff.prototype.duration = function () {\n          var ms = this.ms * Math.pow(this.factor, this.attempts++);\n          if (this.jitter) {\n            var rand = Math.random();\n            var deviation = Math.floor(rand * this.jitter * ms);\n            ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n          }\n          return Math.min(ms, this.max) | 0;\n        };\n\n        /**\n         * Reset the number of attempts.\n         *\n         * @api public\n         */\n\n        Backoff.prototype.reset = function () {\n          this.attempts = 0;\n        };\n\n        /**\n         * Set the minimum duration\n         *\n         * @api public\n         */\n\n        Backoff.prototype.setMin = function (min) {\n          this.ms = min;\n        };\n\n        /**\n         * Set the maximum duration\n         *\n         * @api public\n         */\n\n        Backoff.prototype.setMax = function (max) {\n          this.max = max;\n        };\n\n        /**\n         * Set the jitter\n         *\n         * @api public\n         */\n\n        Backoff.prototype.setJitter = function (jitter) {\n          this.jitter = jitter;\n        };\n      }, {}], 37: [function (_dereq_, module, exports) {\n        /**\n         * Slice reference.\n         */\n\n        var slice = [].slice;\n\n        /**\n         * Bind `obj` to `fn`.\n         *\n         * @param {Object} obj\n         * @param {Function|String} fn or string\n         * @return {Function}\n         * @api public\n         */\n\n        module.exports = function (obj, fn) {\n          if ('string' == typeof fn) fn = obj[fn];\n          if ('function' != typeof fn) throw new Error('bind() requires a function');\n          var args = slice.call(arguments, 2);\n          return function () {\n            return fn.apply(obj, args.concat(slice.call(arguments)));\n          };\n        };\n      }, {}], 38: [function (_dereq_, module, exports) {\n\n        /**\n         * Expose `Emitter`.\n         */\n\n        module.exports = Emitter;\n\n        /**\n         * Initialize a new `Emitter`.\n         *\n         * @api public\n         */\n\n        function Emitter(obj) {\n          if (obj) return mixin(obj);\n        };\n\n        /**\n         * Mixin the emitter properties.\n         *\n         * @param {Object} obj\n         * @return {Object}\n         * @api private\n         */\n\n        function mixin(obj) {\n          for (var key in Emitter.prototype) {\n            obj[key] = Emitter.prototype[key];\n          }\n          return obj;\n        }\n\n        /**\n         * Listen on the given `event` with `fn`.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n          this._callbacks = this._callbacks || {};\n          (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n          return this;\n        };\n\n        /**\n         * Adds an `event` listener that will be invoked a single\n         * time then automatically removed.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.once = function (event, fn) {\n          function on() {\n            this.off(event, on);\n            fn.apply(this, arguments);\n          }\n\n          on.fn = fn;\n          this.on(event, on);\n          return this;\n        };\n\n        /**\n         * Remove the given callback for `event` or all\n         * registered callbacks.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n          this._callbacks = this._callbacks || {};\n\n          // all\n          if (0 == arguments.length) {\n            this._callbacks = {};\n            return this;\n          }\n\n          // specific event\n          var callbacks = this._callbacks['$' + event];\n          if (!callbacks) return this;\n\n          // remove all handlers\n          if (1 == arguments.length) {\n            delete this._callbacks['$' + event];\n            return this;\n          }\n\n          // remove specific handler\n          var cb;\n          for (var i = 0; i < callbacks.length; i++) {\n            cb = callbacks[i];\n            if (cb === fn || cb.fn === fn) {\n              callbacks.splice(i, 1);\n              break;\n            }\n          }\n          return this;\n        };\n\n        /**\n         * Emit `event` with the given args.\n         *\n         * @param {String} event\n         * @param {Mixed} ...\n         * @return {Emitter}\n         */\n\n        Emitter.prototype.emit = function (event) {\n          this._callbacks = this._callbacks || {};\n          var args = [].slice.call(arguments, 1),\n              callbacks = this._callbacks['$' + event];\n\n          if (callbacks) {\n            callbacks = callbacks.slice(0);\n            for (var i = 0, len = callbacks.length; i < len; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n\n          return this;\n        };\n\n        /**\n         * Return array of callbacks for `event`.\n         *\n         * @param {String} event\n         * @return {Array}\n         * @api public\n         */\n\n        Emitter.prototype.listeners = function (event) {\n          this._callbacks = this._callbacks || {};\n          return this._callbacks['$' + event] || [];\n        };\n\n        /**\n         * Check if this emitter has `event` handlers.\n         *\n         * @param {String} event\n         * @return {Boolean}\n         * @api public\n         */\n\n        Emitter.prototype.hasListeners = function (event) {\n          return !!this.listeners(event).length;\n        };\n      }, {}], 39: [function (_dereq_, module, exports) {\n        arguments[4][17][0].apply(exports, arguments);\n      }, { \"./debug\": 40, \"dup\": 17 }], 40: [function (_dereq_, module, exports) {\n        arguments[4][18][0].apply(exports, arguments);\n      }, { \"dup\": 18, \"ms\": 44 }], 41: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          /*\n           * Module requirements.\n           */\n\n          var isArray = _dereq_('isarray');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = hasBinary;\n\n          /**\n           * Checks for binary data.\n           *\n           * Right now only Buffer and ArrayBuffer are supported..\n           *\n           * @param {Object} anything\n           * @api public\n           */\n\n          function hasBinary(data) {\n\n            function _hasBinary(obj) {\n              if (!obj) return false;\n\n              if (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer || global.Blob && obj instanceof Blob || global.File && obj instanceof File) {\n                return true;\n              }\n\n              if (isArray(obj)) {\n                for (var i = 0; i < obj.length; i++) {\n                  if (_hasBinary(obj[i])) {\n                    return true;\n                  }\n                }\n              } else if (obj && 'object' == typeof obj) {\n                // see: https://github.com/Automattic/has-binary/pull/4\n                if (obj.toJSON && 'function' == typeof obj.toJSON) {\n                  obj = obj.toJSON();\n                }\n\n                for (var key in obj) {\n                  if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n                    return true;\n                  }\n                }\n              }\n\n              return false;\n            }\n\n            return _hasBinary(data);\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"isarray\": 43 }], 42: [function (_dereq_, module, exports) {\n        arguments[4][23][0].apply(exports, arguments);\n      }, { \"dup\": 23 }], 43: [function (_dereq_, module, exports) {\n        arguments[4][24][0].apply(exports, arguments);\n      }, { \"dup\": 24 }], 44: [function (_dereq_, module, exports) {\n        arguments[4][25][0].apply(exports, arguments);\n      }, { \"dup\": 25 }], 45: [function (_dereq_, module, exports) {\n        arguments[4][28][0].apply(exports, arguments);\n      }, { \"dup\": 28 }], 46: [function (_dereq_, module, exports) {\n        (function (global) {\n          /*global Blob,File*/\n\n          /**\n           * Module requirements\n           */\n\n          var isArray = _dereq_('isarray');\n          var isBuf = _dereq_('./is-buffer');\n\n          /**\n           * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n           * Anything with blobs or files should be fed through removeBlobs before coming\n           * here.\n           *\n           * @param {Object} packet - socket.io event packet\n           * @return {Object} with deconstructed packet and list of buffers\n           * @api public\n           */\n\n          exports.deconstructPacket = function (packet) {\n            var buffers = [];\n            var packetData = packet.data;\n\n            function _deconstructPacket(data) {\n              if (!data) return data;\n\n              if (isBuf(data)) {\n                var placeholder = { _placeholder: true, num: buffers.length };\n                buffers.push(data);\n                return placeholder;\n              } else if (isArray(data)) {\n                var newData = new Array(data.length);\n                for (var i = 0; i < data.length; i++) {\n                  newData[i] = _deconstructPacket(data[i]);\n                }\n                return newData;\n              } else if ('object' == typeof data && !(data instanceof Date)) {\n                var newData = {};\n                for (var key in data) {\n                  newData[key] = _deconstructPacket(data[key]);\n                }\n                return newData;\n              }\n              return data;\n            }\n\n            var pack = packet;\n            pack.data = _deconstructPacket(packetData);\n            pack.attachments = buffers.length; // number of binary 'attachments'\n            return { packet: pack, buffers: buffers };\n          };\n\n          /**\n           * Reconstructs a binary packet from its placeholder packet and buffers\n           *\n           * @param {Object} packet - event packet with placeholders\n           * @param {Array} buffers - binary buffers to put in placeholder positions\n           * @return {Object} reconstructed packet\n           * @api public\n           */\n\n          exports.reconstructPacket = function (packet, buffers) {\n            var curPlaceHolder = 0;\n\n            function _reconstructPacket(data) {\n              if (data && data._placeholder) {\n                var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n                return buf;\n              } else if (isArray(data)) {\n                for (var i = 0; i < data.length; i++) {\n                  data[i] = _reconstructPacket(data[i]);\n                }\n                return data;\n              } else if (data && 'object' == typeof data) {\n                for (var key in data) {\n                  data[key] = _reconstructPacket(data[key]);\n                }\n                return data;\n              }\n              return data;\n            }\n\n            packet.data = _reconstructPacket(packet.data);\n            packet.attachments = undefined; // no longer useful\n            return packet;\n          };\n\n          /**\n           * Asynchronously removes Blobs or Files from data via\n           * FileReader's readAsArrayBuffer method. Used before encoding\n           * data as msgpack. Calls callback with the blobless data.\n           *\n           * @param {Object} data\n           * @param {Function} callback\n           * @api private\n           */\n\n          exports.removeBlobs = function (data, callback) {\n            function _removeBlobs(obj, curKey, containingObject) {\n              if (!obj) return obj;\n\n              // convert any blob\n              if (global.Blob && obj instanceof Blob || global.File && obj instanceof File) {\n                pendingBlobs++;\n\n                // async filereader\n                var fileReader = new FileReader();\n                fileReader.onload = function () {\n                  // this.result == arraybuffer\n                  if (containingObject) {\n                    containingObject[curKey] = this.result;\n                  } else {\n                    bloblessData = this.result;\n                  }\n\n                  // if nothing pending its callback time\n                  if (! --pendingBlobs) {\n                    callback(bloblessData);\n                  }\n                };\n\n                fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n              } else if (isArray(obj)) {\n                  // handle array\n                  for (var i = 0; i < obj.length; i++) {\n                    _removeBlobs(obj[i], i, obj);\n                  }\n                } else if (obj && 'object' == typeof obj && !isBuf(obj)) {\n                  // and object\n                  for (var key in obj) {\n                    _removeBlobs(obj[key], key, obj);\n                  }\n                }\n            }\n\n            var pendingBlobs = 0;\n            var bloblessData = data;\n            _removeBlobs(bloblessData);\n            if (!pendingBlobs) {\n              callback(bloblessData);\n            }\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./is-buffer\": 48, \"isarray\": 43 }], 47: [function (_dereq_, module, exports) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var debug = _dereq_('debug')('socket.io-parser');\n        var json = _dereq_('json3');\n        var isArray = _dereq_('isarray');\n        var Emitter = _dereq_('component-emitter');\n        var binary = _dereq_('./binary');\n        var isBuf = _dereq_('./is-buffer');\n\n        /**\n         * Protocol version.\n         *\n         * @api public\n         */\n\n        exports.protocol = 4;\n\n        /**\n         * Packet types.\n         *\n         * @api public\n         */\n\n        exports.types = ['CONNECT', 'DISCONNECT', 'EVENT', 'BINARY_EVENT', 'ACK', 'BINARY_ACK', 'ERROR'];\n\n        /**\n         * Packet type `connect`.\n         *\n         * @api public\n         */\n\n        exports.CONNECT = 0;\n\n        /**\n         * Packet type `disconnect`.\n         *\n         * @api public\n         */\n\n        exports.DISCONNECT = 1;\n\n        /**\n         * Packet type `event`.\n         *\n         * @api public\n         */\n\n        exports.EVENT = 2;\n\n        /**\n         * Packet type `ack`.\n         *\n         * @api public\n         */\n\n        exports.ACK = 3;\n\n        /**\n         * Packet type `error`.\n         *\n         * @api public\n         */\n\n        exports.ERROR = 4;\n\n        /**\n         * Packet type 'binary event'\n         *\n         * @api public\n         */\n\n        exports.BINARY_EVENT = 5;\n\n        /**\n         * Packet type `binary ack`. For acks with binary arguments.\n         *\n         * @api public\n         */\n\n        exports.BINARY_ACK = 6;\n\n        /**\n         * Encoder constructor.\n         *\n         * @api public\n         */\n\n        exports.Encoder = Encoder;\n\n        /**\n         * Decoder constructor.\n         *\n         * @api public\n         */\n\n        exports.Decoder = Decoder;\n\n        /**\n         * A socket.io Encoder instance\n         *\n         * @api public\n         */\n\n        function Encoder() {}\n\n        /**\n         * Encode a packet as a single string if non-binary, or as a\n         * buffer sequence, depending on packet type.\n         *\n         * @param {Object} obj - packet object\n         * @param {Function} callback - function to handle encodings (likely engine.write)\n         * @return Calls callback with Array of encodings\n         * @api public\n         */\n\n        Encoder.prototype.encode = function (obj, callback) {\n          debug('encoding packet %j', obj);\n\n          if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n            encodeAsBinary(obj, callback);\n          } else {\n            var encoding = encodeAsString(obj);\n            callback([encoding]);\n          }\n        };\n\n        /**\n         * Encode packet as string.\n         *\n         * @param {Object} packet\n         * @return {String} encoded\n         * @api private\n         */\n\n        function encodeAsString(obj) {\n          var str = '';\n          var nsp = false;\n\n          // first is type\n          str += obj.type;\n\n          // attachments if we have them\n          if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n            str += obj.attachments;\n            str += '-';\n          }\n\n          // if we have a namespace other than `/`\n          // we append it followed by a comma `,`\n          if (obj.nsp && '/' != obj.nsp) {\n            nsp = true;\n            str += obj.nsp;\n          }\n\n          // immediately followed by the id\n          if (null != obj.id) {\n            if (nsp) {\n              str += ',';\n              nsp = false;\n            }\n            str += obj.id;\n          }\n\n          // json data\n          if (null != obj.data) {\n            if (nsp) str += ',';\n            str += json.stringify(obj.data);\n          }\n\n          debug('encoded %j as %s', obj, str);\n          return str;\n        }\n\n        /**\n         * Encode packet as 'buffer sequence' by removing blobs, and\n         * deconstructing packet into object with placeholders and\n         * a list of buffers.\n         *\n         * @param {Object} packet\n         * @return {Buffer} encoded\n         * @api private\n         */\n\n        function encodeAsBinary(obj, callback) {\n\n          function writeEncoding(bloblessData) {\n            var deconstruction = binary.deconstructPacket(bloblessData);\n            var pack = encodeAsString(deconstruction.packet);\n            var buffers = deconstruction.buffers;\n\n            buffers.unshift(pack); // add packet info to beginning of data list\n            callback(buffers); // write all the buffers\n          }\n\n          binary.removeBlobs(obj, writeEncoding);\n        }\n\n        /**\n         * A socket.io Decoder instance\n         *\n         * @return {Object} decoder\n         * @api public\n         */\n\n        function Decoder() {\n          this.reconstructor = null;\n        }\n\n        /**\n         * Mix in `Emitter` with Decoder.\n         */\n\n        Emitter(Decoder.prototype);\n\n        /**\n         * Decodes an ecoded packet string into packet JSON.\n         *\n         * @param {String} obj - encoded packet\n         * @return {Object} packet\n         * @api public\n         */\n\n        Decoder.prototype.add = function (obj) {\n          var packet;\n          if ('string' == typeof obj) {\n            packet = decodeString(obj);\n            if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) {\n              // binary packet's json\n              this.reconstructor = new BinaryReconstructor(packet);\n\n              // no attachments, labeled binary but no binary data to follow\n              if (this.reconstructor.reconPack.attachments === 0) {\n                this.emit('decoded', packet);\n              }\n            } else {\n              // non-binary full packet\n              this.emit('decoded', packet);\n            }\n          } else if (isBuf(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n              throw new Error('got binary data when not reconstructing a packet');\n            } else {\n              packet = this.reconstructor.takeBinaryData(obj);\n              if (packet) {\n                // received final buffer\n                this.reconstructor = null;\n                this.emit('decoded', packet);\n              }\n            }\n          } else {\n            throw new Error('Unknown type: ' + obj);\n          }\n        };\n\n        /**\n         * Decode a packet String (JSON data)\n         *\n         * @param {String} str\n         * @return {Object} packet\n         * @api private\n         */\n\n        function decodeString(str) {\n          var p = {};\n          var i = 0;\n\n          // look up type\n          p.type = Number(str.charAt(0));\n          if (null == exports.types[p.type]) return error();\n\n          // look up attachments if type binary\n          if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n            var buf = '';\n            while (str.charAt(++i) != '-') {\n              buf += str.charAt(i);\n              if (i == str.length) break;\n            }\n            if (buf != Number(buf) || str.charAt(i) != '-') {\n              throw new Error('Illegal attachments');\n            }\n            p.attachments = Number(buf);\n          }\n\n          // look up namespace (if any)\n          if ('/' == str.charAt(i + 1)) {\n            p.nsp = '';\n            while (++i) {\n              var c = str.charAt(i);\n              if (',' == c) break;\n              p.nsp += c;\n              if (i == str.length) break;\n            }\n          } else {\n            p.nsp = '/';\n          }\n\n          // look up id\n          var next = str.charAt(i + 1);\n          if ('' !== next && Number(next) == next) {\n            p.id = '';\n            while (++i) {\n              var c = str.charAt(i);\n              if (null == c || Number(c) != c) {\n                --i;\n                break;\n              }\n              p.id += str.charAt(i);\n              if (i == str.length) break;\n            }\n            p.id = Number(p.id);\n          }\n\n          // look up json data\n          if (str.charAt(++i)) {\n            try {\n              p.data = json.parse(str.substr(i));\n            } catch (e) {\n              return error();\n            }\n          }\n\n          debug('decoded %s as %j', str, p);\n          return p;\n        }\n\n        /**\n         * Deallocates a parser's resources\n         *\n         * @api public\n         */\n\n        Decoder.prototype.destroy = function () {\n          if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n          }\n        };\n\n        /**\n         * A manager of a binary event's 'buffer sequence'. Should\n         * be constructed whenever a packet of type BINARY_EVENT is\n         * decoded.\n         *\n         * @param {Object} packet\n         * @return {BinaryReconstructor} initialized reconstructor\n         * @api private\n         */\n\n        function BinaryReconstructor(packet) {\n          this.reconPack = packet;\n          this.buffers = [];\n        }\n\n        /**\n         * Method to be called when binary data received from connection\n         * after a BINARY_EVENT packet.\n         *\n         * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n         * @return {null | Object} returns null if more binary data is expected or\n         *   a reconstructed packet object if all buffers have been received.\n         * @api private\n         */\n\n        BinaryReconstructor.prototype.takeBinaryData = function (binData) {\n          this.buffers.push(binData);\n          if (this.buffers.length == this.reconPack.attachments) {\n            // done with buffer list\n            var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n          }\n          return null;\n        };\n\n        /**\n         * Cleans up binary packet reconstruction variables.\n         *\n         * @api private\n         */\n\n        BinaryReconstructor.prototype.finishedReconstruction = function () {\n          this.reconPack = null;\n          this.buffers = [];\n        };\n\n        function error(data) {\n          return {\n            type: exports.ERROR,\n            data: 'parser error'\n          };\n        }\n      }, { \"./binary\": 46, \"./is-buffer\": 48, \"component-emitter\": 49, \"debug\": 39, \"isarray\": 43, \"json3\": 50 }], 48: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          module.exports = isBuf;\n\n          /**\n           * Returns true if obj is a buffer or an arraybuffer.\n           *\n           * @api private\n           */\n\n          function isBuf(obj) {\n            return global.Buffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer;\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 49: [function (_dereq_, module, exports) {\n        arguments[4][15][0].apply(exports, arguments);\n      }, { \"dup\": 15 }], 50: [function (_dereq_, module, exports) {\n        (function (global) {\n          /*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n          ;(function () {\n            // Detect the `define` function exposed by asynchronous module loaders. The\n            // strict `define` check is necessary for compatibility with `r.js`.\n            var isLoader = typeof define === \"function\" && define.amd;\n\n            // A set of types used to distinguish objects from primitives.\n            var objectTypes = {\n              \"function\": true,\n              \"object\": true\n            };\n\n            // Detect the `exports` object exposed by CommonJS implementations.\n            var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n            // Use the `global` object exposed by Node (including Browserify via\n            // `insert-module-globals`), Narwhal, and Ringo as the default context,\n            // and the `window` object in browsers. Rhino exports a `global` function\n            // instead.\n            var root = objectTypes[typeof window] && window || this,\n                freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n            if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n              root = freeGlobal;\n            }\n\n            // Public: Initializes JSON 3 using the given `context` object, attaching the\n            // `stringify` and `parse` functions to the specified `exports` object.\n            function runInContext(context, exports) {\n              context || (context = root[\"Object\"]());\n              exports || (exports = root[\"Object\"]());\n\n              // Native constructor aliases.\n              var Number = context[\"Number\"] || root[\"Number\"],\n                  String = context[\"String\"] || root[\"String\"],\n                  Object = context[\"Object\"] || root[\"Object\"],\n                  Date = context[\"Date\"] || root[\"Date\"],\n                  SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n                  TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n                  Math = context[\"Math\"] || root[\"Math\"],\n                  nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n              // Delegate to the native `stringify` and `parse` implementations.\n              if (typeof nativeJSON == \"object\" && nativeJSON) {\n                exports.stringify = nativeJSON.stringify;\n                exports.parse = nativeJSON.parse;\n              }\n\n              // Convenience aliases.\n              var objectProto = Object.prototype,\n                  getClass = objectProto.toString,\n                  isProperty,\n                  forEach,\n                  undef;\n\n              // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n              var isExtended = new Date(-3509827334573292);\n              try {\n                // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n                // results for certain dates in Opera >= 10.53.\n                isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n                // Safari < 2.0.2 stores the internal millisecond time value correctly,\n                // but clips the values returned by the date methods to the range of\n                // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n                isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n              } catch (exception) {}\n\n              // Internal: Determines whether the native `JSON.stringify` and `parse`\n              // implementations are spec-compliant. Based on work by Ken Snyder.\n              function has(name) {\n                if (has[name] !== undef) {\n                  // Return cached feature test result.\n                  return has[name];\n                }\n                var isSupported;\n                if (name == \"bug-string-char-index\") {\n                  // IE <= 7 doesn't support accessing string characters using square\n                  // bracket notation. IE 8 only supports this for primitives.\n                  isSupported = \"a\"[0] != \"a\";\n                } else if (name == \"json\") {\n                  // Indicates whether both `JSON.stringify` and `JSON.parse` are\n                  // supported.\n                  isSupported = has(\"json-stringify\") && has(\"json-parse\");\n                } else {\n                  var value,\n                      serialized = \"{\\\"a\\\":[1,true,false,null,\\\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\\\"]}\";\n                  // Test `JSON.stringify`.\n                  if (name == \"json-stringify\") {\n                    var stringify = exports.stringify,\n                        stringifySupported = typeof stringify == \"function\" && isExtended;\n                    if (stringifySupported) {\n                      // A test function object with a custom `toJSON` method.\n                      (value = function () {\n                        return 1;\n                      }).toJSON = value;\n                      try {\n                        stringifySupported =\n                        // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                        // primitives as object literals.\n                        stringify(0) === \"0\" &&\n                        // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                        // literals.\n                        stringify(new Number()) === \"0\" && stringify(new String()) == '\"\"' &&\n                        // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                        // does not define a canonical JSON representation (this applies to\n                        // objects with `toJSON` properties as well, *unless* they are nested\n                        // within an object or array).\n                        stringify(getClass) === undef &&\n                        // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                        // FF 3.1b3 pass this test.\n                        stringify(undef) === undef &&\n                        // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                        // respectively, if the value is omitted entirely.\n                        stringify() === undef &&\n                        // FF 3.1b1, 2 throw an error if the given value is not a number,\n                        // string, array, object, Boolean, or `null` literal. This applies to\n                        // objects with custom `toJSON` methods as well, unless they are nested\n                        // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                        // methods entirely.\n                        stringify(value) === \"1\" && stringify([value]) == \"[1]\" &&\n                        // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                        // `\"[null]\"`.\n                        stringify([undef]) == \"[null]\" &&\n                        // YUI 3.0.0b1 fails to serialize `null` literals.\n                        stringify(null) == \"null\" &&\n                        // FF 3.1b1, 2 halts serialization if an array contains a function:\n                        // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                        // elides non-JSON values from objects and arrays, unless they\n                        // define custom `toJSON` methods.\n                        stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                        // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                        // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                        stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                        // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                        stringify(null, value) === \"1\" && stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                        // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                        // serialize extended years.\n                        stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                        // The milliseconds are optional in ES 5, but required in 5.1.\n                        stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                        // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                        // four-digit years instead of six-digit years. Credits: @Yaffle.\n                        stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                        // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                        // values less than 1000. Credits: @Yaffle.\n                        stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n                      } catch (exception) {\n                        stringifySupported = false;\n                      }\n                    }\n                    isSupported = stringifySupported;\n                  }\n                  // Test `JSON.parse`.\n                  if (name == \"json-parse\") {\n                    var parse = exports.parse;\n                    if (typeof parse == \"function\") {\n                      try {\n                        // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n                        // Conforming implementations should also coerce the initial argument to\n                        // a string prior to parsing.\n                        if (parse(\"0\") === 0 && !parse(false)) {\n                          // Simple parsing test.\n                          value = parse(serialized);\n                          var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                          if (parseSupported) {\n                            try {\n                              // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                              parseSupported = !parse('\"\\t\"');\n                            } catch (exception) {}\n                            if (parseSupported) {\n                              try {\n                                // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                                // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                                // certain octal literals.\n                                parseSupported = parse(\"01\") !== 1;\n                              } catch (exception) {}\n                            }\n                            if (parseSupported) {\n                              try {\n                                // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                                // points. These environments, along with FF 3.1b1 and 2,\n                                // also allow trailing commas in JSON objects and arrays.\n                                parseSupported = parse(\"1.\") !== 1;\n                              } catch (exception) {}\n                            }\n                          }\n                        }\n                      } catch (exception) {\n                        parseSupported = false;\n                      }\n                    }\n                    isSupported = parseSupported;\n                  }\n                }\n                return has[name] = !!isSupported;\n              }\n\n              if (!has(\"json\")) {\n                // Common `[[Class]]` name aliases.\n                var functionClass = \"[object Function]\",\n                    dateClass = \"[object Date]\",\n                    numberClass = \"[object Number]\",\n                    stringClass = \"[object String]\",\n                    arrayClass = \"[object Array]\",\n                    booleanClass = \"[object Boolean]\";\n\n                // Detect incomplete support for accessing string characters by index.\n                var charIndexBuggy = has(\"bug-string-char-index\");\n\n                // Define additional utility methods if the `Date` methods are buggy.\n                if (!isExtended) {\n                  var floor = Math.floor;\n                  // A mapping between the months of the year and the number of days between\n                  // January 1st and the first of the respective month.\n                  var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n                  // Internal: Calculates the number of days between the Unix epoch and the\n                  // first day of the given month.\n                  var getDay = function getDay(year, month) {\n                    return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n                  };\n                }\n\n                // Internal: Determines if a property is a direct property of the given\n                // object. Delegates to the native `Object#hasOwnProperty` method.\n                if (!(isProperty = objectProto.hasOwnProperty)) {\n                  isProperty = function (property) {\n                    var members = {},\n                        constructor;\n                    if ((members.__proto__ = null, members.__proto__ = {\n                      // The *proto* property cannot be set multiple times in recent\n                      // versions of Firefox and SeaMonkey.\n                      \"toString\": 1\n                    }, members).toString != getClass) {\n                      // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n                      // supports the mutable *proto* property.\n                      isProperty = function (property) {\n                        // Capture and break the object's prototype chain (see section 8.6.2\n                        // of the ES 5.1 spec). The parenthesized expression prevents an\n                        // unsafe transformation by the Closure Compiler.\n                        var original = this.__proto__,\n                            result = (property in (this.__proto__ = null, this));\n                        // Restore the original prototype chain.\n                        this.__proto__ = original;\n                        return result;\n                      };\n                    } else {\n                      // Capture a reference to the top-level `Object` constructor.\n                      constructor = members.constructor;\n                      // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n                      // other environments.\n                      isProperty = function (property) {\n                        var parent = (this.constructor || constructor).prototype;\n                        return property in this && !(property in parent && this[property] === parent[property]);\n                      };\n                    }\n                    members = null;\n                    return isProperty.call(this, property);\n                  };\n                }\n\n                // Internal: Normalizes the `for...in` iteration algorithm across\n                // environments. Each enumerated key is yielded to a `callback` function.\n                forEach = function (object, callback) {\n                  var size = 0,\n                      Properties,\n                      members,\n                      property;\n\n                  // Tests for bugs in the current environment's `for...in` algorithm. The\n                  // `valueOf` property inherits the non-enumerable flag from\n                  // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n                  (Properties = function () {\n                    this.valueOf = 0;\n                  }).prototype.valueOf = 0;\n\n                  // Iterate over a new instance of the `Properties` class.\n                  members = new Properties();\n                  for (property in members) {\n                    // Ignore all properties inherited from `Object.prototype`.\n                    if (isProperty.call(members, property)) {\n                      size++;\n                    }\n                  }\n                  Properties = members = null;\n\n                  // Normalize the iteration algorithm.\n                  if (!size) {\n                    // A list of non-enumerable properties inherited from `Object.prototype`.\n                    members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n                    // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n                    // properties.\n                    forEach = function (object, callback) {\n                      var isFunction = getClass.call(object) == functionClass,\n                          property,\n                          length;\n                      var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n                      for (property in object) {\n                        // Gecko <= 1.0 enumerates the `prototype` property of functions under\n                        // certain conditions; IE does not.\n                        if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                          callback(property);\n                        }\n                      }\n                      // Manually invoke the callback for each non-enumerable property.\n                      for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n                    };\n                  } else if (size == 2) {\n                    // Safari <= 2.0.4 enumerates shadowed properties twice.\n                    forEach = function (object, callback) {\n                      // Create a set of iterated properties.\n                      var members = {},\n                          isFunction = getClass.call(object) == functionClass,\n                          property;\n                      for (property in object) {\n                        // Store each property name to prevent double enumeration. The\n                        // `prototype` property of functions is not enumerated due to cross-\n                        // environment inconsistencies.\n                        if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                          callback(property);\n                        }\n                      }\n                    };\n                  } else {\n                    // No bugs detected; use the standard `for...in` algorithm.\n                    forEach = function (object, callback) {\n                      var isFunction = getClass.call(object) == functionClass,\n                          property,\n                          isConstructor;\n                      for (property in object) {\n                        if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                          callback(property);\n                        }\n                      }\n                      // Manually invoke the callback for the `constructor` property due to\n                      // cross-environment inconsistencies.\n                      if (isConstructor || isProperty.call(object, property = \"constructor\")) {\n                        callback(property);\n                      }\n                    };\n                  }\n                  return forEach(object, callback);\n                };\n\n                // Public: Serializes a JavaScript `value` as a JSON string. The optional\n                // `filter` argument may specify either a function that alters how object and\n                // array members are serialized, or an array of strings and numbers that\n                // indicates which properties should be serialized. The optional `width`\n                // argument may be either a string or number that specifies the indentation\n                // level of the output.\n                if (!has(\"json-stringify\")) {\n                  // Internal: A map of control characters and their escaped equivalents.\n                  var Escapes = {\n                    92: \"\\\\\\\\\",\n                    34: '\\\\\"',\n                    8: \"\\\\b\",\n                    12: \"\\\\f\",\n                    10: \"\\\\n\",\n                    13: \"\\\\r\",\n                    9: \"\\\\t\"\n                  };\n\n                  // Internal: Converts `value` into a zero-padded string such that its\n                  // length is at least equal to `width`. The `width` must be <= 6.\n                  var leadingZeroes = \"000000\";\n                  var toPaddedString = function toPaddedString(width, value) {\n                    // The `|| 0` expression is necessary to work around a bug in\n                    // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n                    return (leadingZeroes + (value || 0)).slice(-width);\n                  };\n\n                  // Internal: Double-quotes a string `value`, replacing all ASCII control\n                  // characters (characters with code unit values between 0 and 31) with\n                  // their escaped equivalents. This is an implementation of the\n                  // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n                  var unicodePrefix = \"\\\\u00\";\n                  var quote = function quote(value) {\n                    var result = '\"',\n                        index = 0,\n                        length = value.length,\n                        useCharIndex = !charIndexBuggy || length > 10;\n                    var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n                    for (; index < length; index++) {\n                      var charCode = value.charCodeAt(index);\n                      // If the character is a control character, append its Unicode or\n                      // shorthand escape sequence; otherwise, append the character as-is.\n                      switch (charCode) {\n                        case 8:case 9:case 10:case 12:case 13:case 34:case 92:\n                          result += Escapes[charCode];\n                          break;\n                        default:\n                          if (charCode < 32) {\n                            result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                            break;\n                          }\n                          result += useCharIndex ? symbols[index] : value.charAt(index);\n                      }\n                    }\n                    return result + '\"';\n                  };\n\n                  // Internal: Recursively serializes an object. Implements the\n                  // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n                  var serialize = function serialize(property, object, callback, properties, whitespace, indentation, stack) {\n                    var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n                    try {\n                      // Necessary for host object support.\n                      value = object[property];\n                    } catch (exception) {}\n                    if (typeof value == \"object\" && value) {\n                      className = getClass.call(value);\n                      if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n                        if (value > -1 / 0 && value < 1 / 0) {\n                          // Dates are serialized according to the `Date#toJSON` method\n                          // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                          // for the ISO 8601 date time string format.\n                          if (getDay) {\n                            // Manually compute the year, month, date, hours, minutes,\n                            // seconds, and milliseconds if the `getUTC*` methods are\n                            // buggy. Adapted from @Yaffle's `date-shim` project.\n                            date = floor(value / 864e5);\n                            for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                            for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                            date = 1 + date - getDay(year, month);\n                            // The `time` value specifies the time within the day (see ES\n                            // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                            // to compute `A modulo B`, as the `%` operator does not\n                            // correspond to the `modulo` operation for negative numbers.\n                            time = (value % 864e5 + 864e5) % 864e5;\n                            // The hours, minutes, seconds, and milliseconds are obtained by\n                            // decomposing the time within the day. See section 15.9.1.10.\n                            hours = floor(time / 36e5) % 24;\n                            minutes = floor(time / 6e4) % 60;\n                            seconds = floor(time / 1e3) % 60;\n                            milliseconds = time % 1e3;\n                          } else {\n                            year = value.getUTCFullYear();\n                            month = value.getUTCMonth();\n                            date = value.getUTCDate();\n                            hours = value.getUTCHours();\n                            minutes = value.getUTCMinutes();\n                            seconds = value.getUTCSeconds();\n                            milliseconds = value.getUTCMilliseconds();\n                          }\n                          // Serialize extended years correctly.\n                          value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) + \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                          // Months, dates, hours, minutes, and seconds should have two\n                          // digits; milliseconds should have three.\n                          \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                          // Milliseconds are optional in ES 5.0, but required in 5.1.\n                          \".\" + toPaddedString(3, milliseconds) + \"Z\";\n                        } else {\n                          value = null;\n                        }\n                      } else if (typeof value.toJSON == \"function\" && (className != numberClass && className != stringClass && className != arrayClass || isProperty.call(value, \"toJSON\"))) {\n                        // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n                        // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n                        // ignores all `toJSON` methods on these objects unless they are\n                        // defined directly on an instance.\n                        value = value.toJSON(property);\n                      }\n                    }\n                    if (callback) {\n                      // If a replacement function was provided, call it to obtain the value\n                      // for serialization.\n                      value = callback.call(object, property, value);\n                    }\n                    if (value === null) {\n                      return \"null\";\n                    }\n                    className = getClass.call(value);\n                    if (className == booleanClass) {\n                      // Booleans are represented literally.\n                      return \"\" + value;\n                    } else if (className == numberClass) {\n                      // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n                      // `\"null\"`.\n                      return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n                    } else if (className == stringClass) {\n                      // Strings are double-quoted and escaped.\n                      return quote(\"\" + value);\n                    }\n                    // Recursively serialize objects and arrays.\n                    if (typeof value == \"object\") {\n                      // Check for cyclic structures. This is a linear search; performance\n                      // is inversely proportional to the number of unique nested objects.\n                      for (length = stack.length; length--;) {\n                        if (stack[length] === value) {\n                          // Cyclic structures cannot be serialized by `JSON.stringify`.\n                          throw TypeError();\n                        }\n                      }\n                      // Add the object to the stack of traversed objects.\n                      stack.push(value);\n                      results = [];\n                      // Save the current indentation level and indent one additional level.\n                      prefix = indentation;\n                      indentation += whitespace;\n                      if (className == arrayClass) {\n                        // Recursively serialize array elements.\n                        for (index = 0, length = value.length; index < length; index++) {\n                          element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                          results.push(element === undef ? \"null\" : element);\n                        }\n                        result = results.length ? whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : \"[\" + results.join(\",\") + \"]\" : \"[]\";\n                      } else {\n                        // Recursively serialize object members. Members are selected from\n                        // either a user-specified list of property names, or the object\n                        // itself.\n                        forEach(properties || value, function (property) {\n                          var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                          if (element !== undef) {\n                            // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                            // is not the empty string, let `member` {quote(property) + \":\"}\n                            // be the concatenation of `member` and the `space` character.\"\n                            // The \"`space` character\" refers to the literal space\n                            // character, not the `space` {width} argument provided to\n                            // `JSON.stringify`.\n                            results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                          }\n                        });\n                        result = results.length ? whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : \"{\" + results.join(\",\") + \"}\" : \"{}\";\n                      }\n                      // Remove the object from the traversed object stack.\n                      stack.pop();\n                      return result;\n                    }\n                  };\n\n                  // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n                  exports.stringify = function (source, filter, width) {\n                    var whitespace, callback, properties, className;\n                    if (objectTypes[typeof filter] && filter) {\n                      if ((className = getClass.call(filter)) == functionClass) {\n                        callback = filter;\n                      } else if (className == arrayClass) {\n                        // Convert the property names array into a makeshift set.\n                        properties = {};\n                        for (var index = 0, length = filter.length, value; index < length; value = filter[index++], (className = getClass.call(value), className == stringClass || className == numberClass) && (properties[value] = 1));\n                      }\n                    }\n                    if (width) {\n                      if ((className = getClass.call(width)) == numberClass) {\n                        // Convert the `width` to an integer and create a string containing\n                        // `width` number of space characters.\n                        if ((width -= width % 1) > 0) {\n                          for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n                        }\n                      } else if (className == stringClass) {\n                        whitespace = width.length <= 10 ? width : width.slice(0, 10);\n                      }\n                    }\n                    // Opera <= 7.54u2 discards the values associated with empty string keys\n                    // (`\"\"`) only if they are used directly within an object member list\n                    // (e.g., `!(\"\" in { \"\": 1})`).\n                    return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n                  };\n                }\n\n                // Public: Parses a JSON source string.\n                if (!has(\"json-parse\")) {\n                  var fromCharCode = String.fromCharCode;\n\n                  // Internal: A map of escaped control characters and their unescaped\n                  // equivalents.\n                  var Unescapes = {\n                    92: \"\\\\\",\n                    34: '\"',\n                    47: \"/\",\n                    98: \"\\b\",\n                    116: \"\\t\",\n                    110: \"\\n\",\n                    102: \"\\f\",\n                    114: \"\\r\"\n                  };\n\n                  // Internal: Stores the parser state.\n                  var Index, Source;\n\n                  // Internal: Resets the parser state and throws a `SyntaxError`.\n                  var abort = function abort() {\n                    Index = Source = null;\n                    throw SyntaxError();\n                  };\n\n                  // Internal: Returns the next token, or `\"$\"` if the parser has reached\n                  // the end of the source string. A token may be a string, number, `null`\n                  // literal, or Boolean literal.\n                  var lex = function lex() {\n                    var source = Source,\n                        length = source.length,\n                        value,\n                        begin,\n                        position,\n                        isSigned,\n                        charCode;\n                    while (Index < length) {\n                      charCode = source.charCodeAt(Index);\n                      switch (charCode) {\n                        case 9:case 10:case 13:case 32:\n                          // Skip whitespace tokens, including tabs, carriage returns, line\n                          // feeds, and space characters.\n                          Index++;\n                          break;\n                        case 123:case 125:case 91:case 93:case 58:case 44:\n                          // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                          // the current position.\n                          value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                          Index++;\n                          return value;\n                        case 34:\n                          // `\"` delimits a JSON string; advance to the next character and\n                          // begin parsing the string. String tokens are prefixed with the\n                          // sentinel `@` character to distinguish them from punctuators and\n                          // end-of-string tokens.\n                          for (value = \"@\", Index++; Index < length;) {\n                            charCode = source.charCodeAt(Index);\n                            if (charCode < 32) {\n                              // Unescaped ASCII control characters (those with a code unit\n                              // less than the space character) are not permitted.\n                              abort();\n                            } else if (charCode == 92) {\n                              // A reverse solidus (`\\`) marks the beginning of an escaped\n                              // control character (including `\"`, `\\`, and `/`) or Unicode\n                              // escape sequence.\n                              charCode = source.charCodeAt(++Index);\n                              switch (charCode) {\n                                case 92:case 34:case 47:case 98:case 116:case 110:case 102:case 114:\n                                  // Revive escaped control characters.\n                                  value += Unescapes[charCode];\n                                  Index++;\n                                  break;\n                                case 117:\n                                  // `\\u` marks the beginning of a Unicode escape sequence.\n                                  // Advance to the first character and validate the\n                                  // four-digit code point.\n                                  begin = ++Index;\n                                  for (position = Index + 4; Index < position; Index++) {\n                                    charCode = source.charCodeAt(Index);\n                                    // A valid sequence comprises four hexdigits (case-\n                                    // insensitive) that form a single hexadecimal value.\n                                    if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                                      // Invalid Unicode escape sequence.\n                                      abort();\n                                    }\n                                  }\n                                  // Revive the escaped character.\n                                  value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                                  break;\n                                default:\n                                  // Invalid escape sequence.\n                                  abort();\n                              }\n                            } else {\n                              if (charCode == 34) {\n                                // An unescaped double-quote character marks the end of the\n                                // string.\n                                break;\n                              }\n                              charCode = source.charCodeAt(Index);\n                              begin = Index;\n                              // Optimize for the common case where a string is valid.\n                              while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                                charCode = source.charCodeAt(++Index);\n                              }\n                              // Append the string as-is.\n                              value += source.slice(begin, Index);\n                            }\n                          }\n                          if (source.charCodeAt(Index) == 34) {\n                            // Advance to the next character and return the revived string.\n                            Index++;\n                            return value;\n                          }\n                          // Unterminated string.\n                          abort();\n                        default:\n                          // Parse numbers and literals.\n                          begin = Index;\n                          // Advance past the negative sign, if one is specified.\n                          if (charCode == 45) {\n                            isSigned = true;\n                            charCode = source.charCodeAt(++Index);\n                          }\n                          // Parse an integer or floating-point value.\n                          if (charCode >= 48 && charCode <= 57) {\n                            // Leading zeroes are interpreted as octal literals.\n                            if (charCode == 48 && (charCode = source.charCodeAt(Index + 1), charCode >= 48 && charCode <= 57)) {\n                              // Illegal octal literal.\n                              abort();\n                            }\n                            isSigned = false;\n                            // Parse the integer component.\n                            for (; Index < length && (charCode = source.charCodeAt(Index), charCode >= 48 && charCode <= 57); Index++);\n                            // Floats cannot contain a leading decimal point; however, this\n                            // case is already accounted for by the parser.\n                            if (source.charCodeAt(Index) == 46) {\n                              position = ++Index;\n                              // Parse the decimal component.\n                              for (; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++);\n                              if (position == Index) {\n                                // Illegal trailing decimal.\n                                abort();\n                              }\n                              Index = position;\n                            }\n                            // Parse exponents. The `e` denoting the exponent is\n                            // case-insensitive.\n                            charCode = source.charCodeAt(Index);\n                            if (charCode == 101 || charCode == 69) {\n                              charCode = source.charCodeAt(++Index);\n                              // Skip past the sign following the exponent, if one is\n                              // specified.\n                              if (charCode == 43 || charCode == 45) {\n                                Index++;\n                              }\n                              // Parse the exponential component.\n                              for (position = Index; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++);\n                              if (position == Index) {\n                                // Illegal empty exponent.\n                                abort();\n                              }\n                              Index = position;\n                            }\n                            // Coerce the parsed value to a JavaScript number.\n                            return +source.slice(begin, Index);\n                          }\n                          // A negative sign may only precede numbers.\n                          if (isSigned) {\n                            abort();\n                          }\n                          // `true`, `false`, and `null` literals.\n                          if (source.slice(Index, Index + 4) == \"true\") {\n                            Index += 4;\n                            return true;\n                          } else if (source.slice(Index, Index + 5) == \"false\") {\n                            Index += 5;\n                            return false;\n                          } else if (source.slice(Index, Index + 4) == \"null\") {\n                            Index += 4;\n                            return null;\n                          }\n                          // Unrecognized token.\n                          abort();\n                      }\n                    }\n                    // Return the sentinel `$` character if the parser has reached the end\n                    // of the source string.\n                    return \"$\";\n                  };\n\n                  // Internal: Parses a JSON `value` token.\n                  var get = function get(value) {\n                    var results, hasMembers;\n                    if (value == \"$\") {\n                      // Unexpected end of input.\n                      abort();\n                    }\n                    if (typeof value == \"string\") {\n                      if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n                        // Remove the sentinel `@` character.\n                        return value.slice(1);\n                      }\n                      // Parse object and array literals.\n                      if (value == \"[\") {\n                        // Parses a JSON array, returning a new JavaScript array.\n                        results = [];\n                        for (;; hasMembers || (hasMembers = true)) {\n                          value = lex();\n                          // A closing square bracket marks the end of the array literal.\n                          if (value == \"]\") {\n                            break;\n                          }\n                          // If the array literal contains elements, the current token\n                          // should be a comma separating the previous element from the\n                          // next.\n                          if (hasMembers) {\n                            if (value == \",\") {\n                              value = lex();\n                              if (value == \"]\") {\n                                // Unexpected trailing `,` in array literal.\n                                abort();\n                              }\n                            } else {\n                              // A `,` must separate each array element.\n                              abort();\n                            }\n                          }\n                          // Elisions and leading commas are not permitted.\n                          if (value == \",\") {\n                            abort();\n                          }\n                          results.push(get(value));\n                        }\n                        return results;\n                      } else if (value == \"{\") {\n                        // Parses a JSON object, returning a new JavaScript object.\n                        results = {};\n                        for (;; hasMembers || (hasMembers = true)) {\n                          value = lex();\n                          // A closing curly brace marks the end of the object literal.\n                          if (value == \"}\") {\n                            break;\n                          }\n                          // If the object literal contains members, the current token\n                          // should be a comma separator.\n                          if (hasMembers) {\n                            if (value == \",\") {\n                              value = lex();\n                              if (value == \"}\") {\n                                // Unexpected trailing `,` in object literal.\n                                abort();\n                              }\n                            } else {\n                              // A `,` must separate each object member.\n                              abort();\n                            }\n                          }\n                          // Leading commas are not permitted, object property names must be\n                          // double-quoted strings, and a `:` must separate each property\n                          // name and value.\n                          if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                            abort();\n                          }\n                          results[value.slice(1)] = get(lex());\n                        }\n                        return results;\n                      }\n                      // Unexpected token encountered.\n                      abort();\n                    }\n                    return value;\n                  };\n\n                  // Internal: Updates a traversed object member.\n                  var update = function update(source, property, callback) {\n                    var element = walk(source, property, callback);\n                    if (element === undef) {\n                      delete source[property];\n                    } else {\n                      source[property] = element;\n                    }\n                  };\n\n                  // Internal: Recursively traverses a parsed JSON object, invoking the\n                  // `callback` function for each value. This is an implementation of the\n                  // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n                  var walk = function walk(source, property, callback) {\n                    var value = source[property],\n                        length;\n                    if (typeof value == \"object\" && value) {\n                      // `forEach` can't be used to traverse an array in Opera <= 8.54\n                      // because its `Object#hasOwnProperty` implementation returns `false`\n                      // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n                      if (getClass.call(value) == arrayClass) {\n                        for (length = value.length; length--;) {\n                          update(value, length, callback);\n                        }\n                      } else {\n                        forEach(value, function (property) {\n                          update(value, property, callback);\n                        });\n                      }\n                    }\n                    return callback.call(source, property, value);\n                  };\n\n                  // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n                  exports.parse = function (source, callback) {\n                    var result, value;\n                    Index = 0;\n                    Source = \"\" + source;\n                    result = get(lex());\n                    // If a JSON string contains multiple tokens, it is invalid.\n                    if (lex() != \"$\") {\n                      abort();\n                    }\n                    // Reset the parser state.\n                    Index = Source = null;\n                    return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n                  };\n                }\n              }\n\n              exports[\"runInContext\"] = runInContext;\n              return exports;\n            }\n\n            if (freeExports && !isLoader) {\n              // Export for CommonJS environments.\n              runInContext(root, freeExports);\n            } else {\n              // Export for web browsers and JavaScript engines.\n              var nativeJSON = root.JSON,\n                  previousJSON = root[\"JSON3\"],\n                  isRestored = false;\n\n              var JSON3 = runInContext(root, root[\"JSON3\"] = {\n                // Public: Restores the original value of the global `JSON` object and\n                // returns a reference to the `JSON3` object.\n                \"noConflict\": function noConflict() {\n                  if (!isRestored) {\n                    isRestored = true;\n                    root.JSON = nativeJSON;\n                    root[\"JSON3\"] = previousJSON;\n                    nativeJSON = previousJSON = null;\n                  }\n                  return JSON3;\n                }\n              });\n\n              root.JSON = {\n                \"parse\": JSON3.parse,\n                \"stringify\": JSON3.stringify\n              };\n            }\n\n            // Export for asynchronous module loaders.\n            if (isLoader) {\n              define(function () {\n                return JSON3;\n              });\n            }\n          }).call(this);\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 51: [function (_dereq_, module, exports) {\n        module.exports = toArray;\n\n        function toArray(list, index) {\n          var array = [];\n\n          index = index || 0;\n\n          for (var i = index || 0; i < list.length; i++) {\n            array[i - index] = list[i];\n          }\n\n          return array;\n        }\n      }, {}] }, {}, [31])(31);\n  });\n}\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, '64207bwT5lKDa3HBoPU6Hz0', 'tankScript');\n// Script/Gamescript/tankScript.js\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        lbname: {\n            type: cc.Label,\n            \"default\": null\n        },\n        bodytank: {\n            type: cc.Node,\n            \"default\": null\n        },\n        guntank: {\n            type: cc.Node,\n            \"default\": null\n        },\n\n        lbscore: {\n            type: cc.Label,\n            \"default\": null\n        }\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.lbname.string = \"\";\n        this.dirMv = 0;\n        this.speedMove = 0;\n        this.nextFrameMove = 0;\n\n        this.ammo = 0;\n        this.hp = 0;\n        this.level = 0;\n\n        this.count_updateRun = 0;\n\n        this.needUpdateName = true;\n\n        //var sp_body=this.node.children[0];\n        //var sprite_body=sp_body.getComponent(\"cc.Sprite\");\n        //sprite_body.spriteFrame=this.spAllCharacter.getSpriteFrame(\"TankColor-t5_b\");\n    },\n    //[{\"x\":\"-61.50\",\"y\":\"-52.00\",\"id\":\"48\",\"r\":\"0.00\",\"level\":\"1\",\"score\":\"0\",\"hp\":\"80\",\"ammo\":\"140\",\"sp\":\"50\",\"gR\":\"180\"}],\"e\":[]}\n\n    updateFrame: function updateFrame(obj_info) {\n        var x_p = Number(obj_info.x);\n        var y_p = Number(obj_info.y);\n        this.node.isActiveSC = true;\n        this.node.setPosition(cc.p(x_p, y_p));\n\n        this.bodytank.rotation = Number(obj_info.r);\n\n        var gunR = Number(obj_info.gR);\n        if (gunR > 180) {\n            gunR = gunR - 360;\n        }\n        gunR = -gunR;\n        //console.log(\"obj_info.dirMV: %s\",obj_info.dir);\n        this.dirMv = parseInt(obj_info.dir);\n        this.speedMove = parseInt(obj_info.sp);\n\n        this.nextFrameMove = 0;\n\n        this.Opos = cc.p(x_p, y_p);\n        this.min_x = x_p - 12;\n        this.max_x = x_p + 12;\n        this.min_y = y_p - 12;\n        this.max_y = y_p + 12;\n\n        //this.score=obj_info.score;\n        //this.ammo=parseInt(obj_info.ammo);\n        //this.hp=parseInt(obj_info.hp);\n\n        var tmpLevel = parseInt(obj_info.level);\n        if (tmpLevel != this.level) {\n            this.level = tmpLevel;\n            var parrentNode = this.node.parent;\n            var mapScript = parrentNode.getComponent(\"GameMap\");\n\n            var sp_body = this.node.children[0];\n            var sprite_body = sp_body.getComponent(\"cc.Sprite\");\n            sprite_body.spriteFrame = mapScript.tankAtlas.getSpriteFrame(\"TankColor-t\" + this.colorID + \"_b\");\n            this.count_updateRun++;\n            var tml_lv_gun = 1;\n            if (this.level >= 10 && this.level < 35) {\n                tml_lv_gun = 2;\n            } else if (this.level >= 35 && this.level < 79) {\n                tml_lv_gun = 3;\n            } else if (this.level >= 79) {\n                tml_lv_gun = 4;\n            }\n            if (this.levelGun != tml_lv_gun) {\n                this.levelGun = tml_lv_gun;\n                var sp_gun = this.node.children[2];\n                var sprite_gun = sp_gun.getComponent(\"cc.Sprite\");\n                this.count_updateRun++;\n                sprite_gun.spriteFrame = mapScript.tankAtlas.getSpriteFrame(\"TankColor-t\" + this.colorID + \"_l\" + this.levelGun);\n            }\n        }\n\n        var tmp_hp = parseInt(obj_info.hp);\n        if (tmp_hp != this.hp) {\n            this.hp = tmp_hp;\n            var nodepr = this.node.children[1];\n            var nodeprsc = nodepr.children[0];\n            var maxHP = 80 + (this.level - 1) * 15;\n            var Xsc = this.hp / maxHP;\n            if (Xsc > 1) {\n                Xsc = 1;\n            } else if (Xsc < 0) {\n                Xsc = 0;\n            }\n            nodeprsc.scaleX = Xsc;\n            this.count_updateRun++;\n        }\n\n        var name = obj_info.name;\n        if (name.length >= 1 && this.needUpdateName) {\n            this.needUpdateName = false;\n            var nodename = this.node.children[3];\n            var lbname = nodename.getComponent(\"cc.Label\");\n            lbname.string = name;\n            this.count_updateRun++;\n        }\n\n        var nodescore = this.node.children[4];\n        var lbscore = nodescore.getComponent(\"cc.Label\");\n        lbscore.string = \"add:\" + this.count_updateRun;\n\n        this.guntank.rotation = gunR;\n        //this.lbname.string=\"GuestXXXX\";\n    }\n\n});\n\ncc._RFpop();"],"sourceRoot":"/source/"}